[
    {
        "id": "137ba64f0a9dfbf0",
        "type": "tab",
        "label": "Receive Data",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e8287d7944e724f7",
        "type": "tab",
        "label": "Postgress",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7119d5927b25a580",
        "type": "tab",
        "label": "Home Assistant",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7d74b0c161f17740",
        "type": "tab",
        "label": "DashBoard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ada916479fb34c9b",
        "type": "tab",
        "label": "Whatsapp",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c859e23eb133d12b",
        "type": "tab",
        "label": "LoRa",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8b30735b63615ae7",
        "type": "mqtt-broker",
        "name": "Raspbarry",
        "broker": "10.145.5.209",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "de1301db201cde6d",
        "type": "mqtt-broker",
        "name": "Medidor de Energia",
        "broker": "10.145.5.179",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "fc6bd11bac1af11f",
        "type": "postgreSQLConfig",
        "name": "NOCS",
        "host": "nocs_solucoes.postgresql.dbaas.com.br",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "nocs_solucoes",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "nocs_solucoes",
        "userFieldType": "str",
        "password": "nocsPass257@#",
        "passwordFieldType": "str"
    },
    {
        "id": "410522af87089496",
        "type": "postgresdb",
        "cfgname": "NOCS",
        "hostname": "nocs_solucoes.postgresql.dbaas.com.br",
        "port": "5432",
        "db": "nocs_solucoes",
        "ssl": false
    },
    {
        "id": "2a911f79a93f391d",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#cc0000",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#cc0000",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#cc0000",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#ff1a1a",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#cc0000",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "a69e510073b1e244",
        "type": "ui_tab",
        "name": "Dispositivo 01",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a298966aa1d32b7a",
        "type": "ui_tab",
        "name": "Dispositivo 02",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8d5821d35c2d330f",
        "type": "ui_group",
        "name": "Gráficos",
        "tab": "a298966aa1d32b7a",
        "order": 1,
        "disp": true,
        "width": "22",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a4a51d2a6b08e863",
        "type": "ui_group",
        "name": "Gráficos",
        "tab": "a69e510073b1e244",
        "order": 1,
        "disp": true,
        "width": "22",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d7b0d98cc8afaccc",
        "type": "ui_spacer",
        "z": "137ba64f0a9dfbf0",
        "name": "spacer",
        "group": "a4a51d2a6b08e863",
        "order": 3,
        "width": "20",
        "height": "1"
    },
    {
        "id": "bb46ddd1beb4b9ef",
        "type": "ui_spacer",
        "z": "137ba64f0a9dfbf0",
        "name": "spacer",
        "group": "a4a51d2a6b08e863",
        "order": 1,
        "width": "1",
        "height": "21"
    },
    {
        "id": "7917fdf6d690c63e",
        "type": "ui_spacer",
        "z": "137ba64f0a9dfbf0",
        "name": "spacer",
        "group": "8d5821d35c2d330f",
        "order": 1,
        "width": "1",
        "height": "21"
    },
    {
        "id": "78ba378cfd8e6bb4",
        "type": "ui_spacer",
        "z": "137ba64f0a9dfbf0",
        "name": "spacer",
        "group": "a4a51d2a6b08e863",
        "order": 5,
        "width": "22",
        "height": "1"
    },
    {
        "id": "b365cf9a8147b90c",
        "type": "ui_spacer",
        "z": "137ba64f0a9dfbf0",
        "name": "spacer",
        "group": "8d5821d35c2d330f",
        "order": 5,
        "width": "22",
        "height": "1"
    },
    {
        "id": "8f9b3699bea7278c",
        "type": "ui_tab",
        "name": "Dispositivo 03",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6a2620f23525088d",
        "type": "ui_group",
        "name": "Gráficos",
        "tab": "8f9b3699bea7278c",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e3ef033ab390569e",
        "type": "ui_group",
        "name": "Botão",
        "tab": "8f9b3699bea7278c",
        "order": 2,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8e8d9899670ca511",
        "type": "ui_spacer",
        "z": "137ba64f0a9dfbf0",
        "name": "spacer",
        "group": "6a2620f23525088d",
        "order": 1,
        "width": "1",
        "height": "18"
    },
    {
        "id": "5801e45d4b2b3cda",
        "type": "ui_spacer",
        "z": "137ba64f0a9dfbf0",
        "name": "spacer",
        "group": "6a2620f23525088d",
        "order": 3,
        "width": "10",
        "height": "1"
    },
    {
        "id": "6cb479ba73811241",
        "type": "ui_spacer",
        "z": "137ba64f0a9dfbf0",
        "name": "spacer",
        "group": "6a2620f23525088d",
        "order": 7,
        "width": "10",
        "height": "1"
    },
    {
        "id": "06a045e925ebd992",
        "type": "ui_spacer",
        "z": "137ba64f0a9dfbf0",
        "name": "spacer",
        "group": "6a2620f23525088d",
        "order": 5,
        "width": "10",
        "height": "1"
    },
    {
        "id": "5e7a8c3d6fe4dcc6",
        "type": "ui_spacer",
        "z": "137ba64f0a9dfbf0",
        "name": "spacer",
        "group": "6a2620f23525088d",
        "order": 1,
        "width": "10",
        "height": "1"
    },
    {
        "id": "991a2840523a4942",
        "type": "xterm_config",
        "rows": 60,
        "columns": 120,
        "cursorStyle": "bar",
        "fastScrollModifier": "alt",
        "scrollSensitivity": 1,
        "fastScrollSensitivity": 1,
        "scrollback": 1000,
        "backgroundColor": "#000000",
        "foregroundColor": "#ffffff",
        "fontSize": 14,
        "cursorBlink": true,
        "drawBoldTextInBrightColors": true,
        "loggingEnabled": false,
        "name": "spacer"
    },
    {
        "id": "0158b251386fa0d0",
        "type": "ui_spacer",
        "z": "7d74b0c161f17740",
        "name": "spacer",
        "group": "8d5821d35c2d330f",
        "order": 3,
        "width": "1",
        "height": "21"
    },
    {
        "id": "8e3298efb51f0f8f",
        "type": "whatsapp-kore-client",
        "d": true,
        "session": "node-red",
        "agent": "Reister Module",
        "version": "2, 2228, 8",
        "storage": "/home/pi/.node-red/data/whatsapp"
    },
    {
        "id": "482759366011ae73",
        "type": "lorawan-keys",
        "name": "",
        "keys": "{\"id\":{\"nsw\":\"\",\"asw\":\"\"}}"
    },
    {
        "id": "a6bb2e793fa809e6",
        "type": "mqtt-broker",
        "name": "LoRa",
        "broker": "10.145.5.155",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "f3a8cd803cbddc27",
        "type": "postgresdb",
        "cfgname": "Local",
        "hostname": "postgres",
        "port": "5432",
        "db": "nocs_solucoes",
        "ssl": false
    },
    {
        "id": "f5b4451dc02a9205",
        "type": "postgreSQLConfig",
        "name": "Local",
        "host": "postgres",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "nocs_solucoes",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "postgres",
        "passwordFieldType": "str"
    },
    {
        "id": "a0d32af7d93b6922",
        "type": "comment",
        "z": "137ba64f0a9dfbf0",
        "name": "MQTT",
        "info": "",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "b5a171c979c1d14e",
        "type": "comment",
        "z": "137ba64f0a9dfbf0",
        "name": "Tratamento dos dados",
        "info": "",
        "x": 140,
        "y": 780,
        "wires": []
    },
    {
        "id": "0d8da4b0b2f580aa",
        "type": "link in",
        "z": "137ba64f0a9dfbf0",
        "name": "Tratamento dos dados",
        "links": [
            "24b48146749e5031",
            "deff96f79e54b357"
        ],
        "x": 75,
        "y": 840,
        "wires": [
            [
                "f8e788f202e28034"
            ]
        ]
    },
    {
        "id": "bf124cdbf4ec0574",
        "type": "link out",
        "z": "137ba64f0a9dfbf0",
        "name": "Dados prontos",
        "mode": "link",
        "links": [
            "05fc6a7213ccabdd",
            "95b6006b9d6689cc"
        ],
        "x": 335,
        "y": 840,
        "wires": []
    },
    {
        "id": "4c9bdd95829e176b",
        "type": "mqtt in",
        "z": "137ba64f0a9dfbf0",
        "name": "Lora",
        "topic": "application/2/device/7d3504d07ed5b370/event/up",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "a6bb2e793fa809e6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "1af9faf1a6417c2a",
        "type": "aedes broker",
        "z": "137ba64f0a9dfbf0",
        "name": "",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 150,
        "y": 100,
        "wires": [
            [],
            [
                "88afc9fb45383b58"
            ]
        ]
    },
    {
        "id": "a0a25e1f9e7fab40",
        "type": "catch",
        "z": "137ba64f0a9dfbf0",
        "d": true,
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 120,
        "y": 980,
        "wires": [
            [
                "9db4054f3b683baa"
            ]
        ]
    },
    {
        "id": "9db4054f3b683baa",
        "type": "debug",
        "z": "137ba64f0a9dfbf0",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 980,
        "wires": []
    },
    {
        "id": "f8e788f202e28034",
        "type": "function",
        "z": "137ba64f0a9dfbf0",
        "name": "Formatação",
        "func": "var count = global.get(\"count\")||0\ncount += 1\nglobal.set(\"count\",count)\n\n/*Formatação*/\nfunction formatacao(valor){\n    var object = {}\n    if (typeof valor != \"undefined\") {\n        if (!Number.isInteger(valor)) {\n            let sf = (\"\" + (\"\" + valor).split('.')[1]).length\n\n            object.valor = Math.trunc(valor * Math.pow(10, sf))\n            object.valor_sf = -1 * sf\n        } else\n            object.valor_sf = 0\n    }\n    return object.valor, object.valor_sf;\n}\n\n\n/*current*/\n/*A*/\nif (typeof msg.payload.current_A != \"undefined\") {\n    if (!Number.isInteger(msg.payload.current_A)) {\n        let sf = (\"\" + (\"\" + msg.payload.current_A).split('.')[1]).length\n        msg.payload.current_A = Math.trunc(msg.payload.current_A * Math.pow(10, sf))\n        msg.payload.current_A_sf = -1 * sf\n    } else\n        msg.payload.current_A_sf = 0\n}\n/*B*/\nif (typeof msg.payload.current_B != \"undefined\") {\n    if (!Number.isInteger(msg.payload.current_B)) {\n        let sf = (\"\" + (\"\" + msg.payload.current_B).split('.')[1]).length\n        msg.payload.current_B = Math.trunc(msg.payload.current_B * Math.pow(10, sf))\n        msg.payload.current_B_sf = -1 * sf\n    } else\n        msg.payload.current_B_sf = 0\n}\n/*C*/\nif (typeof msg.payload.current_C != \"undefined\") {\n    if (!Number.isInteger(msg.payload.current_C)) {\n        let sf = (\"\" + (\"\" + msg.payload.current_C).split('.')[1]).length\n        msg.payload.current_C = Math.trunc(msg.payload.current_C * Math.pow(10, sf))\n        msg.payload.current_C_sf = -1 * sf\n    } else\n        msg.payload.current_C_sf = 0\n}\n\n/*voltage*/\n/*A*/\nif (typeof msg.payload.voltage_A != \"undefined\") {\n    if (!Number.isInteger(msg.payload.voltage_A)){\n        let sf = (\"\" + (\"\" + msg.payload.voltage_A).split('.')[1]).length\n        msg.payload.voltage_A = Math.trunc(msg.payload.voltage_A * Math.pow(10, sf))\n        msg.payload.voltage_A_sf = -1 * sf\n    }else\n        msg.payload.voltage_A_sf = 0\n}\n/*B*/\nif (typeof msg.payload.voltage_B != \"undefined\") {\n    if (!Number.isInteger(msg.payload.voltage_B)) {\n        let sf = (\"\" + (\"\" + msg.payload.voltage_B).split('.')[1]).length\n        msg.payload.voltage_B = Math.trunc(msg.payload.voltage_B * Math.pow(10, sf))\n        msg.payload.voltage_B_sf = -1 * sf\n    } else\n        msg.payload.voltage_B_sf = 0\n}\n/*C*/\nif (typeof msg.payload.voltage_C != \"undefined\") {\n    if (!Number.isInteger(msg.payload.voltage_C)) {\n        let sf = (\"\" + (\"\" + msg.payload.voltage_C).split('.')[1]).length\n        msg.payload.voltage_C = Math.trunc(msg.payload.voltage_C * Math.pow(10, sf))\n        msg.payload.voltage_C_sf = -1 * sf\n    } else\n        msg.payload.voltage_C_sf = 0\n}\n\n/*voltage_current_angle*/\n/*A*/\nif (typeof msg.payload.voltage_current_angle_A != \"undefined\") {\n    if (!Number.isInteger(msg.payload.voltage_current_angle_A)) {\n        let sf = (\"\" + (\"\" + msg.payload.voltage_current_angle_A).split('.')[1]).length\n        msg.payload.voltage_current_angle_A = Math.trunc(msg.payload.voltage_current_angle_A * Math.pow(10, sf))\n        msg.payload.voltage_current_angle_A_sf = -1 * sf\n    } else\n        msg.payload.voltage_current_angle_A_sf = 0\n}else if (typeof msg.payload.current_A != \"undefined\"){\n    msg.payload.voltage_current_angle_A = ((Math.acos(msg.payload.power_factor_A) * 180) / Math.PI).toFixed(3)\n    \n    let sf = (\"\" + (\"\" + msg.payload.voltage_current_angle_A).split('.')[1]).length\n    msg.payload.voltage_current_angle_A = Math.trunc(msg.payload.voltage_current_angle_A * Math.pow(10, sf))\n    msg.payload.voltage_current_angle_A_sf = -1 * sf\n} \n/*B*/\nif (typeof msg.payload.voltage_current_angle_B != \"undefined\") {\n    if (!Number.isInteger(msg.payload.voltage_current_angle_B)) {\n        let sf = (\"\" + (\"\" + msg.payload.voltage_current_angle_B).split('.')[1]).length\n        msg.payload.voltage_current_angle_B = Math.trunc(msg.payload.voltage_current_angle_B * Math.pow(10, sf))\n        msg.payload.voltage_current_angle_B_sf = -1 * sf\n    } else\n        msg.payload.voltage_current_angle_B_sf = 0\n} else if (typeof msg.payload.current_B != \"undefined\") {\n    msg.payload.voltage_current_angle_B = ((Math.acos(msg.payload.power_factor_B) * 180) / Math.PI).toFixed(3)\n\n    let sf = (\"\" + (\"\" + msg.payload.voltage_current_angle_B).split('.')[1]).length\n    msg.payload.voltage_current_angle_B = Math.trunc(msg.payload.voltage_current_angle_B * Math.pow(10, sf))\n    msg.payload.voltage_current_angle_B_sf = -1 * sf\n} \n/*C*/\nif (typeof msg.payload.voltage_current_angle_C != \"undefined\") {\n    if (!Number.isInteger(msg.payload.voltage_current_angle_C)) {\n        let sf = (\"\" + (\"\" + msg.payload.voltage_current_angle_C).split('.')[1]).length\n        msg.payload.voltage_current_angle_C = Math.trunc(msg.payload.voltage_current_angle_C * Math.pow(10, sf))\n        msg.payload.voltage_current_angle_C_sf = -1 * sf\n    } else\n        msg.payload.voltage_current_angle_C_sf = 0\n} else if (typeof msg.payload.current_C != \"undefined\") {\n    msg.payload.voltage_current_angle_C = ((Math.acos(msg.payload.power_factor_C) * 180) / Math.PI).toFixed(3)\n\n    let sf = (\"\" + (\"\" + msg.payload.voltage_current_angle_C).split('.')[1]).length\n    msg.payload.voltage_current_angle_C = Math.trunc(msg.payload.voltage_current_angle_C * Math.pow(10, sf))\n    msg.payload.voltage_current_angle_C_sf = -1 * sf\n} \n\n/*active_power*/\n/*A*/\nif (typeof msg.payload.active_power_A != \"undefined\") {\n    if (!Number.isInteger(msg.payload.active_power_A)) {\n        let sf = (\"\" + (\"\" + msg.payload.active_power_A).split('.')[1]).length\n        msg.payload.active_power_A = Math.trunc(msg.payload.active_power_A * Math.pow(10, sf))\n        msg.payload.active_power_A_sf = -1 * sf\n    } else\n        msg.payload.active_power_A_sf = 0\n} else if (typeof msg.payload.current_A != \"undefined\"){\n    msg.payload.active_power_A = msg.payload.current_A * msg.payload.voltage_A * Math.trunc(msg.payload.power_factor_A*100)\n    msg.payload.active_power_A_sf = msg.payload.current_A_sf + msg.payload.voltage_A_sf - 2\n}\n/*B*/\nif (typeof msg.payload.active_power_B != \"undefined\") {\n    if (!Number.isInteger(msg.payload.active_power_B)) {\n        let sf = (\"\" + (\"\" + msg.payload.active_power_B).split('.')[1]).length\n        msg.payload.active_power_B = Math.trunc(msg.payload.active_power_B * Math.pow(10, sf))\n        msg.payload.active_power_B_sf = -1 * sf\n    } else\n        msg.payload.active_power_B_sf = 0\n} else if (typeof msg.payload.current_B != \"undefined\") {\n    msg.payload.active_power_B = msg.payload.current_B * msg.payload.voltage_B * Math.trunc(msg.payload.power_factor_B * 100)\n    msg.payload.active_power_B_sf = msg.payload.current_B_sf + msg.payload.voltage_B_sf - 2\n}\n/*C*/\nif (typeof msg.payload.active_power_C != \"undefined\") {\n    if (!Number.isInteger(msg.payload.active_power_C)) {\n        let sf = (\"\" + (\"\" + msg.payload.active_power_C).split('.')[1]).length\n        msg.payload.active_power_C = Math.trunc(msg.payload.active_power_C * Math.pow(10, sf))\n        msg.payload.active_power_C_sf = -1 * sf\n    } else\n        msg.payload.active_power_C_sf = 0\n} else if (typeof msg.payload.current_C != \"undefined\") {\n    msg.payload.active_power_C = msg.payload.current_C * msg.payload.voltage_C * Math.trunc(msg.payload.power_factor_C * 100)\n    msg.payload.active_power_C_sf = msg.payload.current_C_sf + msg.payload.voltage_C_sf - 2\n}\n\n/*apparent_power*/\n/*A*/\nif (typeof msg.payload.apparent_power_A != \"undefined\") {\n    if (!Number.isInteger(msg.payload.apparent_power_A)) {\n        let sf = (\"\" + (\"\" + msg.payload.apparent_power_A).split('.')[1]).length\n        msg.payload.apparent_power_A = Math.trunc(msg.payload.apparent_power_A * Math.pow(10, sf))\n        msg.payload.apparent_power_A_sf = -1 * sf\n    } else\n        msg.payload.apparent_power_A_sf = 0\n}else if (typeof msg.payload.current_A != \"undefined\") {\n    msg.payload.apparent_power_A = ((msg.payload.active_power_A * Math.pow(10, msg.payload.active_power_A_sf)) / msg.payload.power_factor_A).toFixed(5)\n    \n    let sf = (\"\" + (\"\" + msg.payload.apparent_power_A).split('.')[1]).length\n    msg.payload.apparent_power_A = Math.trunc(msg.payload.apparent_power_A * Math.pow(10, sf))\n    msg.payload.apparent_power_A_sf = -1 * sf\n}\n/*B*/\nif (typeof msg.payload.apparent_power_B != \"undefined\") {\n    if (!Number.isInteger(msg.payload.apparent_power_B)) {\n        let sf = (\"\" + (\"\" + msg.payload.apparent_power_B).split('.')[1]).length\n        msg.payload.apparent_power_B = Math.trunc(msg.payload.apparent_power_B * Math.pow(10, sf))\n        msg.payload.apparent_power_B_sf = -1 * sf\n    } else\n        msg.payload.apparent_power_B_sf = 0\n} else if (typeof msg.payload.current_B != \"undefined\") {\n    msg.payload.apparent_power_B = ((msg.payload.active_power_B * Math.pow(10, msg.payload.active_power_B_sf)) / msg.payload.power_factor_B).toFixed(5)\n\n    let sf = (\"\" + (\"\" + msg.payload.apparent_power_B).split('.')[1]).length\n    msg.payload.apparent_power_B = Math.trunc(msg.payload.apparent_power_B * Math.pow(10, sf))\n    msg.payload.apparent_power_B_sf = -1 * sf\n}\n/*C*/\nif (typeof msg.payload.apparent_power_C != \"undefined\") {\n    if (!Number.isInteger(msg.payload.apparent_power_C)) {\n        let sf = (\"\" + (\"\" + msg.payload.apparent_power_C).split('.')[1]).length\n        msg.payload.apparent_power_C = Math.trunc(msg.payload.apparent_power_C * Math.pow(10, sf))\n        msg.payload.apparent_power_C_sf = -1 * sf\n    } else\n        msg.payload.apparent_power_C_sf = 0\n} else if (typeof msg.payload.current_C != \"undefined\") {\n    msg.payload.apparent_power_C = ((msg.payload.active_power_C * Math.pow(10, msg.payload.active_power_C_sf)) / msg.payload.power_factor_C).toFixed(5)\n\n    let sf = (\"\" + (\"\" + msg.payload.apparent_power_C).split('.')[1]).length\n    msg.payload.apparent_power_C = Math.trunc(msg.payload.apparent_power_C * Math.pow(10, sf))\n    msg.payload.apparent_power_C_sf = -1 * sf\n}\n\n/*reactive_power*/\n/*A*/\nif (typeof msg.payload.reactive_power_A != \"undefined\") {\n    if (!Number.isInteger(msg.payload.reactive_power_A)) {\n        let sf = (\"\" + (\"\" + msg.payload.reactive_power_A).split('.')[1]).length\n        msg.payload.reactive_power_A = Math.trunc(msg.payload.reactive_power_A * Math.pow(10, sf))\n        msg.payload.reactive_power_A_sf = -1 * sf\n    } else\n        msg.payload.reactive_power_A_sf = 0\n} else if (typeof msg.payload.current_A != \"undefined\") {\n    msg.payload.reactive_power_A = (Math.sqrt(Math.pow((msg.payload.apparent_power_A * Math.pow(10, msg.payload.apparent_power_A_sf)), 2) - Math.pow((msg.payload.active_power_A * Math.pow(10, msg.payload.active_power_A_sf)), 2))).toFixed(5)\n    \n    let sf = (\"\" + (\"\" + msg.payload.reactive_power_A).split('.')[1]).length\n    msg.payload.reactive_power_A = Math.trunc(msg.payload.reactive_power_A * Math.pow(10, sf))\n    msg.payload.reactive_power_A_sf = -1 * sf\n}\n/*B*/\nif (typeof msg.payload.reactive_power_B != \"undefined\") {\n    if (!Number.isInteger(msg.payload.reactive_power_B)) {\n        let sf = (\"\" + (\"\" + msg.payload.reactive_power_B).split('.')[1]).length\n        msg.payload.reactive_power_B = Math.trunc(msg.payload.reactive_power_B * Math.pow(10, sf))\n        msg.payload.reactive_power_B_sf = -1 * sf\n    } else\n        msg.payload.reactive_power_B_sf = 0\n} else if (typeof msg.payload.current_B != \"undefined\") {\n    msg.payload.reactive_power_B = (Math.sqrt(Math.pow((msg.payload.apparent_power_B * Math.pow(10, msg.payload.apparent_power_B_sf)), 2) - Math.pow((msg.payload.active_power_B * Math.pow(10, msg.payload.active_power_B_sf)), 2))).toFixed(5)\n\n    let sf = (\"\" + (\"\" + msg.payload.reactive_power_B).split('.')[1]).length\n    msg.payload.reactive_power_B = Math.trunc(msg.payload.reactive_power_B * Math.pow(10, sf))\n    msg.payload.reactive_power_B_sf = -1 * sf\n}\n/*C*/\nif (typeof msg.payload.reactive_power_C != \"undefined\") {\n    if (!Number.isInteger(msg.payload.reactive_power_C)) {\n        let sf = (\"\" + (\"\" + msg.payload.reactive_power_C).split('.')[1]).length\n        msg.payload.reactive_power_C = Math.trunc(msg.payload.reactive_power_C * Math.pow(10, sf))\n        msg.payload.reactive_power_C_sf = -1 * sf\n    } else\n        msg.payload.reactive_power_C_sf = 0\n} else if (typeof msg.payload.current_C != \"undefined\") {\n    msg.payload.reactive_power_C = (Math.sqrt(Math.pow((msg.payload.apparent_power_C * Math.pow(10, msg.payload.apparent_power_C_sf)), 2) - Math.pow((msg.payload.active_power_C * Math.pow(10, msg.payload.active_power_C_sf)), 2))).toFixed(5)\n\n    let sf = (\"\" + (\"\" + msg.payload.reactive_power_C).split('.')[1]).length\n    msg.payload.reactive_power_C = Math.trunc(msg.payload.reactive_power_C * Math.pow(10, sf))\n    msg.payload.reactive_power_C_sf = -1 * sf\n}\n\n/*voltage_lag*/\n/*AB*/\nif (typeof msg.payload.angle_voltage_A_B != \"undefined\") {\n    if (!Number.isInteger(msg.payload.angle_voltage_A_B)) {\n        let sf = (\"\" + (\"\" + msg.payload.angle_voltage_A_B).split('.')[1]).length\n        msg.payload.angle_voltage_A_B = Math.trunc(msg.payload.angle_voltage_A_B * Math.pow(10, sf))\n        msg.payload.angle_voltage_A_B_sf = -1 * sf\n    }\n    else\n        msg.payload.angle_voltage_A_B_sf = 0\n}\n/*AC*/\nif (typeof msg.payload.angle_voltage_A_C != \"undefined\") {\n    if (!Number.isInteger(msg.payload.angle_voltage_A_C)) {\n        let sf = (\"\" + (\"\" + msg.payload.angle_voltage_A_C).split('.')[1]).length\n        msg.payload.angle_voltage_A_C = Math.trunc(msg.payload.angle_voltage_A_C * Math.pow(10, sf))\n        msg.payload.angle_voltage_A_C_sf = -1 * sf\n    } else\n        msg.payload.angle_voltage_A_C_sf = 0\n}\n/*BC*/\nif (typeof msg.payload.angle_voltage_B_C != \"undefined\") {\n    if (!Number.isInteger(msg.payload.angle_voltage_B_C)) {\n        let sf = (\"\" + (\"\" + msg.payload.angle_voltage_B_C).split('.')[1]).length\n        msg.payload.angle_voltage_B_C = Math.trunc(msg.payload.angle_voltage_B_C * Math.pow(10, sf))\n        msg.payload.angle_voltage_B_C_sf = -1 * sf\n    } else\n        msg.payload.angle_voltage_B_C_sf = 0\n}\n\n/*temperature*/\nif (typeof msg.payload.temperature != \"undefined\") {\n    if (!Number.isInteger(msg.payload.temperature)) {\n        let sf = (\"\" + (\"\" + msg.payload.temperature).split('.')[1]).length\n        msg.payload.temperature = Math.trunc(msg.payload.temperature * Math.pow(10, sf))\n        msg.payload.temperature_sf = -1 * sf\n    } else\n        msg.payload.temperature_sf = 0\n}\n\n/*frequency*/\nif (typeof msg.payload.frequency != \"undefined\") {\n    if (!Number.isInteger(msg.payload.frequency)) {\n        let sf = (\"\" + (\"\" + msg.payload.frequency).split('.')[1]).length\n        msg.payload.frequency = Math.trunc(msg.payload.frequency * Math.pow(10, sf))\n        msg.payload.frequency_sf = -1 * sf\n    } else\n        msg.payload.frequency_sf = 0\n} else{\n    msg.payload.frequency = 60\n    msg.payload.frequency_sf = 0\n}\n\n/*date_time_stamp*/\nmsg.payload.date_time_stamp = new Date()\nmsg.payload = JSON.parse(JSON.stringify(msg.payload));\n\n/*message_counter*/\nmsg.payload.message_counter     = count\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 840,
        "wires": [
            [
                "bf124cdbf4ec0574"
            ]
        ]
    },
    {
        "id": "da0851086569fc3a",
        "type": "json",
        "z": "137ba64f0a9dfbf0",
        "name": "",
        "property": "payload.packet.payload",
        "action": "",
        "pretty": false,
        "x": 190,
        "y": 320,
        "wires": [
            [
                "abc1cc7f685db311"
            ]
        ]
    },
    {
        "id": "abc1cc7f685db311",
        "type": "change",
        "z": "137ba64f0a9dfbf0",
        "name": "Formatação",
        "rules": [
            {
                "t": "set",
                "p": "payload.id",
                "pt": "msg",
                "to": "payload.client.id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.topic",
                "pt": "msg",
                "to": "payload.packet.topic",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.variable",
                "pt": "msg",
                "to": "payload.packet.payload.variable",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.value",
                "pt": "msg",
                "to": "payload.packet.payload.value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.unit",
                "pt": "msg",
                "to": "payload.packet.payload.unit",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload.packet",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.client",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 320,
        "wires": [
            [
                "d68cc4b4aa5992ee"
            ]
        ]
    },
    {
        "id": "88afc9fb45383b58",
        "type": "switch",
        "z": "137ba64f0a9dfbf0",
        "name": "Não nulos",
        "property": "payload.client",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 340,
        "y": 100,
        "wires": [
            [
                "013fe88dfc917319"
            ]
        ]
    },
    {
        "id": "60bdd308296943ef",
        "type": "switch",
        "z": "137ba64f0a9dfbf0",
        "name": "Indentificação fase",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "\"topic\":\"Monofasico\"",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "\"topic\":\"Bifasico\"",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "\"topic\":\"Trifasico\"",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 230,
        "y": 540,
        "wires": [
            [
                "7a8f749828a1f658"
            ],
            [],
            [
                "dc6a1f322af6636c"
            ]
        ]
    },
    {
        "id": "7a8f749828a1f658",
        "type": "join",
        "z": "137ba64f0a9dfbf0",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": ",",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 410,
        "y": 500,
        "wires": [
            [
                "bddba7cb663ddb7d"
            ]
        ]
    },
    {
        "id": "2b409d0b8bba51cc",
        "type": "json",
        "z": "137ba64f0a9dfbf0",
        "name": "Recuperação",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 700,
        "wires": [
            [
                "4204ca863fb0bc35"
            ]
        ]
    },
    {
        "id": "9dadcaaf455341da",
        "type": "join",
        "z": "137ba64f0a9dfbf0",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": ",",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "13",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 410,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "dc6a1f322af6636c",
        "type": "join",
        "z": "137ba64f0a9dfbf0",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": ",",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "26",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 410,
        "y": 580,
        "wires": [
            [
                "bddba7cb663ddb7d"
            ]
        ]
    },
    {
        "id": "d68cc4b4aa5992ee",
        "type": "json",
        "z": "137ba64f0a9dfbf0",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 510,
        "y": 320,
        "wires": [
            [
                "f69a606546d046ad"
            ]
        ]
    },
    {
        "id": "261d0fc0d3cb6869",
        "type": "change",
        "z": "137ba64f0a9dfbf0",
        "name": "Junção",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "},{",
                "fromt": "str",
                "to": ",",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 700,
        "wires": [
            [
                "2b409d0b8bba51cc"
            ]
        ]
    },
    {
        "id": "8927e4ccf542999d",
        "type": "comment",
        "z": "137ba64f0a9dfbf0",
        "name": "Formatação",
        "info": "",
        "x": 110,
        "y": 260,
        "wires": []
    },
    {
        "id": "e25b402cd2b1be3f",
        "type": "comment",
        "z": "137ba64f0a9dfbf0",
        "name": "Indentificação de Topico",
        "info": "",
        "x": 140,
        "y": 460,
        "wires": []
    },
    {
        "id": "21871bb34932981d",
        "type": "comment",
        "z": "137ba64f0a9dfbf0",
        "name": "Limpeza de mensagem",
        "info": "",
        "x": 140,
        "y": 640,
        "wires": []
    },
    {
        "id": "015173b0d38f66df",
        "type": "link out",
        "z": "137ba64f0a9dfbf0",
        "name": "Formatação",
        "mode": "link",
        "links": [
            "31b351abba633919"
        ],
        "x": 835,
        "y": 100,
        "wires": []
    },
    {
        "id": "5bc332cef7bd68dd",
        "type": "link out",
        "z": "137ba64f0a9dfbf0",
        "name": "Indentificação de Topico",
        "mode": "link",
        "links": [
            "059a8b0edfc718f5"
        ],
        "x": 725,
        "y": 380,
        "wires": []
    },
    {
        "id": "bddba7cb663ddb7d",
        "type": "link out",
        "z": "137ba64f0a9dfbf0",
        "name": "Limpeza de mensagem",
        "mode": "link",
        "links": [
            "23bbaaa92902cf05"
        ],
        "x": 515,
        "y": 540,
        "wires": []
    },
    {
        "id": "4204ca863fb0bc35",
        "type": "link out",
        "z": "137ba64f0a9dfbf0",
        "name": "Verificação de cadastro em banco",
        "mode": "link",
        "links": [
            "cd20082090c4089f"
        ],
        "x": 495,
        "y": 700,
        "wires": []
    },
    {
        "id": "31b351abba633919",
        "type": "link in",
        "z": "137ba64f0a9dfbf0",
        "name": "Formatação",
        "links": [
            "015173b0d38f66df"
        ],
        "x": 75,
        "y": 320,
        "wires": [
            [
                "da0851086569fc3a"
            ]
        ]
    },
    {
        "id": "059a8b0edfc718f5",
        "type": "link in",
        "z": "137ba64f0a9dfbf0",
        "name": "Indentificação de Topico",
        "links": [
            "5bc332cef7bd68dd"
        ],
        "x": 75,
        "y": 540,
        "wires": [
            [
                "60bdd308296943ef"
            ]
        ]
    },
    {
        "id": "23bbaaa92902cf05",
        "type": "link in",
        "z": "137ba64f0a9dfbf0",
        "name": "Limpeza de mensagem",
        "links": [
            "bddba7cb663ddb7d"
        ],
        "x": 75,
        "y": 700,
        "wires": [
            [
                "261d0fc0d3cb6869"
            ]
        ]
    },
    {
        "id": "6ba7d76b06f3bb18",
        "type": "comment",
        "z": "137ba64f0a9dfbf0",
        "name": "Avisos",
        "info": "",
        "x": 90,
        "y": 920,
        "wires": []
    },
    {
        "id": "f69a606546d046ad",
        "type": "change",
        "z": "137ba64f0a9dfbf0",
        "name": "Filtro",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": ",\"value\":",
                "fromt": "str",
                "to": ":",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "},{",
                "fromt": "str",
                "to": ",",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"P\"",
                "fromt": "str",
                "to": "\"active_power_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"PA\"",
                "fromt": "str",
                "to": "\"active_power_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"PB\"",
                "fromt": "str",
                "to": "\"active_power_B\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"PC\"",
                "fromt": "str",
                "to": "\"active_power_C\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"Q\"",
                "fromt": "str",
                "to": "\"reactive_power_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"QA\"",
                "fromt": "str",
                "to": "\"reactive_power_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"QB\"",
                "fromt": "str",
                "to": "\"reactive_power_B\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"QC\"",
                "fromt": "str",
                "to": "\"reactive_power_C\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"S\"",
                "fromt": "str",
                "to": "\"apparent_power_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"SA\"",
                "fromt": "str",
                "to": "\"apparent_power_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"SB\"",
                "fromt": "str",
                "to": "\"apparent_power_B\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"SC\"",
                "fromt": "str",
                "to": "\"apparent_power_C\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"U\"",
                "fromt": "str",
                "to": "\"voltage_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"UA\"",
                "fromt": "str",
                "to": "\"voltage_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"UB\"",
                "fromt": "str",
                "to": "\"voltage_B\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"UC\"",
                "fromt": "str",
                "to": "\"voltage_C\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"I\"",
                "fromt": "str",
                "to": "\"current_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"IA\"",
                "fromt": "str",
                "to": "\"current_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"IB\"",
                "fromt": "str",
                "to": "\"current_B\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"IC\"",
                "fromt": "str",
                "to": "\"current_C\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"PF\"",
                "fromt": "str",
                "to": "\"power_factor_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"PFA\"",
                "fromt": "str",
                "to": "\"power_factor_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"PFB\"",
                "fromt": "str",
                "to": "\"power_factor_B\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"PFC\"",
                "fromt": "str",
                "to": "\"power_factor_C\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"PGA\"",
                "fromt": "str",
                "to": "\"voltage_current_angle_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"PGB\"",
                "fromt": "str",
                "to": "\"voltage_current_angle_B\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"PGC\"",
                "fromt": "str",
                "to": "\"voltage_current_angle_C\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"YUAUB\"",
                "fromt": "str",
                "to": "\"angle_voltage_A_B\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"YUAUC\"",
                "fromt": "str",
                "to": "\"angle_voltage_A_C\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"YUBUC\"",
                "fromt": "str",
                "to": "\"angle_voltage_B_C\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"TPSD\"",
                "fromt": "str",
                "to": "\"temperature\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"FREQ\"",
                "fromt": "str",
                "to": "\"frequency\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": ",\"variable\":",
                "fromt": "str",
                "to": ",",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 320,
        "wires": [
            [
                "a221c8c45108dded"
            ]
        ]
    },
    {
        "id": "ded64dc9bb848911",
        "type": "change",
        "z": "137ba64f0a9dfbf0",
        "name": "Remoção",
        "rules": [
            {
                "t": "delete",
                "p": "payload.unit",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.EP",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.EPA",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.EPB",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.EPC",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.EPT",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.EQ",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.EQA",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.EQB",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.EQC",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.EQT",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.PFT",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.PT",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.QT",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.ST",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.IT",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.UT",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 380,
        "wires": [
            [
                "c4cfe5adfe1318c2"
            ]
        ]
    },
    {
        "id": "a221c8c45108dded",
        "type": "json",
        "z": "137ba64f0a9dfbf0",
        "name": "Recuperação",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 130,
        "y": 380,
        "wires": [
            [
                "ded64dc9bb848911"
            ]
        ]
    },
    {
        "id": "c4cfe5adfe1318c2",
        "type": "function",
        "z": "137ba64f0a9dfbf0",
        "name": "Seleção",
        "func": "var tamanho = 0;\nfor (var i in msg.payload)\n    if (msg.payload.hasOwnProperty(i))\n        tamanho++;\n\nif (tamanho > 2)\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 380,
        "wires": [
            [
                "c1afce0e69e05272"
            ]
        ]
    },
    {
        "id": "c1afce0e69e05272",
        "type": "json",
        "z": "137ba64f0a9dfbf0",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 610,
        "y": 380,
        "wires": [
            [
                "5bc332cef7bd68dd"
            ]
        ]
    },
    {
        "id": "0d9d3d27aebb4efa",
        "type": "inject",
        "z": "137ba64f0a9dfbf0",
        "name": "inject",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "0",
        "x": 130,
        "y": 1120,
        "wires": [
            [
                "cec395bda2b21416"
            ]
        ]
    },
    {
        "id": "cec395bda2b21416",
        "type": "function",
        "z": "137ba64f0a9dfbf0",
        "name": "Zera contador",
        "func": "global.set(\"count\", 0)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "b1ee4f14f7ef77d7",
        "type": "comment",
        "z": "137ba64f0a9dfbf0",
        "name": "Contador de mensagens",
        "info": "",
        "x": 150,
        "y": 1060,
        "wires": []
    },
    {
        "id": "e6f762f08baf3467",
        "type": "switch",
        "z": "137ba64f0a9dfbf0",
        "name": "Existe dados",
        "property": "payload.packet.payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 710,
        "y": 100,
        "wires": [
            [
                "015173b0d38f66df"
            ]
        ]
    },
    {
        "id": "013fe88dfc917319",
        "type": "switch",
        "z": "137ba64f0a9dfbf0",
        "name": "Esta conectado",
        "property": "payload.client.connected",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 520,
        "y": 100,
        "wires": [
            [
                "e6f762f08baf3467"
            ]
        ]
    },
    {
        "id": "fd6966f62c5f4377",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "Inserção",
        "info": "",
        "x": 100,
        "y": 400,
        "wires": []
    },
    {
        "id": "05fc6a7213ccabdd",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "Inserção",
        "links": [
            "bf124cdbf4ec0574"
        ],
        "x": 75,
        "y": 460,
        "wires": [
            [
                "09b3e2ad263f23bd"
            ]
        ]
    },
    {
        "id": "8bb3ae644308d17a",
        "type": "function",
        "z": "e8287d7944e724f7",
        "name": "Parametros",
        "func": "msg.queryParameters = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 640,
        "wires": [
            [
                "519a6c42b226c872",
                "f35a0dda2732daa5"
            ]
        ]
    },
    {
        "id": "f35a0dda2732daa5",
        "type": "postgres",
        "z": "e8287d7944e724f7",
        "postgresdb": "410522af87089496",
        "name": "NOCS",
        "output": false,
        "perrow": false,
        "rowspermsg": "1",
        "return_on_error": false,
        "limit_queries": "0",
        "limit_by": "payload",
        "limit_value": "1",
        "limit_drop_intermediate": false,
        "limit_drop_if_in_queue": false,
        "outputs": false,
        "x": 570,
        "y": 600,
        "wires": []
    },
    {
        "id": "adb4771166d6ab3d",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "inserte",
        "links": [
            "52915c65d06f0b9e",
            "b0d4a62ef4312040",
            "967c394017b307dd",
            "366b49e817b10183",
            "6b04c5d9851047ec"
        ],
        "x": 75,
        "y": 640,
        "wires": [
            [
                "8bb3ae644308d17a"
            ]
        ]
    },
    {
        "id": "52915c65d06f0b9e",
        "type": "link out",
        "z": "e8287d7944e724f7",
        "name": "inserte",
        "mode": "link",
        "links": [
            "adb4771166d6ab3d"
        ],
        "x": 775,
        "y": 460,
        "wires": []
    },
    {
        "id": "bd1fb71a66885441",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "",
        "query": "SELECT id FROM public.organic_nodes_control_mqttaccess where mqtt_id = '{{msg.temp.id}}';",
        "postgreSQLConfig": "f5b4451dc02a9205",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 370,
        "y": 100,
        "wires": [
            [
                "e4f8747cde3e641a"
            ]
        ]
    },
    {
        "id": "e4f8747cde3e641a",
        "type": "function",
        "z": "e8287d7944e724f7",
        "name": "Verifica Cadastro no banco",
        "func": "var msg2 = {}\nif (typeof msg.payload[0] != 'undefined'){\n    msg2.payload = msg.temp\n    return msg2;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 100,
        "wires": [
            [
                "deff96f79e54b357"
            ]
        ]
    },
    {
        "id": "51f69b1bdc9a3ec2",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "Verificação de cadastro em banco",
        "info": "",
        "x": 180,
        "y": 40,
        "wires": []
    },
    {
        "id": "deff96f79e54b357",
        "type": "link out",
        "z": "e8287d7944e724f7",
        "name": "Tratamento dos dados",
        "mode": "link",
        "links": [
            "0d8da4b0b2f580aa"
        ],
        "x": 775,
        "y": 100,
        "wires": []
    },
    {
        "id": "cd20082090c4089f",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "Verificação de cadastro em banco",
        "links": [
            "4204ca863fb0bc35"
        ],
        "x": 75,
        "y": 100,
        "wires": [
            [
                "36f12c2307478bc1"
            ]
        ]
    },
    {
        "id": "be7050e23063ac3f",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "Parametros do postgres",
        "info": "",
        "x": 140,
        "y": 580,
        "wires": []
    },
    {
        "id": "36f12c2307478bc1",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "Duplica",
        "rules": [
            {
                "t": "set",
                "p": "temp",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 100,
        "wires": [
            [
                "bd1fb71a66885441"
            ]
        ]
    },
    {
        "id": "24674137ef6f939e",
        "type": "switch",
        "z": "e8287d7944e724f7",
        "name": "Indentificação fase",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Monofasico",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Bifasico",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Trifasico",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 370,
        "y": 460,
        "wires": [
            [
                "4680b8f0318a2a42"
            ],
            [
                "74e49b95733b6991"
            ],
            [
                "6d107b568d4b8339"
            ]
        ]
    },
    {
        "id": "4680b8f0318a2a42",
        "type": "template",
        "z": "e8287d7944e724f7",
        "name": "Cria instancia Monofasico",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO public.organic_nodes_control_measurement(\n\tdate_time_stamp,\tmessage_counter,\tsetup_id,\tsource)\n\tVALUES ('{{payload.date_time_stamp}}', {{payload.message_counter}}, (SELECT id FROM public.organic_nodes_control_setup WHERE (device_id = (SELECT device_id FROM public.organic_nodes_control_mqttdevice WHERE (mqtt_access_id = (SELECT id FROM public.organic_nodes_control_mqttaccess WHERE (mqtt_id = '{{payload.id}}')))))), 0);\n\nINSERT INTO public.organic_nodes_control_frequencymeasure(\n\tfrequency,\tfrequency_sf,\tmeasurement_id)\n\tVALUES ({{payload.frequency}}, {{payload.frequency_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));\n\nINSERT INTO public.organic_nodes_control_sensormeasure(\n\ttemperature,\ttemperature_sf,\tmeasurement_id)\n\tVALUES ({{payload.temperature}}, {{payload.temperature_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));\n\t\nINSERT INTO public.organic_nodes_control_energymeasure(\n\tphase, current, current_sf, voltage, voltage_sf, measurement_id)\n\tVALUES ('{{payload.phase_A}}', {{payload.current_A}},{{payload.current_A_sf}},{{payload.voltage_A}},{{payload.voltage_A_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));\n\nINSERT INTO public.organic_nodes_control_powermeasure(\n\tphase, voltage_current_angle, voltage_current_angle_sf,\tpower_factor,\tactive_power,\tactive_power_sf,\treactive_power,\treactive_power_sf,\tapparent_power,\tapparent_power_sf\t, measurement_id)\n\tVALUES ('{{payload.phase_A}}', {{payload.voltage_current_angle_A}},{{payload.voltage_current_angle_A_sf}},{{payload.power_factor_A}},{{payload.active_power_A}}, {{payload.active_power_A_sf}}, {{payload.reactive_power_A}}, {{payload.reactive_power_A_sf}}, {{payload.apparent_power_A}}, {{payload.apparent_power_A_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));\n",
        "output": "str",
        "x": 610,
        "y": 420,
        "wires": [
            [
                "52915c65d06f0b9e"
            ]
        ]
    },
    {
        "id": "748f92b85208a9a3",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "",
        "query": "(SELECT phase FROM public.organic_nodes_control_circuit WHERE id = (SELECT circuit_id FROM public.organic_nodes_control_setup WHERE device_id = (SELECT device_id FROM public.organic_nodes_control_mqttdevice WHERE (mqtt_access_id = (SELECT id FROM public.organic_nodes_control_mqttaccess WHERE mqtt_id = '{{msg.temp.id}}')))))",
        "postgreSQLConfig": "f5b4451dc02a9205",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 590,
        "y": 240,
        "wires": [
            [
                "c992aecb58b60c73"
            ]
        ]
    },
    {
        "id": "b0c5a62ecd36045b",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "Duplica",
        "rules": [
            {
                "t": "set",
                "p": "temp",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 240,
        "wires": [
            [
                "748f92b85208a9a3"
            ]
        ]
    },
    {
        "id": "ecf096ad8adf8308",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "Pega Fases",
        "links": [
            "09b3e2ad263f23bd"
        ],
        "x": 75,
        "y": 240,
        "wires": [
            [
                "b0c5a62ecd36045b"
            ]
        ]
    },
    {
        "id": "2ff7790cc95546a4",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "Pega Fases",
        "info": "",
        "x": 110,
        "y": 180,
        "wires": []
    },
    {
        "id": "7e2d8bedaef930eb",
        "type": "link out",
        "z": "e8287d7944e724f7",
        "name": "inserção 02",
        "mode": "link",
        "links": [
            "b83f2dc011b3809a"
        ],
        "x": 875,
        "y": 240,
        "wires": []
    },
    {
        "id": "c992aecb58b60c73",
        "type": "function",
        "z": "e8287d7944e724f7",
        "name": "Uni",
        "func": "var msg2 = {}\nmsg2.payload = msg.temp\n\ntry{\n    msg2.payload.phase_A = msg.payload[0].phase[0]\n    msg2.payload.phase_B = msg.payload[0].phase[1]\n    msg2.payload.phase_C = msg.payload[0].phase[2]\n} catch(e){\n}\n\nreturn msg2;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 240,
        "wires": [
            [
                "7e2d8bedaef930eb"
            ]
        ]
    },
    {
        "id": "74e49b95733b6991",
        "type": "template",
        "z": "e8287d7944e724f7",
        "name": "Cria instancia Bifasico",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO public.organic_nodes_control_measurement(\n\tdate_time_stamp,\tmessage_counter,\tsetup_id,\tsource)\n\tVALUES ('{{payload.date_time_stamp}}', {{payload.message_counter}}, (SELECT id FROM public.organic_nodes_control_setup WHERE (device_id = (SELECT device_id FROM public.organic_nodes_control_mqttdevice WHERE (mqtt_access_id = (SELECT id FROM public.organic_nodes_control_mqttaccess WHERE (mqtt_id = '{{payload.id}}')))))), 0);\n\nINSERT INTO public.organic_nodes_control_frequencymeasure(\n\tfrequency,\tfrequency_sf,\tmeasurement_id)\n\tVALUES ({{payload.frequency}}, {{payload.frequency_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));\n\nINSERT INTO public.organic_nodes_control_sensormeasure(\n\ttemperature,\ttemperature_sf,\tmeasurement_id)\n\tVALUES ({{payload.temperature}}, {{payload.temperature_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));\n\t\nINSERT INTO public.organic_nodes_control_energymeasure(\n\tphase, current, current_sf, voltage, voltage_sf, measurement_id)\n\tVALUES ('{{payload.phase_A}}', {{payload.current_A}},{{payload.current_A_sf}},{{payload.voltage_A}},{{payload.voltage_A_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));\n\nINSERT INTO public.organic_nodes_control_powermeasure(\n\tphase, voltage_current_angle, voltage_current_angle_sf,\tpower_factor,\tactive_power,\tactive_power_sf,\treactive_power,\treactive_power_sf,\tapparent_power,\tapparent_power_sf\t, measurement_id)\n\tVALUES ('{{payload.phase_A}}', {{payload.voltage_current_angle_A}},{{payload.voltage_current_angle_A_sf}},{{payload.power_factor_A}},{{payload.active_power_A}}, {{payload.active_power_A_sf}}, {{payload.reactive_power_A}}, {{payload.reactive_power_A_sf}}, {{payload.apparent_power_A}}, {{payload.apparent_power_A_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));\n\nINSERT INTO public.organic_nodes_control_energymeasure(\n\tphase, current, current_sf, voltage, voltage_sf, measurement_id)\n\tVALUES ('{{payload.phase_B}}', {{payload.current_B}},{{payload.current_B_sf}},{{payload.voltage_B}},{{payload.voltage_B_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));\n\nINSERT INTO public.organic_nodes_control_powermeasure(\n\tphase, voltage_current_angle, voltage_current_angle_sf,\tpower_factor,\tactive_power,\tactive_power_sf,\treactive_power,\treactive_power_sf,\tapparent_power,\tapparent_power_sf\t, measurement_id)\n\tVALUES ('{{payload.phase_B}}', {{payload.voltage_current_angle_B}},{{payload.voltage_current_angle_B_sf}},{{payload.power_factor_B}},{{payload.active_power_B}}, {{payload.active_power_B_sf}}, {{payload.reactive_power_B}}, {{payload.reactive_power_B_sf}}, {{payload.apparent_power_B}}, {{payload.apparent_power_B_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));\n\nINSERT INTO public.organic_nodes_control_voltagelagmeasure(\n\tangle, angle_sf,\tphase_combination, measurement_id)\n\tVALUES ({{payload.angle_voltage_A_B}}, {{payload.angle_voltage_A_B_sf}}, '{{payload.phase_A}}{{payload.phase_B}}', (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));",
        "output": "str",
        "x": 600,
        "y": 460,
        "wires": [
            [
                "52915c65d06f0b9e"
            ]
        ]
    },
    {
        "id": "6d107b568d4b8339",
        "type": "template",
        "z": "e8287d7944e724f7",
        "name": "Cria instancia Trifasico",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO public.organic_nodes_control_measurement(\n\tdate_time_stamp,\tmessage_counter,\tsetup_id,\tsource)\n\tVALUES ('{{payload.date_time_stamp}}', {{payload.message_counter}}, (SELECT id FROM public.organic_nodes_control_setup WHERE (device_id = (SELECT device_id FROM public.organic_nodes_control_mqttdevice WHERE (mqtt_access_id = (SELECT id FROM public.organic_nodes_control_mqttaccess WHERE (mqtt_id = '{{payload.id}}')))))), 0);\n\nINSERT INTO public.organic_nodes_control_frequencymeasure(\n\tfrequency,\tfrequency_sf,\tmeasurement_id)\n\tVALUES ({{payload.frequency}}, {{payload.frequency_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));\n\nINSERT INTO public.organic_nodes_control_sensormeasure(\n\ttemperature,\ttemperature_sf,\tmeasurement_id)\n\tVALUES ({{payload.temperature}}, {{payload.temperature_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));\n\t\nINSERT INTO public.organic_nodes_control_energymeasure(\n\tphase, current, current_sf, voltage, voltage_sf, measurement_id)\n\tVALUES ('{{payload.phase_A}}', {{payload.current_A}},{{payload.current_A_sf}},{{payload.voltage_A}},{{payload.voltage_A_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));\n\nINSERT INTO public.organic_nodes_control_powermeasure(\n\tphase, voltage_current_angle, voltage_current_angle_sf,\tpower_factor,\tactive_power,\tactive_power_sf,\treactive_power,\treactive_power_sf,\tapparent_power,\tapparent_power_sf\t, measurement_id)\n\tVALUES ('{{payload.phase_A}}', {{payload.voltage_current_angle_A}},{{payload.voltage_current_angle_A_sf}},{{payload.power_factor_A}},{{payload.active_power_A}}, {{payload.active_power_A_sf}}, {{payload.reactive_power_A}}, {{payload.reactive_power_A_sf}}, {{payload.apparent_power_A}}, {{payload.apparent_power_A_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));\n\nINSERT INTO public.organic_nodes_control_energymeasure(\n\tphase, current, current_sf, voltage, voltage_sf, measurement_id)\n\tVALUES ('{{payload.phase_B}}', {{payload.current_B}},{{payload.current_B_sf}},{{payload.voltage_B}},{{payload.voltage_B_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));\n\nINSERT INTO public.organic_nodes_control_powermeasure(\n\tphase, voltage_current_angle, voltage_current_angle_sf,\tpower_factor,\tactive_power,\tactive_power_sf,\treactive_power,\treactive_power_sf,\tapparent_power,\tapparent_power_sf\t, measurement_id)\n\tVALUES ('{{payload.phase_B}}', {{payload.voltage_current_angle_B}},{{payload.voltage_current_angle_B_sf}},{{payload.power_factor_B}},{{payload.active_power_B}}, {{payload.active_power_B_sf}}, {{payload.reactive_power_B}}, {{payload.reactive_power_B_sf}}, {{payload.apparent_power_B}}, {{payload.apparent_power_B_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));\n\nINSERT INTO public.organic_nodes_control_voltagelagmeasure(\n\tangle, angle_sf,\tphase_combination, measurement_id)\n\tVALUES ({{payload.angle_voltage_A_B}}, {{payload.angle_voltage_A_B_sf}}, '{{payload.phase_A}}{{payload.phase_B}}', (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));\n\t\nINSERT INTO public.organic_nodes_control_energymeasure(\n\tphase, current, current_sf, voltage, voltage_sf, measurement_id)\n\tVALUES ('{{payload.phase_C}}', {{payload.current_C}},{{payload.current_C_sf}},{{payload.voltage_C}},{{payload.voltage_C_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));\n\nINSERT INTO public.organic_nodes_control_powermeasure(\n\tphase, voltage_current_angle, voltage_current_angle_sf,\tpower_factor,\tactive_power,\tactive_power_sf,\treactive_power,\treactive_power_sf,\tapparent_power,\tapparent_power_sf\t, measurement_id)\n\tVALUES ('{{payload.phase_C}}', {{payload.voltage_current_angle_C}},{{payload.voltage_current_angle_C_sf}},{{payload.power_factor_C}},{{payload.active_power_C}}, {{payload.active_power_C_sf}}, {{payload.reactive_power_C}}, {{payload.reactive_power_C_sf}}, {{payload.apparent_power_C}}, {{payload.apparent_power_C_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));\n\nINSERT INTO public.organic_nodes_control_voltagelagmeasure(\n\tangle, angle_sf,\tphase_combination, measurement_id)\n\tVALUES ({{payload.angle_voltage_A_C}}, {{payload.angle_voltage_A_C_sf}}, '{{payload.phase_A}}{{payload.phase_C}}', (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));\n\nINSERT INTO public.organic_nodes_control_voltagelagmeasure(\n\tangle, angle_sf,\tphase_combination, measurement_id)\n\tVALUES ({{payload.angle_voltage_B_C}}, {{payload.angle_voltage_B_C_sf}}, '{{payload.phase_B}}{{payload.phase_C}}', (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}')));",
        "output": "str",
        "x": 600,
        "y": 500,
        "wires": [
            [
                "52915c65d06f0b9e"
            ]
        ]
    },
    {
        "id": "519a6c42b226c872",
        "type": "postgres",
        "z": "e8287d7944e724f7",
        "postgresdb": "f3a8cd803cbddc27",
        "name": "Local",
        "output": false,
        "perrow": false,
        "rowspermsg": "1",
        "return_on_error": false,
        "limit_queries": "0",
        "limit_by": "payload",
        "limit_value": "1",
        "limit_drop_intermediate": false,
        "limit_drop_if_in_queue": false,
        "outputs": false,
        "x": 570,
        "y": 680,
        "wires": []
    },
    {
        "id": "b7ae2ba514a725d7",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "Sincronismo",
        "info": "",
        "x": 110,
        "y": 780,
        "wires": []
    },
    {
        "id": "7eb34228c28d3357",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_setup;",
        "postgreSQLConfig": "fc6bd11bac1af11f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 250,
        "y": 2420,
        "wires": [
            [
                "1552a62fd20e76bb"
            ]
        ]
    },
    {
        "id": "1552a62fd20e76bb",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 2420,
        "wires": [
            [
                "9597c176c2aeca7c"
            ]
        ]
    },
    {
        "id": "bef406c4807f542c",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "setup",
        "info": "",
        "x": 250,
        "y": 2380,
        "wires": []
    },
    {
        "id": "9597c176c2aeca7c",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_setup;",
        "postgreSQLConfig": "f5b4451dc02a9205",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 590,
        "y": 2420,
        "wires": [
            [
                "4381d0b132a4cbce"
            ]
        ]
    },
    {
        "id": "4381d0b132a4cbce",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 2420,
        "wires": [
            [
                "2108fcca15d3ed65"
            ]
        ]
    },
    {
        "id": "2108fcca15d3ed65",
        "type": "function",
        "z": "e8287d7944e724f7",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nmsg.nocs = JSON.parse(JSON.stringify(msg.nocs));\nmsg.local = JSON.parse(JSON.stringify(msg.local));\n\nfor (let setup_nocs of msg.nocs){ //verifica todos os dados do banco remoto\n    let count = 0\n    if (msg.local.length != 0)\n        for (let setup_local of msg.local) //compara para ver se o dado já é existente e o atualiza\n            if (setup_nocs.id == setup_local.id) {\n                count++;\n                if (JSON.stringify(setup_nocs) == JSON.stringify(setup_local)) break;\n\n                msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_setup SET id = \" + setup_nocs.id + \",date_setup = '\" + setup_nocs.date_setup+\"', status = '\"+setup_nocs.status+\"', description = '\"+setup_nocs.description+\"', area_id = \"+setup_nocs.area_id+\", circuit_id = \"+setup_nocs.circuit_id+\", device_id = \"+setup_nocs.device_id+\", monitored_device_id = \"+setup_nocs.monitored_device_id+\" WHERE id = \"+setup_nocs.id+\";\" \n                break;\n            }\n    // Cria dado no banco caso ele não exista\n    if(!count)\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_setup VALUES(\"+setup_nocs.id+\", '\"+setup_nocs.date_setup+\"', '\"+setup_nocs.status+\"', '\"+setup_nocs.description+\"', \"+setup_nocs.area_id+\", \"+setup_nocs.circuit_id+\", \"+setup_nocs.device_id+\", \"+setup_nocs.monitored_device_id+\");\"\n}\n\nmsg.queryParameters = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2420,
        "wires": [
            [
                "40fe20885fe85a87"
            ]
        ]
    },
    {
        "id": "3da6600b72c61230",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_area;",
        "postgreSQLConfig": "fc6bd11bac1af11f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 250,
        "y": 1520,
        "wires": [
            [
                "6c8c2c1939005cbf"
            ]
        ]
    },
    {
        "id": "6c8c2c1939005cbf",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1520,
        "wires": [
            [
                "420e4921d68167bc"
            ]
        ]
    },
    {
        "id": "c04772c47614c6b6",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "area",
        "info": "",
        "x": 250,
        "y": 1480,
        "wires": []
    },
    {
        "id": "420e4921d68167bc",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_area;",
        "postgreSQLConfig": "f5b4451dc02a9205",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 590,
        "y": 1520,
        "wires": [
            [
                "491d7eba2d6b964c"
            ]
        ]
    },
    {
        "id": "491d7eba2d6b964c",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1520,
        "wires": [
            [
                "c42dacb390a4b879"
            ]
        ]
    },
    {
        "id": "c42dacb390a4b879",
        "type": "function",
        "z": "e8287d7944e724f7",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nmsg.nocs = JSON.parse(JSON.stringify(msg.nocs));\nmsg.local = JSON.parse(JSON.stringify(msg.local));\n\nfor (let area_nocs of msg.nocs){ //verifica todos os dados do banco remoto\n    let count = 0\n    if (msg.local.length != 0)\n        for (let area_local of msg.local) //compara para ver se o dado já é existente e o atualiza\n            if (area_nocs.id == area_local.id) {\n                count++;\n                if (JSON.stringify(area_nocs) == JSON.stringify(area_local)) break;\n                \n                msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_area SET id = \" + area_nocs.id + \",name = '\" + area_nocs.name + \"', description = '\" + area_nocs.description + \"', company_id = \" + area_nocs.company_id+\" WHERE id = \"+area_nocs.id+\";\" \n                break;\n            }\n    // Cria dado no banco caso ele não exista\n    if(!count)\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_area VALUES(\" + area_nocs.id + \", '\" + area_nocs.name + \"', '\" + area_nocs.description + \"', \" + area_nocs.company_id+\");\"\n}\n\nmsg.queryParameters = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1520,
        "wires": [
            [
                "9a6e880ed2dc6cb4"
            ]
        ]
    },
    {
        "id": "9feefbc233b512e6",
        "type": "postgres",
        "z": "e8287d7944e724f7",
        "postgresdb": "f3a8cd803cbddc27",
        "name": "Local",
        "output": false,
        "perrow": false,
        "rowspermsg": "1",
        "return_on_error": false,
        "limit_queries": "0",
        "limit_by": "payload",
        "limit_value": "1",
        "limit_drop_intermediate": false,
        "limit_drop_if_in_queue": false,
        "outputs": false,
        "x": 1170,
        "y": 1420,
        "wires": []
    },
    {
        "id": "f5bfa36f87e42c86",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "NOCS",
        "query": "SELECT * FROM public.core_registration_company;",
        "postgreSQLConfig": "fc6bd11bac1af11f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 250,
        "y": 1420,
        "wires": [
            [
                "30be2b5cebbbf31d"
            ]
        ]
    },
    {
        "id": "30be2b5cebbbf31d",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1420,
        "wires": [
            [
                "d7650787d91f0e9e"
            ]
        ]
    },
    {
        "id": "2ab5b49f44451e5d",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "company",
        "info": "",
        "x": 260,
        "y": 1380,
        "wires": []
    },
    {
        "id": "d7650787d91f0e9e",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "Local",
        "query": "SELECT * FROM public.core_registration_company;",
        "postgreSQLConfig": "f5b4451dc02a9205",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 590,
        "y": 1420,
        "wires": [
            [
                "5937752859ed6058"
            ]
        ]
    },
    {
        "id": "5937752859ed6058",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1420,
        "wires": [
            [
                "ff81876be6468c81"
            ]
        ]
    },
    {
        "id": "ff81876be6468c81",
        "type": "function",
        "z": "e8287d7944e724f7",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nmsg.nocs = JSON.parse(JSON.stringify(msg.nocs));\nmsg.local = JSON.parse(JSON.stringify(msg.local));\n\nfor (let company_nocs of msg.nocs){ //verifica todos os dados do banco remoto\n    let count = 0\n    if (msg.local.length != 0)\n        for (let company_local of msg.local) //compara para ver se o dado já é existente e o atualiza\n            if (company_nocs.id == company_local.id) {\n                count++;\n                if (JSON.stringify(company_nocs) == JSON.stringify(company_local)) break;\n                \n                msg.payload = msg.payload + \"UPDATE public.core_registration_company SET id = \" + company_nocs.id + \",registration_date = '\" + company_nocs.registration_date + \"', description = '\" + company_nocs.description + \"', address = '\" + company_nocs.address + \"', city_id = \" + company_nocs.city_id + \", user_id = \" + company_nocs.user_id +\" WHERE id = \"+company_nocs.id+\";\" \n                break;\n            }\n    // Cria dado no banco caso ele não exista\n    if(!count)\n        msg.payload = msg.payload + \"INSERT INTO public.core_registration_company VALUES(\" + company_nocs.id + \", '\" + company_nocs.registration_date + \"', '\" + company_nocs.description + \"', '\" + company_nocs.address + \"', \" + company_nocs.city_id + \", \" + company_nocs.user_id +\");\"\n}\n\nmsg.queryParameters = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1420,
        "wires": [
            [
                "9feefbc233b512e6"
            ]
        ]
    },
    {
        "id": "b5be30e6173941dd",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "NOCS",
        "query": "SELECT * FROM public.core_registration_city;",
        "postgreSQLConfig": "fc6bd11bac1af11f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 250,
        "y": 1320,
        "wires": [
            [
                "36ed55996c45840d"
            ]
        ]
    },
    {
        "id": "36ed55996c45840d",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1320,
        "wires": [
            [
                "b857d6b20151d3df"
            ]
        ]
    },
    {
        "id": "9945aacda2d29778",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "city",
        "info": "",
        "x": 250,
        "y": 1280,
        "wires": []
    },
    {
        "id": "b857d6b20151d3df",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "Local",
        "query": "SELECT * FROM public.core_registration_city;",
        "postgreSQLConfig": "f5b4451dc02a9205",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 590,
        "y": 1320,
        "wires": [
            [
                "1b220cde187629e7"
            ]
        ]
    },
    {
        "id": "1b220cde187629e7",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1320,
        "wires": [
            [
                "f3ae9370d89648c9"
            ]
        ]
    },
    {
        "id": "f6502ea30fb529c8",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "NOCS",
        "query": "SELECT * FROM public.core_registration_state;",
        "postgreSQLConfig": "fc6bd11bac1af11f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 250,
        "y": 1220,
        "wires": [
            [
                "6c3001344b7413a3"
            ]
        ]
    },
    {
        "id": "6c3001344b7413a3",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1220,
        "wires": [
            [
                "06d8205bf25c35b4"
            ]
        ]
    },
    {
        "id": "9f9c5815de5aea97",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "state",
        "info": "",
        "x": 250,
        "y": 1180,
        "wires": []
    },
    {
        "id": "06d8205bf25c35b4",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "Local",
        "query": "SELECT * FROM public.core_registration_state;",
        "postgreSQLConfig": "f5b4451dc02a9205",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 590,
        "y": 1220,
        "wires": [
            [
                "ade39374458a6a66"
            ]
        ]
    },
    {
        "id": "ade39374458a6a66",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1220,
        "wires": [
            [
                "4f4ca3e10733d060"
            ]
        ]
    },
    {
        "id": "4f4ca3e10733d060",
        "type": "function",
        "z": "e8287d7944e724f7",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nmsg.nocs = JSON.parse(JSON.stringify(msg.nocs));\nmsg.local = JSON.parse(JSON.stringify(msg.local));\n\nfor (let state_nocs of msg.nocs){ //verifica todos os dados do banco remoto\n    let count = 0\n    if (msg.local.length != 0)\n        for (let state_local of msg.local) //compara para ver se o dado já é existente e o atualiza\n            if (state_nocs.id == state_local.id) {\n                count++;\n                if (JSON.stringify(state_nocs) == JSON.stringify(state_local)) break;\n\n                msg.payload = msg.payload + \"UPDATE public.core_registration_state SET id = \" + state_nocs.id + \", description = '\" + state_nocs.description + \"', acronym = '\" + state_nocs.acronym + \"', country_id = \" + state_nocs.country_id +\" WHERE id = \"+state_nocs.id+\";\" \n                break;\n            }\n    // Cria dado no banco caso ele não exista\n    if(!count)\n        msg.payload = msg.payload + \"INSERT INTO public.core_registration_state VALUES(\" + state_nocs.id + \", '\" + state_nocs.description + \"', '\" + state_nocs.acronym  + \"', \" + state_nocs.country_id +\");\"\n}\n\nmsg.queryParameters = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1220,
        "wires": [
            [
                "094f9c905935cb35"
            ]
        ]
    },
    {
        "id": "b9a4dc3dc8049d67",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "NOCS",
        "query": "SELECT * FROM public.core_registration_country;",
        "postgreSQLConfig": "fc6bd11bac1af11f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 250,
        "y": 1120,
        "wires": [
            [
                "483e120d5aa10e40"
            ]
        ]
    },
    {
        "id": "483e120d5aa10e40",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1120,
        "wires": [
            [
                "3255f96467d86c46"
            ]
        ]
    },
    {
        "id": "9ae67fd79367861e",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "country",
        "info": "",
        "x": 250,
        "y": 1080,
        "wires": []
    },
    {
        "id": "3255f96467d86c46",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "Local",
        "query": "SELECT * FROM public.core_registration_country;",
        "postgreSQLConfig": "f5b4451dc02a9205",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 590,
        "y": 1120,
        "wires": [
            [
                "be135fd442fd14f2"
            ]
        ]
    },
    {
        "id": "be135fd442fd14f2",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1120,
        "wires": [
            [
                "3a844cfcef49d6a3"
            ]
        ]
    },
    {
        "id": "3a844cfcef49d6a3",
        "type": "function",
        "z": "e8287d7944e724f7",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nmsg.nocs = JSON.parse(JSON.stringify(msg.nocs));\nmsg.local = JSON.parse(JSON.stringify(msg.local));\n\nfor (let country_nocs of msg.nocs){ //verifica todos os dados do banco remoto\n    let count = 0\n    if (msg.local.length != 0)\n        for (let country_local of msg.local){ //compara para ver se o dado já é existente e o atualiza\n            if (country_nocs.id == country_local.id) {\n                count++;\n                if (JSON.stringify(country_nocs) == JSON.stringify(country_local)) break;\n                \n                msg.payload = msg.payload + \"UPDATE public.core_registration_country SET id = \" + country_nocs.id + \", description = '\" + country_nocs.description +\"' WHERE id = \"+country_nocs.id+\";\" \n                break;\n            }\n        }\n    // Cria dado no banco caso ele não exista\n    if(!count)\n        msg.payload = msg.payload + \"INSERT INTO public.core_registration_country VALUES(\" + country_nocs.id + \", '\" + country_nocs.description + \"');\"\n}\n\nmsg.queryParameters = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1120,
        "wires": [
            [
                "0913dc91f3dc051f"
            ]
        ]
    },
    {
        "id": "5081a1edc4a1a6a9",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "NOCS",
        "query": "SELECT * FROM public.core_access_user;",
        "postgreSQLConfig": "fc6bd11bac1af11f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 250,
        "y": 1020,
        "wires": [
            [
                "ae10dcd5239babe5"
            ]
        ]
    },
    {
        "id": "ae10dcd5239babe5",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1020,
        "wires": [
            [
                "fac2a2062e46a545"
            ]
        ]
    },
    {
        "id": "201f91a30ce0c903",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "access_user",
        "info": "",
        "x": 270,
        "y": 980,
        "wires": []
    },
    {
        "id": "fac2a2062e46a545",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "Local",
        "query": "SELECT * FROM public.core_access_user;",
        "postgreSQLConfig": "f5b4451dc02a9205",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 590,
        "y": 1020,
        "wires": [
            [
                "f1f26efc0d1a33a9"
            ]
        ]
    },
    {
        "id": "f1f26efc0d1a33a9",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1020,
        "wires": [
            [
                "f9b614dfa9d3a8a1"
            ]
        ]
    },
    {
        "id": "f3ae9370d89648c9",
        "type": "function",
        "z": "e8287d7944e724f7",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nmsg.nocs = JSON.parse(JSON.stringify(msg.nocs));\nmsg.local = JSON.parse(JSON.stringify(msg.local));\n\nfor (let city_nocs of msg.nocs){ //verifica todos os dados do banco remoto\n    let count = 0\n    if (msg.local.length != 0)\n        for (let city_local of msg.local) //compara para ver se o dado já é existente e o atualiza\n            if (city_nocs.id == city_local.id) {\n                count++;\n                if (JSON.stringify(city_nocs) == JSON.stringify(city_local)) break;\n\n                msg.payload = msg.payload + \"UPDATE public.core_registration_city SET id = \" + city_nocs.id + \", description = '\" + city_nocs.description + \"', state_id = \" + city_nocs.state_id +\" WHERE id = \"+city_nocs.id+\";\" \n                break;\n            }\n    // Cria dado no banco caso ele não exista\n    if(!count)\n        msg.payload = msg.payload + \"INSERT INTO public.core_registration_city VALUES(\" + city_nocs.id + \", '\" + city_nocs.description + \"', \" + city_nocs.state_id +\");\"\n}\n\nmsg.queryParameters = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1320,
        "wires": [
            [
                "e1074e9d24e2f36b"
            ]
        ]
    },
    {
        "id": "f9b614dfa9d3a8a1",
        "type": "function",
        "z": "e8287d7944e724f7",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nmsg.nocs = JSON.parse(JSON.stringify(msg.nocs));\nmsg.local = JSON.parse(JSON.stringify(msg.local));\n\nfor (let access_user_nocs of msg.nocs){ //verifica todos os dados do banco remoto\n    let count = 0\n    // if (msg.local.length != 0)\n        for (let access_user_local of msg.local) //compara para ver se o dado já é existente e o atualiza\n            if (access_user_nocs.id == access_user_local.id) {\n                count++;\n                // if (JSON.stringify(access_user_nocs) == JSON.stringify(access_user_local)) break;\n                \n                msg.payload = msg.payload + \"UPDATE public.core_access_user SET id = \" + access_user_nocs.id + \", password = '-' , last_login = '2023-03-06 15:59:09.823184-03', is_superuser = \" + access_user_nocs.is_superuser + \", username = '\" + access_user_nocs.username + \"', first_name = '\" + access_user_nocs.first_name + \"', last_name = '\" + access_user_nocs.last_name + \"', email = '\" + access_user_nocs.email + \"', is_staff = \" + access_user_nocs.is_staff + \", is_active = \" + access_user_nocs.is_active + \", date_joined = '\" + access_user_nocs.date_joined + \"', cpf = '\" + access_user_nocs.cpf + \"', telephone = '\" + access_user_nocs.telephone + \"' WHERE id = \"+access_user_nocs.id+\";\"\n                break;\n            }\n    // Cria dado no banco caso ele não exista\n    if(!count)\n        msg.payload = msg.payload + \"INSERT INTO public.core_access_user VALUES(\" + access_user_nocs.id + \", '-' , '2023-03-06 15:59:09.823184-03', \" + access_user_nocs.is_superuser + \", '\" + access_user_nocs.username + \"', '\" + access_user_nocs.first_name + \"', '\" + access_user_nocs.last_name + \"', '\" + access_user_nocs.email + \"', \" + access_user_nocs.is_staff + \", \" + access_user_nocs.is_active + \", '\" + access_user_nocs.date_joined + \"', '\" + access_user_nocs.cpf + \"', '\" + access_user_nocs.telephone + \"');\"\n}\n\nmsg.queryParameters = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1020,
        "wires": [
            [
                "efdb62e7893d4001"
            ]
        ]
    },
    {
        "id": "e1074e9d24e2f36b",
        "type": "postgres",
        "z": "e8287d7944e724f7",
        "postgresdb": "f3a8cd803cbddc27",
        "name": "Local",
        "output": false,
        "perrow": false,
        "rowspermsg": "1",
        "return_on_error": false,
        "limit_queries": "0",
        "limit_by": "payload",
        "limit_value": "1",
        "limit_drop_intermediate": false,
        "limit_drop_if_in_queue": false,
        "outputs": false,
        "x": 1170,
        "y": 1320,
        "wires": []
    },
    {
        "id": "9a6e880ed2dc6cb4",
        "type": "postgres",
        "z": "e8287d7944e724f7",
        "postgresdb": "f3a8cd803cbddc27",
        "name": "Local",
        "output": false,
        "perrow": false,
        "rowspermsg": "1",
        "return_on_error": false,
        "limit_queries": "0",
        "limit_by": "payload",
        "limit_value": "1",
        "limit_drop_intermediate": false,
        "limit_drop_if_in_queue": false,
        "outputs": false,
        "x": 1170,
        "y": 1520,
        "wires": []
    },
    {
        "id": "40fe20885fe85a87",
        "type": "postgres",
        "z": "e8287d7944e724f7",
        "postgresdb": "f3a8cd803cbddc27",
        "name": "Local",
        "output": false,
        "perrow": false,
        "rowspermsg": "1",
        "return_on_error": false,
        "limit_queries": "0",
        "limit_by": "payload",
        "limit_value": "1",
        "limit_drop_intermediate": false,
        "limit_drop_if_in_queue": false,
        "outputs": false,
        "x": 1170,
        "y": 2420,
        "wires": []
    },
    {
        "id": "6976dfdbe86ba1fb",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "sincronimos dados cadastrais",
        "info": "",
        "x": 200,
        "y": 840,
        "wires": []
    },
    {
        "id": "2a0859e4e38c1769",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "loop",
        "links": [
            "186a4deaf5124833",
            "25ef75617a22f23c",
            "27d90fe1cf3fa5b2"
        ],
        "x": 135,
        "y": 1020,
        "wires": [
            [
                "5081a1edc4a1a6a9"
            ]
        ]
    },
    {
        "id": "27d90fe1cf3fa5b2",
        "type": "link out",
        "z": "e8287d7944e724f7",
        "name": "loop",
        "mode": "link",
        "links": [
            "2a0859e4e38c1769",
            "770753ac90d1606f",
            "bfbce55ef09446a0",
            "9df3803477262c78",
            "7c76e2c3274d4a67",
            "8487dd3df02ab2b2",
            "90ea025e7b71d331",
            "a4154898f69f8845",
            "e0f0bd479ad4326c",
            "c1a6d0f23adce4e2",
            "561f9bdffa950abe",
            "796afd436c81502a",
            "aced49e2db1368f3",
            "9ab72ea34fa63dda",
            "dcb57c8628d72d76",
            "0eeea4ed9881a06a",
            "c09678c95e40e63c",
            "b7813722c2d05777"
        ],
        "x": 375,
        "y": 940,
        "wires": []
    },
    {
        "id": "770753ac90d1606f",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "loop",
        "links": [
            "27d90fe1cf3fa5b2",
            "25ef75617a22f23c",
            "186a4deaf5124833"
        ],
        "x": 135,
        "y": 1120,
        "wires": [
            [
                "b9a4dc3dc8049d67"
            ]
        ]
    },
    {
        "id": "bfbce55ef09446a0",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "loop",
        "links": [
            "27d90fe1cf3fa5b2",
            "25ef75617a22f23c",
            "186a4deaf5124833"
        ],
        "x": 135,
        "y": 1220,
        "wires": [
            [
                "f6502ea30fb529c8"
            ]
        ]
    },
    {
        "id": "9df3803477262c78",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "loop",
        "links": [
            "27d90fe1cf3fa5b2",
            "25ef75617a22f23c",
            "186a4deaf5124833"
        ],
        "x": 135,
        "y": 1320,
        "wires": [
            [
                "b5be30e6173941dd"
            ]
        ]
    },
    {
        "id": "7c76e2c3274d4a67",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "loop",
        "links": [
            "27d90fe1cf3fa5b2",
            "25ef75617a22f23c",
            "186a4deaf5124833"
        ],
        "x": 135,
        "y": 1420,
        "wires": [
            [
                "f5bfa36f87e42c86"
            ]
        ]
    },
    {
        "id": "8487dd3df02ab2b2",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "loop",
        "links": [
            "27d90fe1cf3fa5b2",
            "25ef75617a22f23c",
            "186a4deaf5124833"
        ],
        "x": 135,
        "y": 1520,
        "wires": [
            [
                "3da6600b72c61230"
            ]
        ]
    },
    {
        "id": "90ea025e7b71d331",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "loop",
        "links": [
            "27d90fe1cf3fa5b2",
            "25ef75617a22f23c",
            "186a4deaf5124833"
        ],
        "x": 135,
        "y": 2420,
        "wires": [
            [
                "7eb34228c28d3357"
            ]
        ]
    },
    {
        "id": "094f9c905935cb35",
        "type": "postgres",
        "z": "e8287d7944e724f7",
        "postgresdb": "f3a8cd803cbddc27",
        "name": "Local",
        "output": false,
        "perrow": false,
        "rowspermsg": "1",
        "return_on_error": false,
        "limit_queries": "0",
        "limit_by": "payload",
        "limit_value": "1",
        "limit_drop_intermediate": false,
        "limit_drop_if_in_queue": false,
        "outputs": false,
        "x": 1170,
        "y": 1220,
        "wires": []
    },
    {
        "id": "0913dc91f3dc051f",
        "type": "postgres",
        "z": "e8287d7944e724f7",
        "postgresdb": "f3a8cd803cbddc27",
        "name": "Local",
        "output": false,
        "perrow": false,
        "rowspermsg": "1",
        "return_on_error": false,
        "limit_queries": "0",
        "limit_by": "payload",
        "limit_value": "1",
        "limit_drop_intermediate": false,
        "limit_drop_if_in_queue": false,
        "outputs": false,
        "x": 1170,
        "y": 1120,
        "wires": []
    },
    {
        "id": "efdb62e7893d4001",
        "type": "postgres",
        "z": "e8287d7944e724f7",
        "postgresdb": "f3a8cd803cbddc27",
        "name": "Local",
        "output": false,
        "perrow": false,
        "rowspermsg": "1",
        "return_on_error": false,
        "limit_queries": "0",
        "limit_by": "payload",
        "limit_value": "1",
        "limit_drop_intermediate": false,
        "limit_drop_if_in_queue": false,
        "outputs": false,
        "x": 1170,
        "y": 1020,
        "wires": []
    },
    {
        "id": "13bde27b86c01eef",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_circuit;",
        "postgreSQLConfig": "fc6bd11bac1af11f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 250,
        "y": 2320,
        "wires": [
            [
                "195df61de2124849"
            ]
        ]
    },
    {
        "id": "195df61de2124849",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 2320,
        "wires": [
            [
                "17f51283c5427f84"
            ]
        ]
    },
    {
        "id": "abb04568e3779c69",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "circuit",
        "info": "",
        "x": 250,
        "y": 2280,
        "wires": []
    },
    {
        "id": "17f51283c5427f84",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_circuit;",
        "postgreSQLConfig": "f5b4451dc02a9205",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 590,
        "y": 2320,
        "wires": [
            [
                "a9b1a8b26dac34c1"
            ]
        ]
    },
    {
        "id": "a9b1a8b26dac34c1",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 2320,
        "wires": [
            [
                "f94e9ce530652d75"
            ]
        ]
    },
    {
        "id": "f94e9ce530652d75",
        "type": "function",
        "z": "e8287d7944e724f7",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nmsg.nocs = JSON.parse(JSON.stringify(msg.nocs));\nmsg.local = JSON.parse(JSON.stringify(msg.local));\n\nfor (let circuit_nocs of msg.nocs){ //verifica todos os dados do banco remoto\n    let count = 0\n    if (msg.local.length != 0)\n        for (let circuit_local of msg.local) //compara para ver se o dado já é existente e o atualiza\n            if (circuit_nocs.id == circuit_local.id) {\n                count++;\n                if (JSON.stringify(circuit_nocs) == JSON.stringify(circuit_local)) break;\n\n                msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_circuit SET id = \" + circuit_nocs.id + \",phase = '\" + circuit_nocs.phase + \"', breaker = '\" + circuit_nocs.breaker + \"', name = '\" + circuit_nocs.name + \"', description = '\" + circuit_nocs.description + \"' WHERE id = \" + circuit_nocs.id + \";\"  \n                break;\n            }\n    // Cria dado no banco caso ele não exista\n    if(!count)\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_circuit VALUES(\" + circuit_nocs.id + \", '\" + circuit_nocs.phase + \"', '\" + circuit_nocs.breaker + \"', '\" + circuit_nocs.name +\"', '\"+circuit_nocs.description+\"');\"\n}\n\nmsg.queryParameters = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2320,
        "wires": [
            [
                "e0e3a26fc57b31be"
            ]
        ]
    },
    {
        "id": "e0e3a26fc57b31be",
        "type": "postgres",
        "z": "e8287d7944e724f7",
        "postgresdb": "f3a8cd803cbddc27",
        "name": "Local",
        "output": false,
        "perrow": false,
        "rowspermsg": "1",
        "return_on_error": false,
        "limit_queries": "0",
        "limit_by": "payload",
        "limit_value": "1",
        "limit_drop_intermediate": false,
        "limit_drop_if_in_queue": false,
        "outputs": false,
        "x": 1170,
        "y": 2320,
        "wires": []
    },
    {
        "id": "e0f0bd479ad4326c",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "loop",
        "links": [
            "27d90fe1cf3fa5b2",
            "25ef75617a22f23c",
            "186a4deaf5124833"
        ],
        "x": 135,
        "y": 2320,
        "wires": [
            [
                "13bde27b86c01eef"
            ]
        ]
    },
    {
        "id": "046814b83f88f676",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_mqttdevice;",
        "postgreSQLConfig": "fc6bd11bac1af11f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 250,
        "y": 2620,
        "wires": [
            [
                "4b83902068bf3c8e"
            ]
        ]
    },
    {
        "id": "4b83902068bf3c8e",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 2620,
        "wires": [
            [
                "7dd2a2ea62c3edff"
            ]
        ]
    },
    {
        "id": "9c76a6ec98e32459",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "mqttdevice",
        "info": "",
        "x": 260,
        "y": 2580,
        "wires": []
    },
    {
        "id": "7dd2a2ea62c3edff",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_mqttdevice;",
        "postgreSQLConfig": "f5b4451dc02a9205",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 590,
        "y": 2620,
        "wires": [
            [
                "351c1f9869284968"
            ]
        ]
    },
    {
        "id": "351c1f9869284968",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 2620,
        "wires": [
            [
                "41a75044a7375d11"
            ]
        ]
    },
    {
        "id": "41a75044a7375d11",
        "type": "function",
        "z": "e8287d7944e724f7",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nmsg.nocs = JSON.parse(JSON.stringify(msg.nocs));\nmsg.local = JSON.parse(JSON.stringify(msg.local));\n\nfor (let mqttdevice_nocs of msg.nocs){ //verifica todos os dados do banco remoto\n    let count = 0\n    if (msg.local.length != 0)\n        for (let mqttdevice_local of msg.local) //compara para ver se o dado já é existente e o atualiza\n            if (mqttdevice_nocs.id == mqttdevice_local.id) {\n                count++;\n                // if (JSON.stringify(mqttdevice_nocs) == JSON.stringify(mqttdevice_local)) break;\n\n                msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_mqttdevice SET id = \" + mqttdevice_nocs.id + \",device_id = \" + mqttdevice_nocs.device_id + \",mqtt_access_id = \" + mqttdevice_nocs.mqtt_access_id + \" WHERE id = \" + mqttdevice_local.id + \";\"\n                break;\n            }\n    // Cria dado no banco caso ele não exista\n    if(!count)\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_mqttdevice(id, device_id, mqtt_access_id) VALUES(\" + mqttdevice_nocs.id + \", \" + mqttdevice_nocs.device_id + \", \" + mqttdevice_nocs.mqtt_access_id +\");\"\n}\n\nmsg.queryParameters = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2620,
        "wires": [
            [
                "f563a538baa4cfb1"
            ]
        ]
    },
    {
        "id": "f563a538baa4cfb1",
        "type": "postgres",
        "z": "e8287d7944e724f7",
        "postgresdb": "f3a8cd803cbddc27",
        "name": "Local",
        "output": false,
        "perrow": false,
        "rowspermsg": "1",
        "return_on_error": false,
        "limit_queries": "0",
        "limit_by": "payload",
        "limit_value": "1",
        "limit_drop_intermediate": false,
        "limit_drop_if_in_queue": false,
        "outputs": false,
        "x": 1170,
        "y": 2620,
        "wires": []
    },
    {
        "id": "347ad65c66104668",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_mqttaccess;",
        "postgreSQLConfig": "fc6bd11bac1af11f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 250,
        "y": 2520,
        "wires": [
            [
                "31ca46a6962b043b"
            ]
        ]
    },
    {
        "id": "31ca46a6962b043b",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 2520,
        "wires": [
            [
                "b6e5e7ded5bb71d7"
            ]
        ]
    },
    {
        "id": "b6e5e7ded5bb71d7",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_mqttaccess;",
        "postgreSQLConfig": "f5b4451dc02a9205",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 590,
        "y": 2520,
        "wires": [
            [
                "a5876519b026d1e3"
            ]
        ]
    },
    {
        "id": "a5876519b026d1e3",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 2520,
        "wires": [
            [
                "6db15530f124132a"
            ]
        ]
    },
    {
        "id": "eb3ec60fe9c329c8",
        "type": "postgres",
        "z": "e8287d7944e724f7",
        "postgresdb": "f3a8cd803cbddc27",
        "name": "Local",
        "output": false,
        "perrow": false,
        "rowspermsg": "1",
        "return_on_error": false,
        "limit_queries": "0",
        "limit_by": "payload",
        "limit_value": "1",
        "limit_drop_intermediate": false,
        "limit_drop_if_in_queue": false,
        "outputs": false,
        "x": 1170,
        "y": 2520,
        "wires": []
    },
    {
        "id": "8d57569082c4cc08",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "mqttaccess",
        "info": "",
        "x": 270,
        "y": 2480,
        "wires": []
    },
    {
        "id": "6db15530f124132a",
        "type": "function",
        "z": "e8287d7944e724f7",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nmsg.nocs = JSON.parse(JSON.stringify(msg.nocs));\nmsg.local = JSON.parse(JSON.stringify(msg.local));\n\nfor (let mqttaccess_nocs of msg.nocs){ //verifica todos os dados do banco remoto\n    let count = 0\n    if (msg.local.length != 0)\n        for (let mqttaccess_local of msg.local) //compara para ver se o dado já é existente e o atualiza\n            if (mqttaccess_nocs.id == mqttaccess_local.id) {\n                count++;\n                if (JSON.stringify(mqttaccess_nocs) == JSON.stringify(mqttaccess_local)) break;\n                \n                msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_mqttaccess SET id = \" + mqttaccess_nocs.id + \",mqtt_id = '\" + mqttaccess_nocs.mqtt_id + \"',mqtt_port = \" + mqttaccess_nocs.mqtt_port + \",status = '\" + mqttaccess_nocs.status + \"',mqtt_server = '\" + mqttaccess_nocs.mqtt_server + \"',pub_topic = '\" + mqttaccess_nocs.pub_topic + \"',action = '\" + mqttaccess_nocs.action + \"',type = '\" + mqttaccess_nocs.type + \"',sub_topic = '\" + mqttaccess_nocs.sub_topic + \"',sub_user = '\" + mqttaccess_nocs.sub_user + \"',pub_user = '\" + mqttaccess_nocs.pub_user + \"',user_mqtt = '\" + mqttaccess_nocs.user_mqtt + \"' WHERE id = \" + mqttaccess_local.id + \";\"\n                break;\n            }\n    // Cria dado no banco caso ele não exista\n    if(!count)\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_mqttaccess VALUES(\" + mqttaccess_nocs.id + \", '\" + mqttaccess_nocs.mqtt_id + \"', \" + mqttaccess_nocs.mqtt_port + \", '\" + mqttaccess_nocs.status + \"', '\" + mqttaccess_nocs.mqtt_server + \"', '\" + mqttaccess_nocs.pub_topic + \"', '\" + mqttaccess_nocs.action + \"', '\" + mqttaccess_nocs.type + \"', '\" + mqttaccess_nocs.sub_topic + \"', '\" + mqttaccess_nocs.sub_user + \"', '\" + mqttaccess_nocs.pub_user + \"', '\" + mqttaccess_nocs.user_mqtt + \"');\"\n}\n\nmsg.queryParameters = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2520,
        "wires": [
            [
                "eb3ec60fe9c329c8"
            ]
        ]
    },
    {
        "id": "4d16a79ba1a4419b",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_hardware;",
        "postgreSQLConfig": "fc6bd11bac1af11f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 250,
        "y": 1620,
        "wires": [
            [
                "ee25deaecfc5f725"
            ]
        ]
    },
    {
        "id": "ee25deaecfc5f725",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1620,
        "wires": [
            [
                "d453604a6da66f57"
            ]
        ]
    },
    {
        "id": "d453604a6da66f57",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_hardware;",
        "postgreSQLConfig": "f5b4451dc02a9205",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 590,
        "y": 1620,
        "wires": [
            [
                "2cc41bb45dfca6c0"
            ]
        ]
    },
    {
        "id": "2cc41bb45dfca6c0",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1620,
        "wires": [
            [
                "07b048d8f783c051"
            ]
        ]
    },
    {
        "id": "07b048d8f783c051",
        "type": "function",
        "z": "e8287d7944e724f7",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nmsg.nocs = JSON.parse(JSON.stringify(msg.nocs));\nmsg.local = JSON.parse(JSON.stringify(msg.local));\n\nfor (let hardware_nocs of msg.nocs){ //verifica todos os dados do banco remoto\n    let count = 0\n    if (msg.local.length != 0)\n        for (let hardware_local of msg.local) //compara para ver se o dado já é existente e o atualiza\n            if (hardware_nocs.id == hardware_local.id) {\n                count++;\n                if (JSON.stringify(hardware_nocs) == JSON.stringify(hardware_local)) break;\n                \n                msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_hardware SET id = \" + hardware_nocs.id + \",name = '\" + hardware_nocs.name + \"',nature = '\" + hardware_nocs.nature + \"',version = '\" + hardware_nocs.version + \"',bloc_connection = \" + hardware_nocs.bloc_connection + \",esp_router = \" + hardware_nocs.esp_router + \",current_ic = '\" + hardware_nocs.current_ic + \"',sensor = '\" + hardware_nocs.sensor + \"',status = '\" + hardware_nocs.status + \"',description = '\" + hardware_nocs.description + \"' WHERE id = \" + hardware_local.id + \";\" \n                break;\n            }\n    // Cria dado no banco caso ele não exista\n    if(!count)\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_hardware VALUES(\" + hardware_nocs.id + \", '\" + hardware_nocs.name + \"', '\" + hardware_nocs.nature + \"', '\" + hardware_nocs.version + \"', \" + hardware_nocs.bloc_connection + \", \" + hardware_nocs.esp_router + \", '\" + hardware_nocs.current_ic + \"', '\" + hardware_nocs.sensor + \"', '\" + hardware_nocs.status + \"', '\" + hardware_nocs.description + \"');\" \n}\n\nmsg.queryParameters = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1620,
        "wires": [
            [
                "58c0eca7df626098"
            ]
        ]
    },
    {
        "id": "58c0eca7df626098",
        "type": "postgres",
        "z": "e8287d7944e724f7",
        "postgresdb": "f3a8cd803cbddc27",
        "name": "Local",
        "output": false,
        "perrow": false,
        "rowspermsg": "1",
        "return_on_error": false,
        "limit_queries": "0",
        "limit_by": "payload",
        "limit_value": "1",
        "limit_drop_intermediate": false,
        "limit_drop_if_in_queue": false,
        "outputs": false,
        "x": 1170,
        "y": 1620,
        "wires": []
    },
    {
        "id": "f1d8c6d5dd9289e2",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "hardware",
        "info": "",
        "x": 260,
        "y": 1580,
        "wires": []
    },
    {
        "id": "3be527713c181ee2",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_firmware;",
        "postgreSQLConfig": "fc6bd11bac1af11f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 250,
        "y": 1720,
        "wires": [
            [
                "0105fc0fd72d7393"
            ]
        ]
    },
    {
        "id": "0105fc0fd72d7393",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1720,
        "wires": [
            [
                "7552df46794dbba2"
            ]
        ]
    },
    {
        "id": "7552df46794dbba2",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_firmware;",
        "postgreSQLConfig": "f5b4451dc02a9205",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 590,
        "y": 1720,
        "wires": [
            [
                "beabe9dbd33783cc"
            ]
        ]
    },
    {
        "id": "beabe9dbd33783cc",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1720,
        "wires": [
            [
                "6e71c293f24c6a7c"
            ]
        ]
    },
    {
        "id": "6e71c293f24c6a7c",
        "type": "function",
        "z": "e8287d7944e724f7",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nmsg.nocs = JSON.parse(JSON.stringify(msg.nocs));\nmsg.local = JSON.parse(JSON.stringify(msg.local));\n\nfor (let firmware_nocs of msg.nocs){ //verifica todos os dados do banco remoto\n    let count = 0\n    if (msg.local.length != 0)\n        for (let firmware_local of msg.local) //compara para ver se o dado já é existente e o atualiza\n            if (firmware_nocs.id == firmware_local.id) {\n                count++;\n                if (JSON.stringify(firmware_nocs) == JSON.stringify(firmware_local)) break;\n                \n                msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_firmware SET id = \" + firmware_nocs.id + \",name = '\" + firmware_nocs.name + \"',version = '\" + firmware_nocs.version + \"',nature = '\" + firmware_nocs.nature + \"',function = '\" + firmware_nocs.function + \"',status = '\" + firmware_nocs.status + \"',used_module = '\" + firmware_nocs.used_module + \"',description = '\" + firmware_nocs.description + \"',path = '\" + firmware_nocs.path + \"' WHERE id = \" + firmware_local.id + \";\"\n                break;\n            }\n    // Cria dado no banco caso ele não exista\n    if(!count)\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_firmware VALUES(\" + firmware_nocs.id + \", '\" + firmware_nocs.name + \"', '\" + firmware_nocs.version + \"', '\" + firmware_nocs.nature + \"', '\" + firmware_nocs.function + \"', '\" + firmware_nocs.status + \"', '\" + firmware_nocs.used_module + \"', '\" + firmware_nocs.description + \"', '\" + firmware_nocs.path + \"');\" \n}\n\nmsg.queryParameters = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1720,
        "wires": [
            [
                "d396e0c4d33b7fcd"
            ]
        ]
    },
    {
        "id": "d396e0c4d33b7fcd",
        "type": "postgres",
        "z": "e8287d7944e724f7",
        "postgresdb": "f3a8cd803cbddc27",
        "name": "Local",
        "output": false,
        "perrow": false,
        "rowspermsg": "1",
        "return_on_error": false,
        "limit_queries": "0",
        "limit_by": "payload",
        "limit_value": "1",
        "limit_drop_intermediate": false,
        "limit_drop_if_in_queue": false,
        "outputs": false,
        "x": 1170,
        "y": 1720,
        "wires": []
    },
    {
        "id": "02bf17d907ce7b25",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "firmware",
        "info": "",
        "x": 260,
        "y": 1680,
        "wires": []
    },
    {
        "id": "2967e3b814b4d32e",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_devicesetup;",
        "postgreSQLConfig": "fc6bd11bac1af11f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 250,
        "y": 1820,
        "wires": [
            [
                "630cbb82a7ec6b87"
            ]
        ]
    },
    {
        "id": "630cbb82a7ec6b87",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1820,
        "wires": [
            [
                "2be35b87c3fb0eed"
            ]
        ]
    },
    {
        "id": "2be35b87c3fb0eed",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_devicesetup;",
        "postgreSQLConfig": "f5b4451dc02a9205",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 590,
        "y": 1820,
        "wires": [
            [
                "9bc975cfebc2d249"
            ]
        ]
    },
    {
        "id": "9bc975cfebc2d249",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1820,
        "wires": [
            [
                "466c9be69b5dbde6"
            ]
        ]
    },
    {
        "id": "466c9be69b5dbde6",
        "type": "function",
        "z": "e8287d7944e724f7",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nmsg.nocs = JSON.parse(JSON.stringify(msg.nocs));\nmsg.local = JSON.parse(JSON.stringify(msg.local));\n\nfor (let devicesetup_nocs of msg.nocs){ //verifica todos os dados do banco remoto\n    let count = 0\n    if (msg.local.length != 0)\n        for (let devicesetup_local of msg.local) //compara para ver se o dado já é existente e o atualiza\n            if (devicesetup_nocs.id == devicesetup_local.id) {\n                count++;\n                if (JSON.stringify(devicesetup_nocs) == JSON.stringify(devicesetup_local)) break;\n                \n                msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_devicesetup SET id = \" + devicesetup_nocs.id + \",name = '\" + devicesetup_nocs.name + \"',description = '\" + devicesetup_nocs.description + \"',firmware_id = \" + devicesetup_nocs.firmware_id + \",hardware_id = \" + devicesetup_nocs.hardware_id + \" WHERE id = \" + devicesetup_local.id + \";\" \n                break;\n            }\n    // Cria dado no banco caso ele não exista\n    if(!count)\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_devicesetup VALUES(\" + devicesetup_nocs.id + \", '\" + devicesetup_nocs.name + \"', '\" + devicesetup_nocs.description + \"', \" + devicesetup_nocs.firmware_id + \", \" + devicesetup_nocs.hardware_id + \");\" \n}\n\nmsg.queryParameters = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1820,
        "wires": [
            [
                "a4784e30406840ac"
            ]
        ]
    },
    {
        "id": "a4784e30406840ac",
        "type": "postgres",
        "z": "e8287d7944e724f7",
        "postgresdb": "f3a8cd803cbddc27",
        "name": "Local",
        "output": false,
        "perrow": false,
        "rowspermsg": "1",
        "return_on_error": false,
        "limit_queries": "0",
        "limit_by": "payload",
        "limit_value": "1",
        "limit_drop_intermediate": false,
        "limit_drop_if_in_queue": false,
        "outputs": false,
        "x": 1170,
        "y": 1820,
        "wires": []
    },
    {
        "id": "0ada031b5b794a22",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "devicesetup",
        "info": "",
        "x": 270,
        "y": 1780,
        "wires": []
    },
    {
        "id": "ac0f6ec64aac623b",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_devicecompany;",
        "postgreSQLConfig": "fc6bd11bac1af11f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 250,
        "y": 1920,
        "wires": [
            [
                "dfc7f6f4f3b7dcd2"
            ]
        ]
    },
    {
        "id": "dfc7f6f4f3b7dcd2",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1920,
        "wires": [
            [
                "df9d8dad5edb1f23"
            ]
        ]
    },
    {
        "id": "df9d8dad5edb1f23",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_devicecompany;",
        "postgreSQLConfig": "f5b4451dc02a9205",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 590,
        "y": 1920,
        "wires": [
            [
                "d2918c4e4c1ab78c"
            ]
        ]
    },
    {
        "id": "d2918c4e4c1ab78c",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1920,
        "wires": [
            [
                "c9fba1d0be06229b"
            ]
        ]
    },
    {
        "id": "c9fba1d0be06229b",
        "type": "function",
        "z": "e8287d7944e724f7",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nmsg.nocs = JSON.parse(JSON.stringify(msg.nocs));\nmsg.local = JSON.parse(JSON.stringify(msg.local));\n\nfor (let devicecompany_nocs of msg.nocs){ //verifica todos os dados do banco remoto\n    let count = 0\n    if (msg.local.length != 0)\n        for (let devicecompany_local of msg.local) //compara para ver se o dado já é existente e o atualiza\n            if (devicecompany_nocs.id == devicecompany_local.id) {\n                count++;\n                if (JSON.stringify(devicecompany_nocs) == JSON.stringify(devicecompany_local)) break;\n\n                msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_devicecompany SET id = \" + devicecompany_nocs.id + \",name = '\" + devicecompany_nocs.name + \"',description = '\" + devicecompany_nocs.description + \"' WHERE id = \" + devicecompany_local.id + \";\" \n                break;\n            }\n    // Cria dado no banco caso ele não exista\n    if(!count)\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_devicecompany VALUES(\" + devicecompany_nocs.id + \", '\" + devicecompany_nocs.name + \"', '\" + devicecompany_nocs.description + \"');\" \n}\n\nmsg.queryParameters = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1920,
        "wires": [
            [
                "7f3b9758e883218d"
            ]
        ]
    },
    {
        "id": "7f3b9758e883218d",
        "type": "postgres",
        "z": "e8287d7944e724f7",
        "postgresdb": "f3a8cd803cbddc27",
        "name": "Local",
        "output": false,
        "perrow": false,
        "rowspermsg": "1",
        "return_on_error": false,
        "limit_queries": "0",
        "limit_by": "payload",
        "limit_value": "1",
        "limit_drop_intermediate": false,
        "limit_drop_if_in_queue": false,
        "outputs": false,
        "x": 1170,
        "y": 1920,
        "wires": []
    },
    {
        "id": "3a2a60d3996f62aa",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "devicecompany",
        "info": "",
        "x": 280,
        "y": 1880,
        "wires": []
    },
    {
        "id": "7bde3097bb2f4012",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_devicetype;",
        "postgreSQLConfig": "fc6bd11bac1af11f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 250,
        "y": 2020,
        "wires": [
            [
                "bd9c7bba1c27842f"
            ]
        ]
    },
    {
        "id": "bd9c7bba1c27842f",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 2020,
        "wires": [
            [
                "10bb4c182c8ac2ed"
            ]
        ]
    },
    {
        "id": "10bb4c182c8ac2ed",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_devicetype;",
        "postgreSQLConfig": "f5b4451dc02a9205",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 590,
        "y": 2020,
        "wires": [
            [
                "0ce0ed3a49e8c5b1"
            ]
        ]
    },
    {
        "id": "0ce0ed3a49e8c5b1",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 2020,
        "wires": [
            [
                "62171a254b44718c"
            ]
        ]
    },
    {
        "id": "62171a254b44718c",
        "type": "function",
        "z": "e8287d7944e724f7",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nmsg.nocs = JSON.parse(JSON.stringify(msg.nocs));\nmsg.local = JSON.parse(JSON.stringify(msg.local));\n\nfor (let devicetype_nocs of msg.nocs){ //verifica todos os dados do banco remoto\n    let count = 0\n        for (let devicetype_local of msg.local) //compara para ver se o dado já é existente e o atualiza\n            if (devicetype_nocs.id == devicetype_local.id) {\n                count++;\n                if (JSON.stringify(devicetype_nocs) == JSON.stringify(devicetype_local)) break;\n\n                msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_devicetype SET id = \" + devicetype_nocs.id + \",name = '\" + devicetype_nocs.name + \"',description = '\" + devicetype_nocs.description + \"',device_company_id = \" + devicetype_nocs.device_company_id + \" WHERE id = \" + devicetype_local.id + \";\" \n                break;\n            }\n    // Cria dado no banco caso ele não exista\n    if(!count)\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_devicetype VALUES(\" + devicetype_nocs.id + \", '\" + devicetype_nocs.name + \"', '\" + devicetype_nocs.description + \"', \" + devicetype_nocs.device_company_id + \");\" \n}\n\nmsg.queryParameters = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2020,
        "wires": [
            [
                "eac7a092e2d9fb58"
            ]
        ]
    },
    {
        "id": "eac7a092e2d9fb58",
        "type": "postgres",
        "z": "e8287d7944e724f7",
        "postgresdb": "f3a8cd803cbddc27",
        "name": "Local",
        "output": false,
        "perrow": false,
        "rowspermsg": "1",
        "return_on_error": false,
        "limit_queries": "0",
        "limit_by": "payload",
        "limit_value": "1",
        "limit_drop_intermediate": false,
        "limit_drop_if_in_queue": false,
        "outputs": false,
        "x": 1170,
        "y": 2020,
        "wires": []
    },
    {
        "id": "65a65bdb21d27301",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "devicetype",
        "info": "",
        "x": 260,
        "y": 1980,
        "wires": []
    },
    {
        "id": "f63ea2f34ed32e3b",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_device;",
        "postgreSQLConfig": "fc6bd11bac1af11f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 250,
        "y": 2120,
        "wires": [
            [
                "dbb6516a6311adca"
            ]
        ]
    },
    {
        "id": "dbb6516a6311adca",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 2120,
        "wires": [
            [
                "93a6d906ea64bf0c"
            ]
        ]
    },
    {
        "id": "93a6d906ea64bf0c",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_device;",
        "postgreSQLConfig": "f5b4451dc02a9205",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 590,
        "y": 2120,
        "wires": [
            [
                "cb11edefbb5adb57"
            ]
        ]
    },
    {
        "id": "cb11edefbb5adb57",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 2120,
        "wires": [
            [
                "6af6bb2262092301"
            ]
        ]
    },
    {
        "id": "6af6bb2262092301",
        "type": "function",
        "z": "e8287d7944e724f7",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nmsg.nocs = JSON.parse(JSON.stringify(msg.nocs));\nmsg.local = JSON.parse(JSON.stringify(msg.local));\n\nfor (let device_nocs of msg.nocs){ //verifica todos os dados do banco remoto\n    let count = 0\n    if (msg.local.length != 0)\n        for (let device_local of msg.local) //compara para ver se o dado já é existente e o atualiza\n            if (device_nocs.id == device_local.id) {\n                count++;\n                if (JSON.stringify(device_nocs) == JSON.stringify(device_local)) break;\n                \n                msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_device SET id = \" + device_nocs.id + \",mac = '\" + device_nocs.mac + \"',description = '\" + device_nocs.description + \"',status = '\" + device_nocs.status + \"',registration_date = '\" + device_nocs.registration_date + \"',device_setup_id = \" + device_nocs.device_setup_id + \",device_type_id = \" + device_nocs.device_type_id + \",ip = '\" + device_nocs.ip + \"' WHERE id = \" + device_local.id + \";\"\n                break;\n            }\n    // Cria dado no banco caso ele não exista\n    if(!count)\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_device VALUES(\" + device_nocs.id + \", '\" + device_nocs.mac + \"', '\" + device_nocs.description + \"', '\" + device_nocs.status + \"', '\" + device_nocs.registration_date + \"', \" + device_nocs.device_setup_id + \", \" + device_nocs.device_type_id + \", '\" + device_nocs.ip + \"');\"  \n}\n\nmsg.queryParameters = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2120,
        "wires": [
            [
                "4078d4b696f286f8"
            ]
        ]
    },
    {
        "id": "4078d4b696f286f8",
        "type": "postgres",
        "z": "e8287d7944e724f7",
        "postgresdb": "f3a8cd803cbddc27",
        "name": "Local",
        "output": false,
        "perrow": false,
        "rowspermsg": "1",
        "return_on_error": false,
        "limit_queries": "0",
        "limit_by": "payload",
        "limit_value": "1",
        "limit_drop_intermediate": false,
        "limit_drop_if_in_queue": false,
        "outputs": false,
        "x": 1170,
        "y": 2120,
        "wires": []
    },
    {
        "id": "28f0f4e7a7de9733",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "device",
        "info": "",
        "x": 250,
        "y": 2080,
        "wires": []
    },
    {
        "id": "ee0c393751631edf",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_monitoreddevice;",
        "postgreSQLConfig": "fc6bd11bac1af11f",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 250,
        "y": 2220,
        "wires": [
            [
                "22d8bcde5e93bb45"
            ]
        ]
    },
    {
        "id": "22d8bcde5e93bb45",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 2220,
        "wires": [
            [
                "36bfc24ad48e6dbc"
            ]
        ]
    },
    {
        "id": "36bfc24ad48e6dbc",
        "type": "postgresql",
        "z": "e8287d7944e724f7",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_monitoreddevice;",
        "postgreSQLConfig": "f5b4451dc02a9205",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 590,
        "y": 2220,
        "wires": [
            [
                "ee5737a040ccaa31"
            ]
        ]
    },
    {
        "id": "ee5737a040ccaa31",
        "type": "change",
        "z": "e8287d7944e724f7",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 2220,
        "wires": [
            [
                "58381d80a13d0ecb"
            ]
        ]
    },
    {
        "id": "58381d80a13d0ecb",
        "type": "function",
        "z": "e8287d7944e724f7",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nmsg.nocs = JSON.parse(JSON.stringify(msg.nocs));\nmsg.local = JSON.parse(JSON.stringify(msg.local));\n\nfor (let monitoreddevice_nocs of msg.nocs){ //verifica todos os dados do banco remoto\n    let count = 0\n    if (msg.local.length != 0)\n        for (let monitoreddevice_local of msg.local) //compara para ver se o dado já é existente e o atualiza\n            if (monitoreddevice_nocs.id == monitoreddevice_local.id) {\n                count++;\n                if (JSON.stringify(monitoreddevice_nocs) == JSON.stringify(monitoreddevice_local)) break;\n                \n                msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_monitoreddevice SET id = \" + monitoreddevice_nocs.id + \",name = '\" + monitoreddevice_nocs.name + \"',description = '\" + monitoreddevice_nocs.description + \"',\\\"monthly_kW_consumption\\\" = \" + monitoreddevice_nocs.monthly_kW_consumption + \",voltage = \" + monitoreddevice_nocs.voltage + \",power = \" + monitoreddevice_nocs.power + \" WHERE id = \" + monitoreddevice_local.id + \";\" \n                break;\n            }\n    // Cria dado no banco caso ele não exista\n    if(!count)\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_monitoreddevice VALUES(\" + monitoreddevice_nocs.id + \", '\" + monitoreddevice_nocs.name + \"', '\" + monitoreddevice_nocs.description + \"', \" + monitoreddevice_nocs.monthly_kW_consumption + \", \" + monitoreddevice_nocs.voltage + \", \" + monitoreddevice_nocs.power + \");\" \n}\n\nmsg.queryParameters = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2220,
        "wires": [
            [
                "0b772325c0b39c23"
            ]
        ]
    },
    {
        "id": "0b772325c0b39c23",
        "type": "postgres",
        "z": "e8287d7944e724f7",
        "postgresdb": "f3a8cd803cbddc27",
        "name": "Local",
        "output": false,
        "perrow": false,
        "rowspermsg": "1",
        "return_on_error": false,
        "limit_queries": "0",
        "limit_by": "payload",
        "limit_value": "1",
        "limit_drop_intermediate": false,
        "limit_drop_if_in_queue": false,
        "outputs": false,
        "x": 1170,
        "y": 2220,
        "wires": []
    },
    {
        "id": "552ef83e9c1bc4d9",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "name": "monitoreddevice",
        "info": "",
        "x": 200,
        "y": 2180,
        "wires": []
    },
    {
        "id": "c1a6d0f23adce4e2",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "loop",
        "links": [
            "27d90fe1cf3fa5b2",
            "25ef75617a22f23c",
            "186a4deaf5124833"
        ],
        "x": 135,
        "y": 1620,
        "wires": [
            [
                "4d16a79ba1a4419b"
            ]
        ]
    },
    {
        "id": "561f9bdffa950abe",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "loop",
        "links": [
            "27d90fe1cf3fa5b2",
            "25ef75617a22f23c",
            "186a4deaf5124833"
        ],
        "x": 135,
        "y": 1720,
        "wires": [
            [
                "3be527713c181ee2"
            ]
        ]
    },
    {
        "id": "796afd436c81502a",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "loop",
        "links": [
            "27d90fe1cf3fa5b2",
            "25ef75617a22f23c",
            "186a4deaf5124833"
        ],
        "x": 135,
        "y": 1820,
        "wires": [
            [
                "2967e3b814b4d32e"
            ]
        ]
    },
    {
        "id": "aced49e2db1368f3",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "loop",
        "links": [
            "27d90fe1cf3fa5b2",
            "25ef75617a22f23c",
            "186a4deaf5124833"
        ],
        "x": 135,
        "y": 1920,
        "wires": [
            [
                "ac0f6ec64aac623b"
            ]
        ]
    },
    {
        "id": "9ab72ea34fa63dda",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "loop",
        "links": [
            "27d90fe1cf3fa5b2",
            "25ef75617a22f23c",
            "186a4deaf5124833"
        ],
        "x": 135,
        "y": 2020,
        "wires": [
            [
                "7bde3097bb2f4012"
            ]
        ]
    },
    {
        "id": "dcb57c8628d72d76",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "loop",
        "links": [
            "27d90fe1cf3fa5b2",
            "25ef75617a22f23c",
            "186a4deaf5124833"
        ],
        "x": 135,
        "y": 2120,
        "wires": [
            [
                "f63ea2f34ed32e3b"
            ]
        ]
    },
    {
        "id": "0eeea4ed9881a06a",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "loop",
        "links": [
            "27d90fe1cf3fa5b2",
            "25ef75617a22f23c",
            "186a4deaf5124833"
        ],
        "x": 135,
        "y": 2220,
        "wires": [
            [
                "ee0c393751631edf"
            ]
        ]
    },
    {
        "id": "c09678c95e40e63c",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "loop",
        "links": [
            "27d90fe1cf3fa5b2",
            "25ef75617a22f23c",
            "186a4deaf5124833"
        ],
        "x": 135,
        "y": 2520,
        "wires": [
            [
                "347ad65c66104668"
            ]
        ]
    },
    {
        "id": "b7813722c2d05777",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "loop",
        "links": [
            "27d90fe1cf3fa5b2",
            "25ef75617a22f23c",
            "186a4deaf5124833"
        ],
        "x": 135,
        "y": 2620,
        "wires": [
            [
                "046814b83f88f676"
            ]
        ]
    },
    {
        "id": "09b3e2ad263f23bd",
        "type": "link out",
        "z": "e8287d7944e724f7",
        "name": "Pega Fases",
        "mode": "link",
        "links": [
            "ecf096ad8adf8308"
        ],
        "x": 145,
        "y": 460,
        "wires": []
    },
    {
        "id": "b83f2dc011b3809a",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "name": "Inserção 02",
        "links": [
            "7e2d8bedaef930eb"
        ],
        "x": 215,
        "y": 460,
        "wires": [
            [
                "24674137ef6f939e"
            ]
        ]
    },
    {
        "id": "21d64af0796c50e8",
        "type": "catch",
        "z": "e8287d7944e724f7",
        "name": "Atualiza tabelas locais",
        "scope": [
            "519a6c42b226c872"
        ],
        "uncaught": false,
        "x": 160,
        "y": 700,
        "wires": [
            [
                "8e4c59f528a2fd50",
                "25ef75617a22f23c"
            ]
        ]
    },
    {
        "id": "25ef75617a22f23c",
        "type": "link out",
        "z": "e8287d7944e724f7",
        "name": "loop",
        "mode": "link",
        "links": [
            "0eeea4ed9881a06a",
            "2a0859e4e38c1769",
            "561f9bdffa950abe",
            "770753ac90d1606f",
            "796afd436c81502a",
            "7c76e2c3274d4a67",
            "8487dd3df02ab2b2",
            "90ea025e7b71d331",
            "9ab72ea34fa63dda",
            "9df3803477262c78",
            "aced49e2db1368f3",
            "b7813722c2d05777",
            "bfbce55ef09446a0",
            "c09678c95e40e63c",
            "c1a6d0f23adce4e2",
            "dcb57c8628d72d76",
            "e0f0bd479ad4326c"
        ],
        "x": 315,
        "y": 700,
        "wires": []
    },
    {
        "id": "8e4c59f528a2fd50",
        "type": "delay",
        "z": "e8287d7944e724f7",
        "name": "Espera atualização",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 390,
        "y": 700,
        "wires": [
            [
                "519a6c42b226c872"
            ]
        ]
    },
    {
        "id": "268d57191a2384e2",
        "type": "catch",
        "z": "e8287d7944e724f7",
        "name": "Atualiza tabelas locais",
        "scope": [
            "748f92b85208a9a3"
        ],
        "uncaught": false,
        "x": 160,
        "y": 300,
        "wires": [
            [
                "186a4deaf5124833",
                "cc46c575d45b8919"
            ]
        ]
    },
    {
        "id": "186a4deaf5124833",
        "type": "link out",
        "z": "e8287d7944e724f7",
        "name": "loop",
        "mode": "link",
        "links": [
            "2a0859e4e38c1769",
            "770753ac90d1606f",
            "bfbce55ef09446a0",
            "9df3803477262c78",
            "7c76e2c3274d4a67",
            "8487dd3df02ab2b2",
            "90ea025e7b71d331",
            "a4154898f69f8845",
            "e0f0bd479ad4326c",
            "c1a6d0f23adce4e2",
            "561f9bdffa950abe",
            "796afd436c81502a",
            "aced49e2db1368f3",
            "9ab72ea34fa63dda",
            "dcb57c8628d72d76",
            "0eeea4ed9881a06a",
            "c09678c95e40e63c",
            "b7813722c2d05777"
        ],
        "x": 315,
        "y": 340,
        "wires": []
    },
    {
        "id": "cc46c575d45b8919",
        "type": "delay",
        "z": "e8287d7944e724f7",
        "name": "Espera atualização",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 390,
        "y": 300,
        "wires": [
            [
                "748f92b85208a9a3"
            ]
        ]
    },
    {
        "id": "1288cd6118d35ec1",
        "type": "catch",
        "z": "e8287d7944e724f7",
        "name": "Atualiza tabelas locais",
        "scope": [
            "9feefbc233b512e6",
            "e1074e9d24e2f36b",
            "9a6e880ed2dc6cb4",
            "40fe20885fe85a87",
            "094f9c905935cb35",
            "0913dc91f3dc051f",
            "efdb62e7893d4001",
            "e0e3a26fc57b31be",
            "f563a538baa4cfb1",
            "eb3ec60fe9c329c8",
            "58c0eca7df626098",
            "d396e0c4d33b7fcd",
            "a4784e30406840ac",
            "7f3b9758e883218d",
            "eac7a092e2d9fb58",
            "4078d4b696f286f8",
            "0b772325c0b39c23"
        ],
        "uncaught": false,
        "x": 220,
        "y": 900,
        "wires": [
            [
                "27d90fe1cf3fa5b2",
                "cbe32c43ab90a86a"
            ]
        ]
    },
    {
        "id": "cbe32c43ab90a86a",
        "type": "debug",
        "z": "e8287d7944e724f7",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 900,
        "wires": []
    },
    {
        "id": "b07115169e0aa838",
        "type": "api-current-state",
        "z": "7119d5927b25a580",
        "d": true,
        "name": "status",
        "server": "",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "switch.computador_socket_1",
        "state_type": "habool",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "status",
                "valueType": "str"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 170,
        "y": 500,
        "wires": [
            [
                "f61dd91f009358da"
            ]
        ]
    },
    {
        "id": "494def2d8624f375",
        "type": "api-current-state",
        "z": "7119d5927b25a580",
        "d": true,
        "name": "Current",
        "server": "",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.computador_current",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "Current",
                "valueType": "str"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 180,
        "y": 240,
        "wires": [
            [
                "14680943afce9588"
            ]
        ]
    },
    {
        "id": "1176e88480793e95",
        "type": "api-current-state",
        "z": "7119d5927b25a580",
        "d": true,
        "name": "Voltage",
        "server": "",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.computador_voltage",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "Voltage",
                "valueType": "str"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 180,
        "y": 300,
        "wires": [
            [
                "8297d1a1c26414d2"
            ]
        ]
    },
    {
        "id": "f82bd6741a8b3bea",
        "type": "api-current-state",
        "z": "7119d5927b25a580",
        "d": true,
        "name": "Power",
        "server": "",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.computador_power",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "Power",
                "valueType": "str"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 170,
        "y": 360,
        "wires": [
            [
                "bea69b26fda071e9"
            ]
        ]
    },
    {
        "id": "506c4a7807ef575d",
        "type": "join",
        "z": "7119d5927b25a580",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": ",",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 490,
        "y": 300,
        "wires": [
            [
                "bcd17e83b4dd6b4e"
            ]
        ]
    },
    {
        "id": "8297d1a1c26414d2",
        "type": "function",
        "z": "7119d5927b25a580",
        "name": "function 4",
        "func": "msg.payload = { voltage: msg.payload, \"gateway_id\": '3', \"date_time_stamp\": new Date(), power_factor: 0.93}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 300,
        "wires": [
            [
                "506c4a7807ef575d"
            ]
        ]
    },
    {
        "id": "84febaa5123f3df1",
        "type": "link out",
        "z": "7119d5927b25a580",
        "name": "Valores Medidor Tuya",
        "mode": "link",
        "links": [
            "514ece8f109fb8b7",
            "b058cea2b2d94046"
        ],
        "x": 735,
        "y": 300,
        "wires": []
    },
    {
        "id": "3b147eed87195d28",
        "type": "comment",
        "z": "7119d5927b25a580",
        "name": "Verifica Estado",
        "info": "",
        "x": 120,
        "y": 440,
        "wires": []
    },
    {
        "id": "fb5056e72e2413eb",
        "type": "comment",
        "z": "7119d5927b25a580",
        "name": "Medidor Tuya",
        "info": "",
        "x": 90,
        "y": 180,
        "wires": []
    },
    {
        "id": "f61dd91f009358da",
        "type": "link out",
        "z": "7119d5927b25a580",
        "name": "Estado Medidor Tuya",
        "mode": "link",
        "links": [
            "627770ac618f6ea8"
        ],
        "x": 285,
        "y": 500,
        "wires": []
    },
    {
        "id": "7f8fb23dbfddcf87",
        "type": "inject",
        "z": "7119d5927b25a580",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "b8487c2a182414f8"
            ]
        ]
    },
    {
        "id": "c7d26a5c56860b44",
        "type": "comment",
        "z": "7119d5927b25a580",
        "name": "Loop",
        "info": "",
        "x": 70,
        "y": 40,
        "wires": []
    },
    {
        "id": "b8487c2a182414f8",
        "type": "link out",
        "z": "7119d5927b25a580",
        "name": "Loop",
        "mode": "link",
        "links": [
            "8dc280ccc0034366",
            "b617fc1f30bc205f"
        ],
        "x": 255,
        "y": 100,
        "wires": []
    },
    {
        "id": "8dc280ccc0034366",
        "type": "link in",
        "z": "7119d5927b25a580",
        "name": "Loop",
        "links": [
            "b8487c2a182414f8"
        ],
        "x": 55,
        "y": 300,
        "wires": [
            [
                "1176e88480793e95",
                "494def2d8624f375",
                "f82bd6741a8b3bea"
            ]
        ]
    },
    {
        "id": "b617fc1f30bc205f",
        "type": "link in",
        "z": "7119d5927b25a580",
        "name": "Loop",
        "links": [
            "b8487c2a182414f8"
        ],
        "x": 65,
        "y": 500,
        "wires": [
            [
                "b07115169e0aa838"
            ]
        ]
    },
    {
        "id": "bcd17e83b4dd6b4e",
        "type": "json",
        "z": "7119d5927b25a580",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 630,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "14680943afce9588",
        "type": "function",
        "z": "7119d5927b25a580",
        "name": "function 5",
        "func": "msg.payload = { current: msg.payload, \"gateway_id\": '3', \"date_time_stamp\": new Date(), power_factor: 0.93}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 240,
        "wires": [
            [
                "506c4a7807ef575d"
            ]
        ]
    },
    {
        "id": "bea69b26fda071e9",
        "type": "function",
        "z": "7119d5927b25a580",
        "name": "function 6",
        "func": "msg.payload = { active_power: msg.payload, \"gateway_id\": '3', \"date_time_stamp\": new Date(), power_factor: 0.93}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 360,
        "wires": [
            [
                "506c4a7807ef575d"
            ]
        ]
    },
    {
        "id": "7de8e43a6707f23f",
        "type": "ui_chart",
        "z": "7d74b0c161f17740",
        "name": "",
        "group": "8d5821d35c2d330f",
        "order": 2,
        "width": "20",
        "height": 10,
        "label": "Potencia Ativa",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 500,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "9762947eb9cc68aa",
        "type": "switch",
        "z": "7d74b0c161f17740",
        "name": "",
        "property": "payload.gateway_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 170,
        "y": 120,
        "wires": [
            [
                "783612c399866e74"
            ],
            [
                "216633a5b0b6d458"
            ]
        ]
    },
    {
        "id": "f8612630b3bd36ba",
        "type": "ui_chart",
        "z": "7d74b0c161f17740",
        "name": "",
        "group": "8d5821d35c2d330f",
        "order": 4,
        "width": "20",
        "height": 10,
        "label": "Corrente",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 480,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "216633a5b0b6d458",
        "type": "function",
        "z": "7d74b0c161f17740",
        "name": "function 2",
        "func": "var msg1 = {}\nvar msg2 = {}\nvar msg3 = {}\n\nmsg1.payload = msg.payload.active_power * Math.pow(10, msg.payload.active_power_sf)\nmsg2.payload = msg.payload.current * Math.pow(10, msg.payload.current_sf)\nmsg3.payload = msg.payload.date_time_stamp\n\nreturn [msg1, msg2, msg3];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 160,
        "wires": [
            [
                "7de8e43a6707f23f"
            ],
            [
                "f8612630b3bd36ba"
            ]
        ]
    },
    {
        "id": "132bdae4c5c4d339",
        "type": "ui_chart",
        "z": "7d74b0c161f17740",
        "name": "",
        "group": "a4a51d2a6b08e863",
        "order": 2,
        "width": 20,
        "height": 10,
        "label": "Potencia Ativa",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 500,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "98c2937d02268ede",
        "type": "ui_chart",
        "z": "7d74b0c161f17740",
        "name": "",
        "group": "a4a51d2a6b08e863",
        "order": 4,
        "width": 20,
        "height": 10,
        "label": "Corrente",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 480,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "783612c399866e74",
        "type": "function",
        "z": "7d74b0c161f17740",
        "name": "function 3",
        "func": "var msg1 = {}\nvar msg2 = {}\nvar msg3 = {}\n\nmsg1.payload = msg.payload.active_power * Math.pow(10, msg.payload.active_power_sf)\nmsg2.payload = msg.payload.current * Math.pow(10, msg.payload.current_sf)\nmsg3.payload = msg.payload.date_time_stamp\n\nreturn [msg1, msg2, msg3];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 80,
        "wires": [
            [
                "132bdae4c5c4d339"
            ],
            [
                "98c2937d02268ede"
            ]
        ]
    },
    {
        "id": "95b6006b9d6689cc",
        "type": "link in",
        "z": "7d74b0c161f17740",
        "name": "Analise",
        "links": [
            "bf124cdbf4ec0574"
        ],
        "x": 55,
        "y": 120,
        "wires": [
            [
                "9762947eb9cc68aa"
            ]
        ]
    },
    {
        "id": "ba3204ba08e60f74",
        "type": "comment",
        "z": "7d74b0c161f17740",
        "name": "MQTT",
        "info": "",
        "x": 70,
        "y": 40,
        "wires": []
    },
    {
        "id": "07d82d66380e55da",
        "type": "ui_gauge",
        "z": "7d74b0c161f17740",
        "name": "",
        "group": "6a2620f23525088d",
        "order": 2,
        "width": "10",
        "height": "5",
        "gtype": "gage",
        "title": "Corrent",
        "label": "A",
        "format": "{{value}}",
        "min": 0,
        "max": "15",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 480,
        "y": 340,
        "wires": []
    },
    {
        "id": "27aee7a140a3d149",
        "type": "ui_gauge",
        "z": "7d74b0c161f17740",
        "name": "",
        "group": "6a2620f23525088d",
        "order": 4,
        "width": "10",
        "height": "5",
        "gtype": "gage",
        "title": "Voltagem",
        "label": "V",
        "format": "{{value}}",
        "min": 0,
        "max": "150",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 480,
        "y": 380,
        "wires": []
    },
    {
        "id": "ce72dfa3928d24d9",
        "type": "ui_gauge",
        "z": "7d74b0c161f17740",
        "name": "",
        "group": "6a2620f23525088d",
        "order": 6,
        "width": "10",
        "height": "5",
        "gtype": "gage",
        "title": "Potencia",
        "label": "W",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 480,
        "y": 420,
        "wires": []
    },
    {
        "id": "2377fcd6eec2b926",
        "type": "comment",
        "z": "7d74b0c161f17740",
        "name": "Home Assistant",
        "info": "",
        "x": 100,
        "y": 240,
        "wires": []
    },
    {
        "id": "514ece8f109fb8b7",
        "type": "link in",
        "z": "7d74b0c161f17740",
        "name": "",
        "links": [
            "84febaa5123f3df1"
        ],
        "x": 55,
        "y": 380,
        "wires": [
            [
                "744dd5563b07a69a"
            ]
        ]
    },
    {
        "id": "d1d9984abd340b0c",
        "type": "template",
        "z": "7d74b0c161f17740",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "python",
        "syntax": "mustache",
        "template": "{{payload.current}}",
        "output": "str",
        "x": 320,
        "y": 340,
        "wires": [
            [
                "07d82d66380e55da"
            ]
        ]
    },
    {
        "id": "53ada7ac55d5141a",
        "type": "template",
        "z": "7d74b0c161f17740",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "python",
        "syntax": "mustache",
        "template": "{{payload.voltage}}",
        "output": "str",
        "x": 320,
        "y": 380,
        "wires": [
            [
                "27aee7a140a3d149"
            ]
        ]
    },
    {
        "id": "7727690c40b1377c",
        "type": "template",
        "z": "7d74b0c161f17740",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "python",
        "syntax": "mustache",
        "template": "{{payload.active_power}}",
        "output": "str",
        "x": 320,
        "y": 420,
        "wires": [
            [
                "ce72dfa3928d24d9"
            ]
        ]
    },
    {
        "id": "41b7835be54f66b7",
        "type": "ui_switch",
        "z": "7d74b0c161f17740",
        "name": "",
        "label": "Interruptor",
        "tooltip": "",
        "group": "e3ef033ab390569e",
        "order": 2,
        "width": "5",
        "height": "3",
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 540,
        "wires": [
            [
                "6f24a64077ed44e7"
            ]
        ]
    },
    {
        "id": "af6f4ff242e92de3",
        "type": "api-call-service",
        "z": "7d74b0c161f17740",
        "d": true,
        "name": "Ligar",
        "server": "",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [
            "650005064c440d9547019199482df6e3"
        ],
        "entityId": [
            "switch.computador_socket_1"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 490,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "9700641573b6e679",
        "type": "api-call-service",
        "z": "7d74b0c161f17740",
        "d": true,
        "name": "Desligar",
        "server": "",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [
            "650005064c440d9547019199482df6e3"
        ],
        "entityId": [
            "switch.computador_socket_1"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 500,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "6f24a64077ed44e7",
        "type": "switch",
        "z": "7d74b0c161f17740",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 540,
        "wires": [
            [
                "af6f4ff242e92de3"
            ],
            [
                "9700641573b6e679"
            ]
        ]
    },
    {
        "id": "f001b954f03c2c35",
        "type": "comment",
        "z": "7d74b0c161f17740",
        "name": "Valores",
        "info": "",
        "x": 90,
        "y": 300,
        "wires": []
    },
    {
        "id": "d624f717720ef73a",
        "type": "comment",
        "z": "7d74b0c161f17740",
        "name": "Valores",
        "info": "",
        "x": 90,
        "y": 480,
        "wires": []
    },
    {
        "id": "627770ac618f6ea8",
        "type": "link in",
        "z": "7d74b0c161f17740",
        "name": "link in 1",
        "links": [
            "f61dd91f009358da"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "41b7835be54f66b7"
            ]
        ]
    },
    {
        "id": "744dd5563b07a69a",
        "type": "json",
        "z": "7d74b0c161f17740",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 170,
        "y": 380,
        "wires": [
            [
                "53ada7ac55d5141a",
                "d1d9984abd340b0c",
                "7727690c40b1377c"
            ]
        ]
    },
    {
        "id": "1ea3a73fdfa1ae23",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "bem vindo",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": " ",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Olá, seja bem-vindo ao CPID",
        "x": 450,
        "y": 100,
        "wires": [
            [],
            [
                "a4e8d93c2b25170c"
            ]
        ]
    },
    {
        "id": "a4e8d93c2b25170c",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "Quem sou",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Eu sou o assistente virtual aqui do CPID, e vou te guiar por aqui...",
        "x": 630,
        "y": 100,
        "wires": [
            [],
            [
                "6eb8ff0b20e3d643"
            ]
        ]
    },
    {
        "id": "5f125208206ea113",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "Nome da pessoa",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Bom, pra começar, que tal me dizer o seu nome?",
        "x": 990,
        "y": 100,
        "wires": [
            [],
            [
                "c235a9cab58449b5"
            ]
        ]
    },
    {
        "id": "c235a9cab58449b5",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "Nome",
        "client": "8e3298efb51f0f8f",
        "chave": "nome",
        "x": 1170,
        "y": 100,
        "wires": [
            [
                "ceacaaba5a7299a3"
            ]
        ]
    },
    {
        "id": "fbf418c3826f4af5",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Olá {{nome}}",
        "x": 190,
        "y": 400,
        "wires": [
            [],
            [
                "0fd10d6774d295d1"
            ]
        ]
    },
    {
        "id": "287db895b72de9a8",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "",
        "func": "msg.payload.path = \"/home/pi/.node-red/data/whatsapp/contacts/\" + msg.payload.contactId + \".json\"\nif(msg.payload.isGroup || msg.payload.contactId!=='5527995041299@s.whatsapp.net'){\n    return [msg,null];\n}else{\n        return [null,msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 100,
        "wires": [
            [],
            [
                "1ea3a73fdfa1ae23"
            ]
        ]
    },
    {
        "id": "eb59499aee0a1c5f",
        "type": "whatsapp-kore-bot",
        "z": "ada916479fb34c9b",
        "name": "Registro",
        "client": "8e3298efb51f0f8f",
        "x": 100,
        "y": 100,
        "wires": [
            [],
            [
                "287db895b72de9a8"
            ]
        ]
    },
    {
        "id": "6eb8ff0b20e3d643",
        "type": "delay",
        "z": "ada916479fb34c9b",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 800,
        "y": 100,
        "wires": [
            [
                "5f125208206ea113"
            ]
        ]
    },
    {
        "id": "0fd10d6774d295d1",
        "type": "delay",
        "z": "ada916479fb34c9b",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 360,
        "y": 400,
        "wires": [
            [
                "7e48114c31741cb6"
            ]
        ]
    },
    {
        "id": "1846550bdf3e1c02",
        "type": "whatsapp-endchat",
        "z": "ada916479fb34c9b",
        "client": "8e3298efb51f0f8f",
        "x": 470,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "7e48114c31741cb6",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "Como posso Ajudá-lo?",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Como posso Ajudá-lo?\n\n(1) - Cadastro\n(2) - Alteraração de Dados\n(3) - Lista de dispositivos cadastrados\n\n*Digite apenas o numero*",
        "x": 560,
        "y": 400,
        "wires": [
            [],
            [
                "00e90b35e2b7a1e9"
            ]
        ]
    },
    {
        "id": "00e90b35e2b7a1e9",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "resp",
        "client": "8e3298efb51f0f8f",
        "chave": "resp",
        "x": 750,
        "y": 400,
        "wires": [
            [
                "3c6833ef2e57882f"
            ]
        ]
    },
    {
        "id": "3c6833ef2e57882f",
        "type": "switch",
        "z": "ada916479fb34c9b",
        "name": "",
        "property": "payload.text",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 970,
        "y": 400,
        "wires": [
            [
                "1a092895fca06aae"
            ],
            [
                "cf069e5fd090e037"
            ],
            [
                "af9fbc487503173a"
            ]
        ]
    },
    {
        "id": "a4e2ef51a7a5d276",
        "type": "switch",
        "z": "ada916479fb34c9b",
        "name": "",
        "property": "payload.text",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 750,
        "y": 520,
        "wires": [
            [
                "bd552cded916f748"
            ],
            [
                "897e2b78159cd501"
            ],
            [
                "4947534770e698fa"
            ],
            [
                "22598a4a5f7d9067"
            ],
            [
                "1c0d6bd3b6b37c97"
            ]
        ]
    },
    {
        "id": "1437d806e77c55fd",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "Como posso Ajudá-lo?",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": false,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "OK, Informe o que deseja cadastrar\n\n(1) - Área\n(2) - Dispositivo\n(3) - Setup\n(4) - Dispositivo LoRa\n(5) - Dispositivo MQTT\n\n*Digite apenas o numero*",
        "x": 220,
        "y": 520,
        "wires": [
            [],
            [
                "c70d3e43b1188f2e"
            ]
        ]
    },
    {
        "id": "5d365f74ffef4151",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "name_area",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Qual o nome da área",
        "x": 190,
        "y": 880,
        "wires": [
            [],
            [
                "3916db1e2c79c1d3"
            ]
        ]
    },
    {
        "id": "3916db1e2c79c1d3",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "name_area",
        "client": "8e3298efb51f0f8f",
        "chave": "name_area",
        "x": 370,
        "y": 880,
        "wires": [
            [
                "89253d49c8c953af"
            ]
        ]
    },
    {
        "id": "89253d49c8c953af",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Verifica se existe",
        "func": "return [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 880,
        "wires": [
            [
                "18a34be6ab4200a6"
            ],
            [
                "3705d41769d2b05b"
            ]
        ]
    },
    {
        "id": "e7d6062c15b53121",
        "type": "whatsapp-endchat",
        "z": "ada916479fb34c9b",
        "client": "8e3298efb51f0f8f",
        "x": 710,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "3705d41769d2b05b",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "desc_area",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Descreva essa área.",
        "x": 770,
        "y": 900,
        "wires": [
            [],
            [
                "81ee27c13baf7cd6"
            ]
        ]
    },
    {
        "id": "c318cf29cb0a96fe",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "address",
        "client": "8e3298efb51f0f8f",
        "chave": "address",
        "x": 340,
        "y": 1040,
        "wires": [
            [
                "88b8bc0cd40c679c"
            ]
        ]
    },
    {
        "id": "57f2cc0f7cd075b4",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "address",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "me informa o endereço da *compania/casa* que essa área se encontra.",
        "x": 180,
        "y": 1040,
        "wires": [
            [],
            [
                "c318cf29cb0a96fe"
            ]
        ]
    },
    {
        "id": "88b8bc0cd40c679c",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Verifica se existe",
        "func": "\nreturn [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1040,
        "wires": [
            [
                "890c69c0e5939932"
            ],
            [
                "5f1c6a63acf5b139"
            ]
        ]
    },
    {
        "id": "890c69c0e5939932",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Retorna ID company",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1020,
        "wires": [
            [
                "5d5212b93bfc3c04"
            ]
        ]
    },
    {
        "id": "5f1c6a63acf5b139",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "desc_company",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Esse local não possui cadastro poderia me informa uma descrição sobre ele?",
        "x": 740,
        "y": 1060,
        "wires": [
            [],
            [
                "97d168a1f7110ace"
            ]
        ]
    },
    {
        "id": "18a34be6ab4200a6",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "ID Área",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 880,
        "wires": [
            [
                "1a2b90f18b99763d"
            ]
        ]
    },
    {
        "id": "5d5212b93bfc3c04",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Cria Área",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 1000,
        "wires": [
            [
                "18a34be6ab4200a6"
            ]
        ]
    },
    {
        "id": "81ee27c13baf7cd6",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "desc_area",
        "client": "8e3298efb51f0f8f",
        "chave": "desc_area",
        "x": 950,
        "y": 900,
        "wires": [
            [
                "6640a6cd13d7ce55"
            ]
        ]
    },
    {
        "id": "97d168a1f7110ace",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "desc_company",
        "client": "8e3298efb51f0f8f",
        "chave": "desc_company",
        "x": 940,
        "y": 1060,
        "wires": [
            [
                "cb1c591653aa2e82"
            ]
        ]
    },
    {
        "id": "6fb3876dd78e4712",
        "type": "link in",
        "z": "ada916479fb34c9b",
        "name": "Cadastrar Área",
        "links": [
            "bd552cded916f748",
            "bc2cbdc3c466fd2f",
            "a46f0a4f61390c9e",
            "cedec72d4a251609"
        ],
        "x": 55,
        "y": 880,
        "wires": [
            [
                "5d365f74ffef4151"
            ]
        ]
    },
    {
        "id": "bd552cded916f748",
        "type": "link out",
        "z": "ada916479fb34c9b",
        "name": "Cadastrar Área",
        "mode": "link",
        "links": [
            "6fb3876dd78e4712",
            "91e812d6845a53c4"
        ],
        "x": 865,
        "y": 440,
        "wires": []
    },
    {
        "id": "13659a648bdc3359",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "Cadastro de área",
        "info": "",
        "x": 120,
        "y": 820,
        "wires": []
    },
    {
        "id": "6640a6cd13d7ce55",
        "type": "delay",
        "z": "ada916479fb34c9b",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 180,
        "y": 980,
        "wires": [
            [
                "57f2cc0f7cd075b4"
            ]
        ]
    },
    {
        "id": "4a737aea5725eae5",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Verifica ID USER pelo cll utilizado",
        "func": "\nreturn [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1160,
        "wires": [
            [
                "5e0424c521e48ccf"
            ],
            []
        ]
    },
    {
        "id": "5e0424c521e48ccf",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Retorna ID user",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1180,
        "wires": [
            [
                "e0b9d08473592347"
            ]
        ]
    },
    {
        "id": "bee4e4409f48116c",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "user_not_val",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Você não é um usuario cadastrado *(Não podera efetuar o cadastrado)*",
        "x": 510,
        "y": 980,
        "wires": [
            [],
            [
                "e7d6062c15b53121"
            ]
        ]
    },
    {
        "id": "cb1c591653aa2e82",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Pega data atual do cadastro",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1060,
        "wires": [
            [
                "a679850e7bfaf77d"
            ]
        ]
    },
    {
        "id": "c18e51562073d894",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "company",
        "info": "",
        "x": 140,
        "y": 920,
        "wires": []
    },
    {
        "id": "8396a59320e343de",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "city",
        "info": "",
        "x": 130,
        "y": 1220,
        "wires": []
    },
    {
        "id": "c7b9ba689a16895e",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "city",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Em que cidade esta localizada este local?",
        "x": 170,
        "y": 1280,
        "wires": [
            [],
            [
                "f281c87d3f0d331f"
            ]
        ]
    },
    {
        "id": "5a7c3cc619863a69",
        "type": "whatsapp-endchat",
        "z": "ada916479fb34c9b",
        "client": "8e3298efb51f0f8f",
        "x": 2490,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "379f15fab5a82a65",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Verifica se existe",
        "func": "\nreturn [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1280,
        "wires": [
            [
                "304bed1e3b275a40"
            ],
            [
                "31d1a8b1560b1425"
            ]
        ]
    },
    {
        "id": "304bed1e3b275a40",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Retorna ID city",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 1260,
        "wires": [
            [
                "5d5212b93bfc3c04"
            ]
        ]
    },
    {
        "id": "31d1a8b1560b1425",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "state",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Qual o estado?",
        "x": 670,
        "y": 1300,
        "wires": [
            [],
            [
                "a25b4b4f4811d1d2"
            ]
        ]
    },
    {
        "id": "f281c87d3f0d331f",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "city",
        "client": "8e3298efb51f0f8f",
        "chave": "city",
        "x": 310,
        "y": 1280,
        "wires": [
            [
                "379f15fab5a82a65"
            ]
        ]
    },
    {
        "id": "a25b4b4f4811d1d2",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "state",
        "client": "8e3298efb51f0f8f",
        "chave": "state",
        "x": 810,
        "y": 1300,
        "wires": [
            [
                "0bd6ac2f2851099c"
            ]
        ]
    },
    {
        "id": "0bd6ac2f2851099c",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "UF",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "informe também a sigla *(UF)* deste estado:",
        "x": 950,
        "y": 1300,
        "wires": [
            [],
            [
                "56ee83fab70821e4"
            ]
        ]
    },
    {
        "id": "56ee83fab70821e4",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "UF",
        "client": "8e3298efb51f0f8f",
        "chave": "UF",
        "x": 1090,
        "y": 1300,
        "wires": [
            [
                "161eb2a5bcf22d97"
            ]
        ]
    },
    {
        "id": "96e2215964b23931",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "coutry",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Por fim me informe o pais em que este local se encontra.",
        "x": 170,
        "y": 1400,
        "wires": [
            [],
            [
                "48fe4b365c307c17"
            ]
        ]
    },
    {
        "id": "48fe4b365c307c17",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "coutry",
        "client": "8e3298efb51f0f8f",
        "chave": "coutry",
        "x": 310,
        "y": 1400,
        "wires": [
            [
                "36ca90d97c74658c"
            ]
        ]
    },
    {
        "id": "36ca90d97c74658c",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Verifica se existe",
        "func": "\nreturn [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1400,
        "wires": [
            [
                "7a0d45f53b3d6bb1"
            ],
            [
                "09da89d8061c1e73"
            ]
        ]
    },
    {
        "id": "7a0d45f53b3d6bb1",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Retorna ID coutry",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 1380,
        "wires": [
            [
                "5d5212b93bfc3c04"
            ]
        ]
    },
    {
        "id": "cf1ff04b19f46a2d",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "coutry",
        "info": "",
        "x": 130,
        "y": 1340,
        "wires": []
    },
    {
        "id": "a14ce7337d92b5d1",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "success",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "*Cadastro de área bem sucedido*",
        "x": 2300,
        "y": 860,
        "wires": [
            [],
            [
                "5a7c3cc619863a69"
            ]
        ]
    },
    {
        "id": "c70d3e43b1188f2e",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "Menu_1",
        "client": "8e3298efb51f0f8f",
        "chave": "Menu_1",
        "x": 420,
        "y": 520,
        "wires": [
            [
                "4d53d4615bc66ddd"
            ]
        ]
    },
    {
        "id": "a05594fdfceea024",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "Função não configurada",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "*Função não configurada*",
        "x": 230,
        "y": 760,
        "wires": [
            [],
            [
                "1846550bdf3e1c02"
            ]
        ]
    },
    {
        "id": "627c137d66cbf375",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "Cadastro de dispositivo",
        "info": "",
        "x": 140,
        "y": 1460,
        "wires": []
    },
    {
        "id": "92127c08333088a9",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "Cadastro de setup",
        "info": "",
        "x": 130,
        "y": 2380,
        "wires": []
    },
    {
        "id": "d009f837bf26ff22",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "Cadastro de dispositivo LoRa",
        "info": "",
        "x": 160,
        "y": 3040,
        "wires": []
    },
    {
        "id": "a6f06caa4398fa18",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "Cadastro de dispositivo MQTT",
        "info": "",
        "x": 160,
        "y": 3320,
        "wires": []
    },
    {
        "id": "897e2b78159cd501",
        "type": "link out",
        "z": "ada916479fb34c9b",
        "name": "Cadastrar Dispositivo",
        "mode": "link",
        "links": [
            "b53d88c908a3b026"
        ],
        "x": 885,
        "y": 480,
        "wires": []
    },
    {
        "id": "b53d88c908a3b026",
        "type": "link in",
        "z": "ada916479fb34c9b",
        "name": "Cadastrar Dispositivo",
        "links": [
            "897e2b78159cd501",
            "e917c29e0a2c3f5f",
            "6419e29b7a864ed5",
            "0e8edfd14c4af3e9",
            "8f2c6d004eab6879"
        ],
        "x": 55,
        "y": 1520,
        "wires": [
            [
                "53144147c6bdb2a7"
            ]
        ]
    },
    {
        "id": "5ea70f3a86590fd1",
        "type": "link in",
        "z": "ada916479fb34c9b",
        "name": "Cadastrar Setup",
        "links": [
            "4947534770e698fa",
            "b341f5cc440dacaa"
        ],
        "x": 95,
        "y": 2440,
        "wires": [
            [
                "1ebfa0bdb51b738c"
            ]
        ]
    },
    {
        "id": "a232fbe194171c85",
        "type": "link in",
        "z": "ada916479fb34c9b",
        "name": "Cadastrar Dispositivo LoRa",
        "links": [
            "22598a4a5f7d9067"
        ],
        "x": 95,
        "y": 3100,
        "wires": [
            [
                "7ac30ec85a678860"
            ]
        ]
    },
    {
        "id": "e62badbed9d5f529",
        "type": "link in",
        "z": "ada916479fb34c9b",
        "name": "Cadastrar Dispositivo MQTT",
        "links": [
            "1c0d6bd3b6b37c97"
        ],
        "x": 95,
        "y": 3380,
        "wires": [
            []
        ]
    },
    {
        "id": "4947534770e698fa",
        "type": "link out",
        "z": "ada916479fb34c9b",
        "name": "Cadastro Setup",
        "mode": "link",
        "links": [
            "5ea70f3a86590fd1",
            "e6af44e0c97b5246"
        ],
        "x": 905,
        "y": 520,
        "wires": []
    },
    {
        "id": "22598a4a5f7d9067",
        "type": "link out",
        "z": "ada916479fb34c9b",
        "name": "Cadastro Dispositivo LoRa",
        "mode": "link",
        "links": [
            "a232fbe194171c85"
        ],
        "x": 885,
        "y": 560,
        "wires": []
    },
    {
        "id": "1c0d6bd3b6b37c97",
        "type": "link out",
        "z": "ada916479fb34c9b",
        "name": "Cadastro Dispositivo MQTT",
        "mode": "link",
        "links": [
            "e62badbed9d5f529"
        ],
        "x": 865,
        "y": 600,
        "wires": []
    },
    {
        "id": "53144147c6bdb2a7",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "MAC",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "me informa o endereço de controle de acesso *(MAC)* do dispositivo que você deseja cadastrar",
        "x": 170,
        "y": 1520,
        "wires": [
            [],
            [
                "73810d7a2a3a609d"
            ]
        ]
    },
    {
        "id": "73810d7a2a3a609d",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "MAC",
        "client": "8e3298efb51f0f8f",
        "chave": "MAC",
        "x": 310,
        "y": 1520,
        "wires": [
            [
                "5cb5c2eec975a0ac"
            ]
        ]
    },
    {
        "id": "5cb5c2eec975a0ac",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Verifica se existe",
        "func": "return [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1520,
        "wires": [
            [
                "bc198eaef7143524"
            ],
            [
                "89b1808437588284"
            ]
        ]
    },
    {
        "id": "bc198eaef7143524",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "ID Disispositivo",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 1500,
        "wires": [
            [
                "f74a97668584cd54"
            ]
        ]
    },
    {
        "id": "89b1808437588284",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "desc_disp",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Descreva esse dispositivo.",
        "x": 680,
        "y": 1560,
        "wires": [
            [],
            [
                "0590a9b555655a33"
            ]
        ]
    },
    {
        "id": "0590a9b555655a33",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "desc_disp",
        "client": "8e3298efb51f0f8f",
        "chave": "desc_disp",
        "x": 840,
        "y": 1560,
        "wires": [
            [
                "d3c6a24c4a5fd682"
            ]
        ]
    },
    {
        "id": "d3c6a24c4a5fd682",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Set status inicial como ativo",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1560,
        "wires": [
            [
                "2ca0cc9603b28137"
            ]
        ]
    },
    {
        "id": "2ca0cc9603b28137",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Pega data atual do cadastro",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1560,
        "wires": [
            [
                "bf93c9bedb3d95de"
            ]
        ]
    },
    {
        "id": "09e55337f40045f7",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "devicetype",
        "info": "",
        "x": 140,
        "y": 1580,
        "wires": []
    },
    {
        "id": "a21fdf22bfb88a01",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "devicecompany",
        "info": "",
        "x": 160,
        "y": 1700,
        "wires": []
    },
    {
        "id": "31950b907709abfd",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "monitoredde",
        "info": "",
        "x": 150,
        "y": 2680,
        "wires": []
    },
    {
        "id": "30b51a8f8c449fa1",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "devicesetup",
        "info": "",
        "x": 150,
        "y": 1820,
        "wires": []
    },
    {
        "id": "d1ce99eb01f1f6e1",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "hardware",
        "info": "",
        "x": 140,
        "y": 1940,
        "wires": []
    },
    {
        "id": "d680c7ee4981e7c3",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "firmware",
        "info": "",
        "x": 140,
        "y": 2160,
        "wires": []
    },
    {
        "id": "986fbfd1e22db027",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "Recebe mensagem",
        "info": " ",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "0039ded1bf6abe55",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "Inicio dialogo",
        "info": " ",
        "x": 110,
        "y": 340,
        "wires": []
    },
    {
        "id": "ceacaaba5a7299a3",
        "type": "link out",
        "z": "ada916479fb34c9b",
        "name": "Inicia Dialogo",
        "mode": "link",
        "links": [
            "b33595340e5d52d8"
        ],
        "x": 1275,
        "y": 100,
        "wires": []
    },
    {
        "id": "b33595340e5d52d8",
        "type": "link in",
        "z": "ada916479fb34c9b",
        "name": "Inicia Dialogo",
        "links": [
            "ceacaaba5a7299a3"
        ],
        "x": 55,
        "y": 400,
        "wires": [
            [
                "fbf418c3826f4af5"
            ]
        ]
    },
    {
        "id": "7013235a92a3c253",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "Menu 1",
        "info": " ",
        "x": 90,
        "y": 460,
        "wires": []
    },
    {
        "id": "890a0ac8079a6c55",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "Menu 2",
        "info": " ",
        "x": 90,
        "y": 580,
        "wires": []
    },
    {
        "id": "62e9e3bd8b7d41e8",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "Menu 3",
        "info": " ",
        "x": 90,
        "y": 700,
        "wires": []
    },
    {
        "id": "1a092895fca06aae",
        "type": "link out",
        "z": "ada916479fb34c9b",
        "name": "Menu 1",
        "mode": "link",
        "links": [
            "73487e5eed0f1cb0"
        ],
        "x": 1075,
        "y": 360,
        "wires": []
    },
    {
        "id": "cf069e5fd090e037",
        "type": "link out",
        "z": "ada916479fb34c9b",
        "name": "Menu 2",
        "mode": "link",
        "links": [
            "2dfad1d182b73082"
        ],
        "x": 1075,
        "y": 400,
        "wires": []
    },
    {
        "id": "af9fbc487503173a",
        "type": "link out",
        "z": "ada916479fb34c9b",
        "name": "Menu 3",
        "mode": "link",
        "links": [
            "e1469c46fc781623"
        ],
        "x": 1075,
        "y": 440,
        "wires": []
    },
    {
        "id": "2feb596cb2d1de24",
        "type": "whatsapp-endchat",
        "z": "ada916479fb34c9b",
        "client": "8e3298efb51f0f8f",
        "x": 470,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "ed9560fd108a16d5",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "Função não configurada",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "*Função não configurada*",
        "x": 230,
        "y": 640,
        "wires": [
            [],
            [
                "2feb596cb2d1de24"
            ]
        ]
    },
    {
        "id": "73487e5eed0f1cb0",
        "type": "link in",
        "z": "ada916479fb34c9b",
        "name": "Menu 1",
        "links": [
            "1a092895fca06aae",
            "b9187570612c4cd6"
        ],
        "x": 55,
        "y": 520,
        "wires": [
            [
                "1437d806e77c55fd"
            ]
        ]
    },
    {
        "id": "2dfad1d182b73082",
        "type": "link in",
        "z": "ada916479fb34c9b",
        "name": "Menu 2",
        "links": [
            "cf069e5fd090e037"
        ],
        "x": 55,
        "y": 640,
        "wires": [
            [
                "ed9560fd108a16d5"
            ]
        ]
    },
    {
        "id": "e1469c46fc781623",
        "type": "link in",
        "z": "ada916479fb34c9b",
        "name": "Menu 3",
        "links": [
            "af9fbc487503173a"
        ],
        "x": 55,
        "y": 760,
        "wires": [
            [
                "a05594fdfceea024"
            ]
        ]
    },
    {
        "id": "bf93c9bedb3d95de",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "type_name",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "qual o tipo do dispositivo?",
        "x": 190,
        "y": 1640,
        "wires": [
            [],
            [
                "76a66c02a9d867dd"
            ]
        ]
    },
    {
        "id": "76a66c02a9d867dd",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "type_name",
        "client": "8e3298efb51f0f8f",
        "chave": "type_name",
        "x": 370,
        "y": 1640,
        "wires": [
            [
                "905ceb149af8a157"
            ]
        ]
    },
    {
        "id": "905ceb149af8a157",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Verifica se existe",
        "func": "\nreturn [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1640,
        "wires": [
            [
                "32d4cae59a909f38"
            ],
            [
                "eb5c86bb9dd91eef"
            ]
        ]
    },
    {
        "id": "32d4cae59a909f38",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Retorna ID devecetype",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1620,
        "wires": [
            [
                "3a1469fd627a84ca"
            ]
        ]
    },
    {
        "id": "3a1469fd627a84ca",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Cria Dispositivo",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 1620,
        "wires": [
            [
                "bc198eaef7143524"
            ]
        ]
    },
    {
        "id": "eb5c86bb9dd91eef",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "desc_type",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Descreva esse tipo de dispositivo.",
        "x": 770,
        "y": 1660,
        "wires": [
            [],
            [
                "b915c7878e8cb331"
            ]
        ]
    },
    {
        "id": "b915c7878e8cb331",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "desc_type",
        "client": "8e3298efb51f0f8f",
        "chave": "desc_type",
        "x": 950,
        "y": 1660,
        "wires": [
            [
                "ab5599a72b6ddf4a"
            ]
        ]
    },
    {
        "id": "ca98de2321d3a16f",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "decive_company",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "qual a empresa do dispositivo?",
        "x": 210,
        "y": 1760,
        "wires": [
            [],
            [
                "c1601af5870212a8"
            ]
        ]
    },
    {
        "id": "c1601af5870212a8",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "decive_company",
        "client": "8e3298efb51f0f8f",
        "chave": "decive_company",
        "x": 430,
        "y": 1760,
        "wires": [
            [
                "0cd1b4b3a323274d"
            ]
        ]
    },
    {
        "id": "0cd1b4b3a323274d",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Verifica se existe",
        "func": "\nreturn [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1760,
        "wires": [
            [
                "6df0e02e35253932"
            ],
            [
                "0cf9787bc49c39e3"
            ]
        ]
    },
    {
        "id": "6df0e02e35253932",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Retorna ID devececompany",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1740,
        "wires": [
            [
                "3a1469fd627a84ca"
            ]
        ]
    },
    {
        "id": "0cf9787bc49c39e3",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "desc_company",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Descreva essa empresa.",
        "x": 860,
        "y": 1780,
        "wires": [
            [],
            [
                "90ef6c2395e26f3f"
            ]
        ]
    },
    {
        "id": "90ef6c2395e26f3f",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "desc_company",
        "client": "8e3298efb51f0f8f",
        "chave": "desc_company",
        "x": 1060,
        "y": 1780,
        "wires": [
            [
                "7fdd076b542b75a1"
            ]
        ]
    },
    {
        "id": "eea68141a081ba99",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "desc_setup",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "configuração não encontrada, descreva essa configuração.",
        "x": 770,
        "y": 1900,
        "wires": [
            [],
            [
                "7ccaf1fdefe446e9"
            ]
        ]
    },
    {
        "id": "7ccaf1fdefe446e9",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "desc_setup",
        "client": "8e3298efb51f0f8f",
        "chave": "desc_setup",
        "x": 950,
        "y": 1900,
        "wires": [
            [
                "37fd3da4a3483b07"
            ]
        ]
    },
    {
        "id": "b0e117cfbafdf865",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "setup_name",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "qual a configuração do dispositivo?",
        "x": 190,
        "y": 1880,
        "wires": [
            [],
            [
                "6e227a04baadaf47"
            ]
        ]
    },
    {
        "id": "6e227a04baadaf47",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "setup_name",
        "client": "8e3298efb51f0f8f",
        "chave": "setup_name",
        "x": 370,
        "y": 1880,
        "wires": [
            [
                "03660c4b286ed07a"
            ]
        ]
    },
    {
        "id": "03660c4b286ed07a",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Verifica se existe",
        "func": "\nreturn [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1880,
        "wires": [
            [
                "55d061579dc6190e"
            ],
            [
                "eea68141a081ba99"
            ]
        ]
    },
    {
        "id": "55d061579dc6190e",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Retorna ID devicesetup",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 1860,
        "wires": [
            [
                "3a1469fd627a84ca"
            ]
        ]
    },
    {
        "id": "ba26890543904651",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "hardware",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "hardware não encontrado, descreva as seguintes informações do hardware separadas por *virgula*:\nnatureza, versão, bloco conectado, roteador ESP, corrente limit, tipo de sensor",
        "x": 800,
        "y": 2020,
        "wires": [
            [],
            [
                "02254754c7b7ba6c"
            ]
        ]
    },
    {
        "id": "02254754c7b7ba6c",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "hardware",
        "client": "8e3298efb51f0f8f",
        "chave": "hardware",
        "x": 980,
        "y": 2020,
        "wires": [
            [
                "be563108ba4b0e25"
            ]
        ]
    },
    {
        "id": "6d4f218fd926c7f3",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "hardware_name",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "qual o hardware do dispositivo?",
        "x": 200,
        "y": 2000,
        "wires": [
            [],
            [
                "d2199c124d76dab5"
            ]
        ]
    },
    {
        "id": "d2199c124d76dab5",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "hardware_name",
        "client": "8e3298efb51f0f8f",
        "chave": "hardware_name",
        "x": 400,
        "y": 2000,
        "wires": [
            [
                "9df20e219d4ad82c"
            ]
        ]
    },
    {
        "id": "9df20e219d4ad82c",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Verifica se existe",
        "func": "\nreturn [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2000,
        "wires": [
            [
                "df9b8eb0265a06ba"
            ],
            [
                "ba26890543904651"
            ]
        ]
    },
    {
        "id": "df9b8eb0265a06ba",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Retorna ID hardware",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 1980,
        "wires": [
            [
                "3a1469fd627a84ca"
            ]
        ]
    },
    {
        "id": "be563108ba4b0e25",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "seta status como Desenvolvimento",
        "func": "\nreturn [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 2100,
        "wires": [
            [],
            [
                "8edb43e5501d0797"
            ]
        ]
    },
    {
        "id": "8edb43e5501d0797",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "separa variaveis",
        "func": "\nreturn [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 2100,
        "wires": [
            [],
            [
                "f37f258b26298a53"
            ]
        ]
    },
    {
        "id": "f37f258b26298a53",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "desc_hardware",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "por fim descreva esse hardware",
        "x": 720,
        "y": 2100,
        "wires": [
            [],
            [
                "5d88968db943d896"
            ]
        ]
    },
    {
        "id": "5d88968db943d896",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "desc_hardware",
        "client": "8e3298efb51f0f8f",
        "chave": "desc_hardware",
        "x": 920,
        "y": 2100,
        "wires": [
            [
                "db364661417e0850"
            ]
        ]
    },
    {
        "id": "db364661417e0850",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "cria hardware",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 2100,
        "wires": [
            [
                "b2de2aefb5b53a46"
            ]
        ]
    },
    {
        "id": "37fd3da4a3483b07",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "cria devicesetup",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1900,
        "wires": [
            [
                "6d4f218fd926c7f3"
            ]
        ]
    },
    {
        "id": "7fdd076b542b75a1",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "cria devicecompany",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 1780,
        "wires": [
            [
                "b0e117cfbafdf865"
            ]
        ]
    },
    {
        "id": "ab5599a72b6ddf4a",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "cria devicetype",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1660,
        "wires": [
            [
                "ca98de2321d3a16f"
            ]
        ]
    },
    {
        "id": "97642dcce7cd6777",
        "type": "whatsapp-endchat",
        "z": "ada916479fb34c9b",
        "client": "8e3298efb51f0f8f",
        "x": 2590,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "710f15bc625f321b",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "firmware",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "firmware não encontrado, descreva as seguintes informações do firmware separadas por *virgula*:\nversão, natureza, função, módulo usado, pasta",
        "x": 800,
        "y": 2240,
        "wires": [
            [],
            [
                "09325430337ec72d"
            ]
        ]
    },
    {
        "id": "09325430337ec72d",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "firmware",
        "client": "8e3298efb51f0f8f",
        "chave": "firmware",
        "x": 980,
        "y": 2240,
        "wires": [
            [
                "4cc86b05df139f61"
            ]
        ]
    },
    {
        "id": "b2de2aefb5b53a46",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "firmware_name",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "chegamos na ultima etapa, me informe o firmware do dispositivo",
        "x": 200,
        "y": 2220,
        "wires": [
            [],
            [
                "30aedc2fa4f00e4c"
            ]
        ]
    },
    {
        "id": "30aedc2fa4f00e4c",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "firmware_name",
        "client": "8e3298efb51f0f8f",
        "chave": "firmware_name",
        "x": 400,
        "y": 2220,
        "wires": [
            [
                "7197f6ce98a2fb28"
            ]
        ]
    },
    {
        "id": "7197f6ce98a2fb28",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Verifica se existe",
        "func": "\nreturn [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2220,
        "wires": [
            [
                "8ad2e92cf4bc278c"
            ],
            [
                "710f15bc625f321b"
            ]
        ]
    },
    {
        "id": "4cc86b05df139f61",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "seta status como E",
        "func": "\nreturn [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2300,
        "wires": [
            [],
            [
                "597e19a469a9f028"
            ]
        ]
    },
    {
        "id": "597e19a469a9f028",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "separa variaveis",
        "func": "\nreturn [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 2300,
        "wires": [
            [],
            [
                "2cd7aef948ed3e88"
            ]
        ]
    },
    {
        "id": "2cd7aef948ed3e88",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "desc_firmware",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "para terminar descreva esse firmware",
        "x": 620,
        "y": 2300,
        "wires": [
            [],
            [
                "f530cabe4a0d560b"
            ]
        ]
    },
    {
        "id": "f530cabe4a0d560b",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "desc_firmware",
        "client": "8e3298efb51f0f8f",
        "chave": "desc_firmware",
        "x": 820,
        "y": 2300,
        "wires": [
            [
                "dc2328dd10d6857f"
            ]
        ]
    },
    {
        "id": "dc2328dd10d6857f",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "cria firmware",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 2300,
        "wires": [
            [
                "3a1469fd627a84ca"
            ]
        ]
    },
    {
        "id": "8ad2e92cf4bc278c",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Retorna ID firmware",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 2200,
        "wires": [
            [
                "3a1469fd627a84ca"
            ]
        ]
    },
    {
        "id": "499bfa1ac6b4c5ad",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "success",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "*Cadastro de dispositivo bem sucedido*",
        "x": 2360,
        "y": 1440,
        "wires": [
            [],
            [
                "97642dcce7cd6777"
            ]
        ]
    },
    {
        "id": "09da89d8061c1e73",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "cria country",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 1420,
        "wires": [
            [
                "5d5212b93bfc3c04",
                "7824979e32865f2f"
            ]
        ]
    },
    {
        "id": "161eb2a5bcf22d97",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "cria city",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1300,
        "wires": [
            [
                "96e2215964b23931"
            ]
        ]
    },
    {
        "id": "a679850e7bfaf77d",
        "type": "delay",
        "z": "ada916479fb34c9b",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 180,
        "y": 1100,
        "wires": [
            [
                "4a737aea5725eae5"
            ]
        ]
    },
    {
        "id": "e0b9d08473592347",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "cria company",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1180,
        "wires": [
            [
                "c7b9ba689a16895e"
            ]
        ]
    },
    {
        "id": "1ebfa0bdb51b738c",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "desc_config",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "descreva essa configuração",
        "x": 270,
        "y": 2440,
        "wires": [
            [],
            [
                "b7784c239f0b8e5e"
            ]
        ]
    },
    {
        "id": "b7784c239f0b8e5e",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "desc_config",
        "client": "8e3298efb51f0f8f",
        "chave": "desc_config",
        "x": 450,
        "y": 2440,
        "wires": [
            [
                "94a431cc436c3937"
            ]
        ]
    },
    {
        "id": "94a431cc436c3937",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Verifica se existe",
        "func": "return [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 2440,
        "wires": [
            [
                "829edcd4de9be1e4"
            ],
            [
                "07a563b4e1c55ecb"
            ]
        ]
    },
    {
        "id": "b341f5cc440dacaa",
        "type": "link out",
        "z": "ada916479fb34c9b",
        "name": "Cadastro Setup",
        "mode": "link",
        "links": [
            "5ea70f3a86590fd1",
            "e6af44e0c97b5246"
        ],
        "x": 585,
        "y": 40,
        "wires": []
    },
    {
        "id": "07a563b4e1c55ecb",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Pega data atual do cadastro",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2460,
        "wires": [
            [
                "e27de1b50cf44676"
            ]
        ]
    },
    {
        "id": "e5ea9df3fd8f7a0f",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Cria Setup",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 2540,
        "wires": [
            [
                "829edcd4de9be1e4"
            ]
        ]
    },
    {
        "id": "829edcd4de9be1e4",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "ID Setup",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 2420,
        "wires": [
            [
                "cc40f10b83569aed"
            ]
        ]
    },
    {
        "id": "91583eae8eaff952",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "circuit",
        "info": "",
        "x": 130,
        "y": 2500,
        "wires": []
    },
    {
        "id": "750d0851b8bf7bac",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "CD",
        "info": "",
        "x": 130,
        "y": 2940,
        "wires": []
    },
    {
        "id": "0966084b6b33b9d6",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "CA",
        "info": "",
        "x": 130,
        "y": 2840,
        "wires": []
    },
    {
        "id": "12f82ee65935cbce",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "name_circuit",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "agora me informe a configuração do circuito começando pelo nome do circuito",
        "x": 190,
        "y": 2560,
        "wires": [
            [],
            [
                "b82bd0e98c351a5c"
            ]
        ]
    },
    {
        "id": "b82bd0e98c351a5c",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "name_circuit",
        "client": "8e3298efb51f0f8f",
        "chave": "name_circuit",
        "x": 370,
        "y": 2560,
        "wires": [
            [
                "d5cbefaef5a57a21"
            ]
        ]
    },
    {
        "id": "d5cbefaef5a57a21",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Verifica se existe",
        "func": "return [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 2560,
        "wires": [
            [
                "29c8b5dd902fc8d5"
            ],
            [
                "55bf79e584e95be4"
            ]
        ]
    },
    {
        "id": "55bf79e584e95be4",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "phase",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "circuito não encontrado, informe a fase do circuito",
        "x": 750,
        "y": 2580,
        "wires": [
            [],
            [
                "618770b386be427a"
            ]
        ]
    },
    {
        "id": "618770b386be427a",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "phase",
        "client": "8e3298efb51f0f8f",
        "chave": "phase",
        "x": 890,
        "y": 2580,
        "wires": [
            [
                "d860cd3f5d4b0fd4"
            ]
        ]
    },
    {
        "id": "d860cd3f5d4b0fd4",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "breaker",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "em qual disjuntor esta conectado este circuito",
        "x": 1040,
        "y": 2580,
        "wires": [
            [],
            [
                "42d7a7715947abac"
            ]
        ]
    },
    {
        "id": "42d7a7715947abac",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "breaker",
        "client": "8e3298efb51f0f8f",
        "chave": "breaker",
        "x": 1200,
        "y": 2580,
        "wires": [
            [
                "a5ec786ba22cf10c"
            ]
        ]
    },
    {
        "id": "a5ec786ba22cf10c",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "desc_circuit",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "faça uma breve descrição do circuito",
        "x": 830,
        "y": 2640,
        "wires": [
            [],
            [
                "d40b94aafcbe5e67"
            ]
        ]
    },
    {
        "id": "d40b94aafcbe5e67",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "desc_circuit",
        "client": "8e3298efb51f0f8f",
        "chave": "desc_circuit",
        "x": 1010,
        "y": 2640,
        "wires": [
            [
                "e6f2dff7f7ab0dc9"
            ]
        ]
    },
    {
        "id": "e27de1b50cf44676",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Set status como E",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 2460,
        "wires": [
            [
                "12f82ee65935cbce"
            ]
        ]
    },
    {
        "id": "e6f2dff7f7ab0dc9",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Cria Circuit",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 2640,
        "wires": [
            [
                "f5ed3ac3c0078845"
            ]
        ]
    },
    {
        "id": "f5ed3ac3c0078845",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "name_monitoreddevice",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "qual o nome do dispositivo monitorado",
        "x": 230,
        "y": 2740,
        "wires": [
            [],
            [
                "032ad6e759edb631"
            ]
        ]
    },
    {
        "id": "032ad6e759edb631",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "name_monitoreddevice",
        "client": "8e3298efb51f0f8f",
        "chave": "name_monitoreddevice",
        "x": 490,
        "y": 2740,
        "wires": [
            [
                "c9941263d9af64ce"
            ]
        ]
    },
    {
        "id": "c9941263d9af64ce",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Verifica se existe",
        "func": "return [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2740,
        "wires": [
            [
                "46a71826d529e359"
            ],
            [
                "e222722cea368031"
            ]
        ]
    },
    {
        "id": "e222722cea368031",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "monitoreddevice",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "dispositivo monitorado não encontrado, descreva as seguintes informações do dispositivo separadas por *virgula*:\nconsumo mensal de kW, voltagem, potência",
        "x": 940,
        "y": 2760,
        "wires": [
            [],
            [
                "5c8c3c4e78152508"
            ]
        ]
    },
    {
        "id": "5c8c3c4e78152508",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "monitoreddevice",
        "client": "8e3298efb51f0f8f",
        "chave": "monitoreddevice",
        "x": 1140,
        "y": 2760,
        "wires": [
            [
                "3145e6643ab4aa96"
            ]
        ]
    },
    {
        "id": "29c8b5dd902fc8d5",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Retorna ID Setup",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 2540,
        "wires": [
            [
                "e5ea9df3fd8f7a0f"
            ]
        ]
    },
    {
        "id": "46a71826d529e359",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Retorna ID Setup",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 2720,
        "wires": [
            [
                "e5ea9df3fd8f7a0f"
            ]
        ]
    },
    {
        "id": "3145e6643ab4aa96",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "desc_monitoreddevice",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "faça uma breve descrição desse dispositivo ",
        "x": 780,
        "y": 2820,
        "wires": [
            [],
            [
                "53075dd7faabc622"
            ]
        ]
    },
    {
        "id": "53075dd7faabc622",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "desc_monitoreddevice",
        "client": "8e3298efb51f0f8f",
        "chave": "desc_monitoreddevice",
        "x": 1020,
        "y": 2820,
        "wires": [
            [
                "a193b759a6915f62"
            ]
        ]
    },
    {
        "id": "a193b759a6915f62",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Cria monitoreddevice",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 2820,
        "wires": [
            [
                "501ecc1c1b179b1c"
            ]
        ]
    },
    {
        "id": "7170407adb7b6d05",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "success",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "*Cadastro da configuração bem sucedido*",
        "x": 1760,
        "y": 2540,
        "wires": [
            [],
            [
                "cc40f10b83569aed"
            ]
        ]
    },
    {
        "id": "cc40f10b83569aed",
        "type": "whatsapp-endchat",
        "z": "ada916479fb34c9b",
        "client": "8e3298efb51f0f8f",
        "x": 1990,
        "y": 2540,
        "wires": [
            []
        ]
    },
    {
        "id": "3d5991ca01f324e7",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "CD",
        "info": "",
        "x": 130,
        "y": 3200,
        "wires": []
    },
    {
        "id": "5d1f6f50e6e14c6e",
        "type": "comment",
        "z": "ada916479fb34c9b",
        "name": "CD",
        "info": "",
        "x": 130,
        "y": 3460,
        "wires": []
    },
    {
        "id": "e5e6bcc211823bed",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "loraacess",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "ispositivo LoRa não encontrado, descreva as seguintes informações do dispositivo separadas por *virgula*:\nendereço EUI, server, key OTAA, perfil do dispositivo",
        "x": 880,
        "y": 3120,
        "wires": [
            [],
            [
                "2789b68264c916d2"
            ]
        ]
    },
    {
        "id": "2789b68264c916d2",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "loraacess",
        "client": "8e3298efb51f0f8f",
        "chave": "loraacess",
        "x": 1040,
        "y": 3120,
        "wires": [
            [
                "5994b49f199beab6"
            ]
        ]
    },
    {
        "id": "7ac30ec85a678860",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "loradevice_name",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "qual o nome do dispositivo lora",
        "x": 250,
        "y": 3100,
        "wires": [
            [],
            [
                "ffba2f614578d0a2"
            ]
        ]
    },
    {
        "id": "ffba2f614578d0a2",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "loradevice_name",
        "client": "8e3298efb51f0f8f",
        "chave": "loradevice_name",
        "x": 470,
        "y": 3100,
        "wires": [
            [
                "d963d1c8181202f3"
            ]
        ]
    },
    {
        "id": "88b3af086ec71bb1",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Retorna ID loradevice",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 3080,
        "wires": [
            [
                "5509871bdca90eba"
            ]
        ]
    },
    {
        "id": "d963d1c8181202f3",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Verifica se existe",
        "func": "\nreturn [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 3100,
        "wires": [
            [
                "88b3af086ec71bb1"
            ],
            [
                "e5e6bcc211823bed"
            ]
        ]
    },
    {
        "id": "5994b49f199beab6",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "seta status como Active",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 3180,
        "wires": [
            [
                "43a52ebd066e8e6e"
            ]
        ]
    },
    {
        "id": "8b4d9d5221b28c34",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Cria loradevice",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 3180,
        "wires": [
            [
                "88b3af086ec71bb1",
                "a817092551b6b808"
            ]
        ]
    },
    {
        "id": "a817092551b6b808",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "success",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "*Cadastro de dispositivo bem sucedido*",
        "x": 1780,
        "y": 3180,
        "wires": [
            [],
            [
                "5509871bdca90eba"
            ]
        ]
    },
    {
        "id": "5509871bdca90eba",
        "type": "whatsapp-endchat",
        "z": "ada916479fb34c9b",
        "client": "8e3298efb51f0f8f",
        "x": 2010,
        "y": 3180,
        "wires": [
            []
        ]
    },
    {
        "id": "43a52ebd066e8e6e",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Cria loraacess",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 3180,
        "wires": [
            [
                "7457ab796941e863"
            ]
        ]
    },
    {
        "id": "c3ed680749dcf2bc",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "mqttaccess",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "qual o id do acesso MQTT",
        "x": 230,
        "y": 3380,
        "wires": [
            [],
            [
                "fb5c4896c1e3ad98"
            ]
        ]
    },
    {
        "id": "fb5c4896c1e3ad98",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "mqttaccess",
        "client": "8e3298efb51f0f8f",
        "chave": "mqttaccess",
        "x": 450,
        "y": 3380,
        "wires": [
            [
                "ab2a241214723498"
            ]
        ]
    },
    {
        "id": "ab2a241214723498",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Verifica se existe",
        "func": "\nreturn [msg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 3380,
        "wires": [
            [
                "13babaae9b4dc43e"
            ],
            []
        ]
    },
    {
        "id": "13babaae9b4dc43e",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Retorna ID mqttaccess",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 3360,
        "wires": [
            [
                "12054ef3c142816c"
            ]
        ]
    },
    {
        "id": "3d1973ee4ac2cc72",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "loraacess",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "ispositivo LoRa não encontrado, descreva as seguintes informações do dispositivo separadas por *virgula*:\nendereço EUI, server, key OTAA, perfil do dispositivo",
        "x": 880,
        "y": 3400,
        "wires": [
            [],
            [
                "80c9c271cce33694"
            ]
        ]
    },
    {
        "id": "8d301da1e7809f92",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Cria loradevice",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 3460,
        "wires": [
            [
                "13babaae9b4dc43e",
                "aed784b28dc8654e"
            ]
        ]
    },
    {
        "id": "80c9c271cce33694",
        "type": "whatsapp-storemessage",
        "z": "ada916479fb34c9b",
        "name": "loraacess",
        "client": "8e3298efb51f0f8f",
        "chave": "loraacess",
        "x": 1040,
        "y": 3400,
        "wires": [
            [
                "37d201de5cb73d10"
            ]
        ]
    },
    {
        "id": "37d201de5cb73d10",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "seta status como Active",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 3460,
        "wires": [
            [
                "e042ecc7976270fc"
            ]
        ]
    },
    {
        "id": "e042ecc7976270fc",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "Cria loraacess",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 3460,
        "wires": [
            [
                "e7682581d325cfed"
            ]
        ]
    },
    {
        "id": "4d53d4615bc66ddd",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "salva origem",
        "func": "msg.payload.caminho = \"Menu 1\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 520,
        "wires": [
            [
                "a4e2ef51a7a5d276"
            ]
        ]
    },
    {
        "id": "1a2b90f18b99763d",
        "type": "switch",
        "z": "ada916479fb34c9b",
        "name": "",
        "property": "payload.caminho",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Menu 1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Setup",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2150,
        "y": 880,
        "wires": [
            [
                "a14ce7337d92b5d1"
            ],
            [
                "72b428ee9c99fa58"
            ]
        ]
    },
    {
        "id": "f74a97668584cd54",
        "type": "switch",
        "z": "ada916479fb34c9b",
        "name": "",
        "property": "payload.caminho",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Menu 1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Setup",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Dispositivo LoRa",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Dispositivo MQTT",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 2210,
        "y": 1500,
        "wires": [
            [
                "499bfa1ac6b4c5ad"
            ],
            [
                "6f40bdbcc8b3792d"
            ],
            [
                "8a67f6a04ebb90ac"
            ],
            [
                "f4ab4051cd2b597b"
            ]
        ]
    },
    {
        "id": "501ecc1c1b179b1c",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "salva origem",
        "func": "msg.payload.caminho = \"Setup\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 2900,
        "wires": [
            [
                "a6a1f04d403246f6"
            ]
        ]
    },
    {
        "id": "e109f6eb855c539b",
        "type": "link in",
        "z": "ada916479fb34c9b",
        "name": "CA Setup",
        "links": [
            "72b428ee9c99fa58"
        ],
        "x": 505,
        "y": 2900,
        "wires": [
            [
                "e28bc38892d8ec9b"
            ]
        ]
    },
    {
        "id": "a46f0a4f61390c9e",
        "type": "link out",
        "z": "ada916479fb34c9b",
        "name": "Cadastra Área",
        "mode": "link",
        "links": [
            "6fb3876dd78e4712",
            "91e812d6845a53c4"
        ],
        "x": 455,
        "y": 2900,
        "wires": []
    },
    {
        "id": "e28bc38892d8ec9b",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "salva id área",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 2900,
        "wires": [
            [
                "6419e29b7a864ed5"
            ]
        ]
    },
    {
        "id": "6419e29b7a864ed5",
        "type": "link out",
        "z": "ada916479fb34c9b",
        "name": "Cadastra Dispositivo",
        "mode": "link",
        "links": [
            "b53d88c908a3b026"
        ],
        "x": 135,
        "y": 3000,
        "wires": []
    },
    {
        "id": "ede59192376ff232",
        "type": "link in",
        "z": "ada916479fb34c9b",
        "name": "CD Setup",
        "links": [
            "6f40bdbcc8b3792d"
        ],
        "x": 175,
        "y": 3000,
        "wires": [
            [
                "f5b45b3bc766a9e5"
            ]
        ]
    },
    {
        "id": "f5b45b3bc766a9e5",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "salva id dispositivo",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 2980,
        "wires": [
            [
                "e5ea9df3fd8f7a0f",
                "7170407adb7b6d05"
            ]
        ]
    },
    {
        "id": "6f40bdbcc8b3792d",
        "type": "link out",
        "z": "ada916479fb34c9b",
        "name": "CD Setup",
        "mode": "link",
        "links": [
            "ede59192376ff232",
            "f48929f807212255",
            "b658f7281c4dd933"
        ],
        "x": 2315,
        "y": 1480,
        "wires": []
    },
    {
        "id": "72b428ee9c99fa58",
        "type": "link out",
        "z": "ada916479fb34c9b",
        "name": "CA Setup",
        "mode": "link",
        "links": [
            "e109f6eb855c539b"
        ],
        "x": 2255,
        "y": 900,
        "wires": []
    },
    {
        "id": "8a67f6a04ebb90ac",
        "type": "link out",
        "z": "ada916479fb34c9b",
        "name": "CD LoRa",
        "mode": "link",
        "links": [],
        "x": 2315,
        "y": 1520,
        "wires": []
    },
    {
        "id": "f4ab4051cd2b597b",
        "type": "link out",
        "z": "ada916479fb34c9b",
        "name": "CD MQTT",
        "mode": "link",
        "links": [],
        "x": 2315,
        "y": 1560,
        "wires": []
    },
    {
        "id": "f48929f807212255",
        "type": "link in",
        "z": "ada916479fb34c9b",
        "name": "CD Setup",
        "links": [
            "6f40bdbcc8b3792d"
        ],
        "x": 385,
        "y": 3260,
        "wires": [
            [
                "5759146a7d3c8d13"
            ]
        ]
    },
    {
        "id": "5759146a7d3c8d13",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "salva id dispositivo",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 3260,
        "wires": [
            [
                "8b4d9d5221b28c34"
            ]
        ]
    },
    {
        "id": "0e8edfd14c4af3e9",
        "type": "link out",
        "z": "ada916479fb34c9b",
        "name": "Cadastra Dispositivo",
        "mode": "link",
        "links": [
            "b53d88c908a3b026"
        ],
        "x": 345,
        "y": 3260,
        "wires": []
    },
    {
        "id": "7457ab796941e863",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "salva origem",
        "func": "msg.payload.caminho = \"Dispositivo LoRa\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 3260,
        "wires": [
            [
                "0e8edfd14c4af3e9"
            ]
        ]
    },
    {
        "id": "b658f7281c4dd933",
        "type": "link in",
        "z": "ada916479fb34c9b",
        "name": "CD Setup",
        "links": [
            "6f40bdbcc8b3792d"
        ],
        "x": 375,
        "y": 3520,
        "wires": [
            [
                "a5050a448df7aa08"
            ]
        ]
    },
    {
        "id": "a5050a448df7aa08",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "salva id dispositivo",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 3520,
        "wires": [
            [
                "8d301da1e7809f92"
            ]
        ]
    },
    {
        "id": "8f2c6d004eab6879",
        "type": "link out",
        "z": "ada916479fb34c9b",
        "name": "Cadastra Dispositivo",
        "mode": "link",
        "links": [
            "b53d88c908a3b026"
        ],
        "x": 335,
        "y": 3520,
        "wires": []
    },
    {
        "id": "e7682581d325cfed",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "salva origem",
        "func": "msg.payload.caminho = \"Dispositivo MQTT\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 3520,
        "wires": [
            [
                "8f2c6d004eab6879"
            ]
        ]
    },
    {
        "id": "aed784b28dc8654e",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "success",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "*Cadastro do acesso MQTT bem sucedido*",
        "x": 1780,
        "y": 3460,
        "wires": [
            [],
            [
                "12054ef3c142816c"
            ]
        ]
    },
    {
        "id": "12054ef3c142816c",
        "type": "whatsapp-endchat",
        "z": "ada916479fb34c9b",
        "client": "8e3298efb51f0f8f",
        "x": 2010,
        "y": 3460,
        "wires": [
            []
        ]
    },
    {
        "id": "a6a1f04d403246f6",
        "type": "whatsapp-sendmessage",
        "z": "ada916479fb34c9b",
        "name": "CA",
        "client": "8e3298efb51f0f8f",
        "force": true,
        "typing": true,
        "sendRead": true,
        "to": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "agora precisamos cadastrar ou emcontrar a área que este dispositivo esta conectado",
        "x": 350,
        "y": 2900,
        "wires": [
            [],
            [
                "a46f0a4f61390c9e"
            ]
        ]
    },
    {
        "id": "7824979e32865f2f",
        "type": "whatsapp-endchat",
        "z": "ada916479fb34c9b",
        "client": "8e3298efb51f0f8f",
        "x": 1768.3333740234375,
        "y": 1315.6666259765625,
        "wires": [
            []
        ]
    },
    {
        "id": "b9187570612c4cd6",
        "type": "link out",
        "z": "ada916479fb34c9b",
        "name": "Menu 1",
        "mode": "link",
        "links": [
            "73487e5eed0f1cb0"
        ],
        "x": 575,
        "y": 160,
        "wires": []
    },
    {
        "id": "bd199afe1871a9e3",
        "type": "whatsapp-endchat",
        "z": "ada916479fb34c9b",
        "client": "8e3298efb51f0f8f",
        "x": 270,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "28c222dddbaf6a81",
        "type": "file in",
        "z": "ada916479fb34c9b",
        "name": "Pega arquivo do usuario",
        "filename": "payload.path",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 690,
        "y": 220,
        "wires": [
            [
                "8a8fe8aae6eebeaa"
            ]
        ]
    },
    {
        "id": "f514a2d97e733875",
        "type": "debug",
        "z": "ada916479fb34c9b",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 220,
        "wires": []
    },
    {
        "id": "8a8fe8aae6eebeaa",
        "type": "json",
        "z": "ada916479fb34c9b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 890,
        "y": 220,
        "wires": [
            [
                "f514a2d97e733875",
                "09af0daf6c50d443"
            ]
        ]
    },
    {
        "id": "6d091e7ecbc38216",
        "type": "change",
        "z": "ada916479fb34c9b",
        "name": "remove exeço",
        "rules": [
            {
                "t": "change",
                "p": "payload.path",
                "pt": "msg",
                "from": "@s.whatsapp.net",
                "fromt": "str",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 220,
        "wires": [
            [
                "28c222dddbaf6a81"
            ]
        ]
    },
    {
        "id": "4ee0097088b16ee4",
        "type": "file",
        "z": "ada916479fb34c9b",
        "name": "",
        "filename": "payload",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 640,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "09af0daf6c50d443",
        "type": "function",
        "z": "ada916479fb34c9b",
        "name": "function 7",
        "func": "msg.user.path = msg.payload.path\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 280,
        "wires": [
            [
                "f514a2d97e733875"
            ]
        ]
    }
]