[
    {
        "id": "9f6f8230457312f3",
        "type": "tab",
        "label": "Receive Data",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e8287d7944e724f7",
        "type": "tab",
        "label": "Postgress",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "585db2e7dde94ecd",
        "type": "tab",
        "label": "Sensores",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9cf3a6d.1104258",
        "type": "tab",
        "label": "Raspberry monitoring",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3c1ed78bc6df6cbd",
        "type": "subflow",
        "name": "MQTT",
        "info": "Recebimento de mensagens via MQTT\n\n---\n\n# **Input**\n> `` Nenhum``\n\n---\n\n# **Output**\n>  ``payload`` com mengem recebida via MQTT\n\n---\n\n",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1130,
                "y": 620,
                "wires": [
                    {
                        "id": "119f2f93adb8552d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#CA69F5",
        "outputLabels": [
            "msg.payload"
        ],
        "status": {
            "x": 1080,
            "y": 680,
            "wires": [
                {
                    "id": "2fe173a7cb0a2a40",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "d85720db46554979",
        "type": "subflow",
        "name": "Tratamento da mensagem",
        "info": "Tratamento das mensagens de acordo com o topico que foi cadastrada\n\n---\n\n\n# **Input**\n> ``payloads`` em sequencia de mensagem.\n\n---\n\n\n# **Output**\n>  ``payload`` com a junção das demais mensagens de acordo com o topico da mensagem.\n\n---",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 200,
                "wires": [
                    {
                        "id": "da0851086569fc3a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1390,
                "y": 600,
                "wires": [
                    {
                        "id": "0ea7eda264f5cec1",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {
            "author": "arthurcoelho442@gmail.com",
            "license": "Apache-2.0"
        },
        "color": "#E2D96E",
        "inputLabels": [
            "msg.payload"
        ],
        "outputLabels": [
            "msg.payload",
            ""
        ],
        "status": {
            "x": 1340,
            "y": 540,
            "wires": [
                {
                    "id": "facec851db25aa60",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "96676db9a2f887ed",
        "type": "subflow",
        "name": "Formatação",
        "info": "Formata as mensagens de acordo com o nome das colunas do banco de dados.\n\n---\n\n\n# **Input**\n\n> ``payload`` contendo a mensagem a ser formatada\n\n---\n\n# **Output**\n\n> ``payload`` contendo a mensagem formadata, com adição de medições\n\n---",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 200,
                "wires": [
                    {
                        "id": "f8e788f202e28034"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 710,
                "y": 540,
                "wires": [
                    {
                        "id": "fd8388a6b3562965",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "zerar",
                "type": "bool",
                "value": "false",
                "ui": {
                    "icon": "font-awesome/fa-trash",
                    "label": {
                        "en-US": "Zerar contador"
                    },
                    "type": "checkbox"
                }
            }
        ],
        "meta": {},
        "color": "#FDD0A2",
        "inputLabels": [
            "msg.payload"
        ],
        "outputLabels": [
            "msg.payload"
        ],
        "status": {
            "x": 660,
            "y": 600,
            "wires": [
                {
                    "id": "2c63b29beb296212",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "38d792f0bb10ea75",
        "type": "subflow",
        "name": "Sincronismo Medições",
        "info": "Atualiza o banco remoto com os dados locais que não foram feitos upload.\n\n---\n\n\n# **Input**\n> Qualquer ``msg`` para iniciar a verificação\n---\n\n\n# **Output**\n> ``Nenhum``\n---\n\n",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 200,
                "wires": [
                    {
                        "id": "32bbe25fe1a9a945"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#227ac7",
        "inputLabels": [
            "msg.payload"
        ],
        "status": {
            "x": 1000,
            "y": 1240,
            "wires": [
                {
                    "id": "8b608e41ee328872",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "ba2e913aeb86a3ea",
        "type": "subflow",
        "name": "Sincronismo Local",
        "info": "Sincroniza as tabelas locais com as tabelas remotas para manter atualização de dados cadastrais\n\n---\n\n\n# **Input**\n> Qualquer ``msg`` para indicar sincronismo\n---\n\n\n# **Output**\n> ``Nenhuma``\n---\n\n",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 200,
                "wires": [
                    {
                        "id": "b08c11b25699b2f8"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#227ac7",
        "inputLabels": [
            "msg.payload"
        ],
        "status": {
            "x": 1380,
            "y": 4660,
            "wires": [
                {
                    "id": "3ad75db1d1e689f2",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "669b2c5a031c1ea8",
        "type": "subflow",
        "name": "Verifica cadastro",
        "info": "Verifica se o mqtt_id do usuario da mensagem esta cadastrado no banco.\n\n---\n\n# **Input**\n> ``msg.payload`` contendo a mensagem e suas respectivas informações.\n---\n\n# **Output**\n> ``msg.payload`` contendo a mensagem, caso o mqtt_id exista e ``Nada`` caso não exista.\n---",
        "category": "",
        "in": [
            {
                "x": 140,
                "y": 200,
                "wires": [
                    {
                        "id": "1b6f6d598dd77a2c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1170,
                "y": 480,
                "wires": [
                    {
                        "id": "37cd65d5cb164006",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DA0A5D",
        "inputLabels": [
            "msg.payload"
        ],
        "outputLabels": [
            "msg.payload"
        ],
        "status": {
            "x": 1120,
            "y": 420,
            "wires": [
                {
                    "id": "6027f5ee6457bff5",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "34a182d43462f44e",
        "type": "subflow",
        "name": "phase",
        "info": "Adiciona a phase da medição no objeto do ``msg.payload.``\n\n---\n\n\n# **Input**\n> ``msg.payload`` object a ser adicionado a ``phase``.\n---\n\n\n# **Output**\n> ``msg.payload`` contendo a phase adicionada.\n---\n\n",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 200,
                "wires": [
                    {
                        "id": "cf1501f639a22e09"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1190,
                "y": 460,
                "wires": [
                    {
                        "id": "e93d0d47e2e97002",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#f9ea13",
        "inputLabels": [
            "msg.payload"
        ],
        "outputLabels": [
            "msg.plauload"
        ],
        "status": {
            "x": 1140,
            "y": 400,
            "wires": [
                {
                    "id": "024d69ffae70bb43",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "09685600d012d69f",
        "type": "subflow",
        "name": "Sincronismo tamanho banco local",
        "info": "Recebe via ``payload`` a quantidade de dias que o banco deve manter armazanado de dados, os dados mais antigos que ultrapasam essa quantidade são apagados.\n\n---\n\n\n# **Input**\n> ``msg.payload`` indicando a quantidade de dias.\n\n---\n\n\n# **Output**\n> ``Nada``",
        "category": "",
        "in": [
            {
                "x": 140,
                "y": 200,
                "wires": [
                    {
                        "id": "692aacbe40f4705b"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#227ac7",
        "inputLabels": [
            "msg.payload"
        ],
        "status": {
            "x": 880,
            "y": 760,
            "wires": [
                {
                    "id": "3d4416342cc7ba80",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "f74e1af5aec31631",
        "type": "subflow",
        "name": "Cria Instancia",
        "info": "Cria a instancia das medições segundo o topico\n\n---\n\n# **Input**\n>Recebe o ``msg.payload`` contendo os dados da medição.\n---\n\n\n# **Output**\n>``msg.payload`` contendo a instancia criada.\n---\n\n",
        "category": "",
        "in": [
            {
                "x": 140,
                "y": 200,
                "wires": [
                    {
                        "id": "34446c17128d3e27"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 910,
                "y": 420,
                "wires": [
                    {
                        "id": "d23c3bb417f0e578",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#A52A2A",
        "inputLabels": [
            "msg.payload"
        ],
        "outputLabels": [
            "msg.payload"
        ],
        "status": {
            "x": 860,
            "y": 480,
            "wires": [
                {
                    "id": "9252ff4dd2bc68b5",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "d48fb9af316b0fe2",
        "type": "subflow",
        "name": "Envio ao banco",
        "info": "Envia os dados das medições ao banco local e ao banco remoto.\n---\n\n\n# **Input**\n>``msg.payload`` contendo a instaciação do Postgresql.\n---\n\n# **Output**\n>``Nenhum``.\n---\n",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 200,
                "wires": [
                    {
                        "id": "78f9a562fec4fcc1"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#227ac7",
        "inputLabels": [
            "msg.payload"
        ],
        "status": {
            "x": 640,
            "y": 480,
            "wires": [
                {
                    "id": "5d43614299a5b76d",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "4f3abbcb43bb4e2e",
        "type": "group",
        "z": "3c1ed78bc6df6cbd",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "2fe173a7cb0a2a40",
            "119f2f93adb8552d",
            "0372f041345ff56b",
            "07617004c325cdb0",
            "4e6d0bcfdddd096b"
        ],
        "x": 14,
        "y": 19,
        "w": 1004,
        "h": 708
    },
    {
        "id": "cc9e6cb2286922e2",
        "type": "group",
        "z": "d85720db46554979",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "facec851db25aa60",
            "0ea7eda264f5cec1",
            "67d25ef121d15f94",
            "a0a062d88e115230",
            "7a08cb8df76eb516",
            "87a810e83bc732ce"
        ],
        "x": 14,
        "y": 19,
        "w": 1262,
        "h": 628
    },
    {
        "id": "dca8bc654adbbf02",
        "type": "group",
        "z": "96676db9a2f887ed",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "fd8388a6b3562965",
            "2c63b29beb296212",
            "70d701831511dd80",
            "58e8ea5634e5a59c",
            "26d3a3ef0cd6942c",
            "5e9a61f501a537ae"
        ],
        "x": 14,
        "y": 19,
        "w": 582,
        "h": 628
    },
    {
        "id": "89a4ae0a1259ce03",
        "type": "group",
        "z": "38d792f0bb10ea75",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "8b608e41ee328872",
            "52c66abdf3919c1f",
            "d9a0266626dfcca2",
            "e0919e2a7130b098",
            "a6925304338a38ce",
            "d7f7f53f51e446ae"
        ],
        "x": 14,
        "y": 19,
        "w": 928,
        "h": 1268
    },
    {
        "id": "eaafc316090ff166",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3ad75db1d1e689f2",
            "2853a7f0ee76f7f1",
            "498764931f4b71aa",
            "a8c438ba71c0a43f",
            "53383e8862e9b803",
            "84114652054927ee",
            "14955f02aa0317be",
            "e7f10f45daeaf688",
            "240bcd834eb33cf7",
            "f41dbc6febc7f940",
            "5a6ed92c41528bb0",
            "cee982dc38904cdb",
            "c3167a56125bb451",
            "a1f79c2e32ad7c7a",
            "af65b1cf913c581f",
            "27233bf2b30dc86e",
            "28709fc7768f4c7f",
            "709f9014691197e8",
            "4a661830d296a9f8",
            "408c191f95cb3007",
            "f56b1859406935eb",
            "4bc17b1f342a5caa",
            "74a7f93a69afdede",
            "f89f668f9e414063",
            "e3df92b83ed3ae9a"
        ],
        "x": 14,
        "y": 19,
        "w": 1302,
        "h": 4688
    },
    {
        "id": "8d913cb2ad803019",
        "type": "group",
        "z": "669b2c5a031c1ea8",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "6027f5ee6457bff5",
            "37cd65d5cb164006",
            "6a8629d966bc8d0e",
            "596a5810aa7c9486",
            "5d1828b78c891a98"
        ],
        "x": 24,
        "y": 19,
        "w": 1032,
        "h": 508
    },
    {
        "id": "0592eb0f2887c3ea",
        "type": "group",
        "z": "34a182d43462f44e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "024d69ffae70bb43",
            "e93d0d47e2e97002",
            "bed7b3a0f177126a",
            "7d093e4c3e197c6a",
            "b2e99b61aad2d359"
        ],
        "x": 14,
        "y": 19,
        "w": 1062,
        "h": 488
    },
    {
        "id": "e83a4a9578dffbb9",
        "type": "group",
        "z": "09685600d012d69f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3d4416342cc7ba80",
            "cbd92a9404646671",
            "3065cbbcf25013fd",
            "e446abe020d042ad",
            "49029129029e0331"
        ],
        "x": 14,
        "y": 19,
        "w": 808,
        "h": 788
    },
    {
        "id": "4bbb49ad40394687",
        "type": "group",
        "z": "f74e1af5aec31631",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d23c3bb417f0e578",
            "9252ff4dd2bc68b5",
            "ba05562c85557e0e",
            "a08702cd6d20b021",
            "e130368244133b83"
        ],
        "x": 34,
        "y": 19,
        "w": 768,
        "h": 508
    },
    {
        "id": "3c18d8686a88df81",
        "type": "group",
        "z": "d48fb9af316b0fe2",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "5d43614299a5b76d",
            "e57930d954bad51a",
            "af5ab425cf03c631",
            "f65d3aa1e4cfc455"
        ],
        "x": 14,
        "y": 19,
        "w": 562,
        "h": 508
    },
    {
        "id": "8d259b92e5c57f37",
        "type": "group",
        "z": "e8287d7944e724f7",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7e8e57be847ffa64",
            "a103f22c7ee8d82d",
            "10821c84251bd152",
            "1c1ece291a498e9c",
            "98457142acc80c09",
            "69ec59095e3f8d2e"
        ],
        "x": 14,
        "y": 19,
        "w": 818,
        "h": 834
    },
    {
        "id": "ee3e7e6dc75cbd81",
        "type": "group",
        "z": "9f6f8230457312f3",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "0972a4a4ea90b52a",
            "17e544175a980e9e",
            "1878674991d9b330",
            "55da2a4df89cd2e6"
        ],
        "x": 14,
        "y": 19,
        "w": 668,
        "h": 408
    },
    {
        "id": "381b2ac9cf8dfa77",
        "type": "group",
        "z": "9cf3a6d.1104258",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "252e1f7447d3d8e4",
            "3ef4cfb20fbbd769",
            "2d7bbf0776b5c43a",
            "3657e7abd62e07dc",
            "1105f7cee0a7483b",
            "48a67c268ba3db08",
            "b8ae31859144c0c5"
        ],
        "x": 14,
        "y": 19,
        "w": 902,
        "h": 1135.5
    },
    {
        "id": "835a997ebcd59141",
        "type": "group",
        "z": "585db2e7dde94ecd",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "9b91bb792b3d06c8",
            "bec2c6aa409df4c5",
            "51760f99a153272a",
            "de3cc908c8e5fc7c",
            "967c3bf4ae1f8b46"
        ],
        "x": 14,
        "y": 19,
        "w": 632,
        "h": 142
    },
    {
        "id": "dcf654098a681aa7",
        "type": "group",
        "z": "9f6f8230457312f3",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "820c2d04e962724e",
            "d3c1470185340454"
        ],
        "x": 14,
        "y": 439,
        "w": 518,
        "h": 248
    },
    {
        "id": "74a7f93a69afdede",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "590dd9d1a74fc835",
            "93167eaf02c78a30",
            "e89b1d3d441e707f",
            "f60522ae345d03ca",
            "7c9e057d35f53c6c",
            "1c72b23102619651",
            "5d811315ac3e75de",
            "ea5a3b2d16aded4f",
            "d311c0c15c6c0348",
            "359d25cc9aec707e",
            "42bf92d9c2401950",
            "31f614c194128bce",
            "ee865ff6144bb3dc"
        ],
        "x": 54,
        "y": 3379,
        "w": 1232,
        "h": 202
    },
    {
        "id": "f89f668f9e414063",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "158f61f33d51de6d",
            "f0a6c3c22ff49c34",
            "6fb8e26c98625437",
            "7d246c7c0d35edb8",
            "2eb5fe97c7cebfd8",
            "d8b82cd8e69a468c",
            "8867bd0762540831",
            "95c5f304f5839103",
            "6ef1481815dfebca",
            "10c8eb4b9ed854d0",
            "727ee5c1eb284387",
            "982c662a4032ef84",
            "324f11f7a7ca0b5b"
        ],
        "x": 54,
        "y": 3599,
        "w": 1232,
        "h": 202
    },
    {
        "id": "0372f041345ff56b",
        "type": "group",
        "z": "3c1ed78bc6df6cbd",
        "g": "4f3abbcb43bb4e2e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "00ae605e067a75c3",
            "f947e220e412adfe",
            "4c0c6dfcc390f93f"
        ],
        "x": 54,
        "y": 99,
        "w": 938,
        "h": 368
    },
    {
        "id": "07617004c325cdb0",
        "type": "group",
        "z": "3c1ed78bc6df6cbd",
        "g": "4f3abbcb43bb4e2e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d79888a1a7530cc3",
            "5bb329c128359845",
            "88b47616b03f1c45",
            "590970c68ed4e141",
            "0bf1c5dd8f255c1b",
            "0123b886a978d9a2"
        ],
        "x": 54,
        "y": 539,
        "w": 532,
        "h": 162
    },
    {
        "id": "67d25ef121d15f94",
        "type": "group",
        "z": "d85720db46554979",
        "g": "cc9e6cb2286922e2",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "da0851086569fc3a",
            "abc1cc7f685db311",
            "d68cc4b4aa5992ee",
            "8927e4ccf542999d",
            "5bc332cef7bd68dd"
        ],
        "x": 54,
        "y": 99,
        "w": 832,
        "h": 142
    },
    {
        "id": "a0a062d88e115230",
        "type": "group",
        "z": "d85720db46554979",
        "g": "cc9e6cb2286922e2",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "60bdd308296943ef",
            "7a8f749828a1f658",
            "9dadcaaf455341da",
            "dc6a1f322af6636c",
            "e25b402cd2b1be3f",
            "059a8b0edfc718f5",
            "2b409d0b8bba51cc",
            "4204ca863fb0bc35",
            "61608ffadbbef6dd",
            "c3718ac6037398bd"
        ],
        "x": 54,
        "y": 259,
        "w": 1192,
        "h": 202
    },
    {
        "id": "7a08cb8df76eb516",
        "type": "group",
        "z": "d85720db46554979",
        "g": "cc9e6cb2286922e2",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b805d4cd38d09b54",
            "0f22977e34f796a8",
            "9d063926b6edf5b8",
            "87e724c87e97dc97"
        ],
        "x": 54,
        "y": 479,
        "w": 462,
        "h": 142
    },
    {
        "id": "70d701831511dd80",
        "type": "group",
        "z": "96676db9a2f887ed",
        "g": "dca8bc654adbbf02",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b5a171c979c1d14e",
            "bf124cdbf4ec0574",
            "f8e788f202e28034"
        ],
        "x": 54,
        "y": 99,
        "w": 372,
        "h": 142
    },
    {
        "id": "58e8ea5634e5a59c",
        "type": "group",
        "z": "96676db9a2f887ed",
        "g": "dca8bc654adbbf02",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "cec395bda2b21416",
            "b1ee4f14f7ef77d7",
            "6df9804a629c0736",
            "ced64b0b61ea785b"
        ],
        "x": 54,
        "y": 259,
        "w": 492,
        "h": 142
    },
    {
        "id": "26d3a3ef0cd6942c",
        "type": "group",
        "z": "96676db9a2f887ed",
        "g": "dca8bc654adbbf02",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "c06bba404e4a2fc9",
            "d64a1c0cf361fa3a",
            "b438ff76cfc8718b",
            "4b0889ab965ab6c9",
            "678d7a8aa9bf1cb0",
            "8e6b524a8fa26f7b"
        ],
        "x": 54,
        "y": 419,
        "w": 472,
        "h": 202
    },
    {
        "id": "52c66abdf3919c1f",
        "type": "group",
        "z": "38d792f0bb10ea75",
        "g": "89a4ae0a1259ce03",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "040b6a5ede07d37a",
            "b8b248e6b297058e",
            "4146eef348897bce",
            "ed47f52f20f57955",
            "6d8a9ccc15e60714",
            "ba1f97dd5f403313",
            "70b196f4f67d2827",
            "5e4cafb618979765",
            "ecfe55630da4601a",
            "49df46e372d3ac33",
            "0551cf9e18d8a383",
            "9d02f39318aa5afe",
            "923afcad2bcd1102",
            "90f2c3953bed557b",
            "806b6a2b8268ae9a",
            "7f8a305189528e4d",
            "4d39129c6fe22d90",
            "e5ac913d52d84837",
            "b1a42583f0a435ce",
            "66736d34fe8ddb6f",
            "e66406cdf13ec4db",
            "92e389294835402c",
            "a3dbbf5b8b6484c9",
            "5803a221c220798a",
            "dcc7c6f584808cce",
            "e660f2d49a4bf0e9",
            "93a3cde39b8c838e",
            "2e54fe5b50f57275",
            "db1e626491b2a83e",
            "e0d9949e09da892e",
            "5bfe929015aec041",
            "177c08d34f1153ed",
            "ce589cab12b8ce60",
            "5ab8c0a121cf0e58",
            "4a30e1429a444611"
        ],
        "x": 54,
        "y": 319,
        "w": 822,
        "h": 582
    },
    {
        "id": "d9a0266626dfcca2",
        "type": "group",
        "z": "38d792f0bb10ea75",
        "g": "89a4ae0a1259ce03",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "96c098e745d45eec",
            "786bc2d4f569466a",
            "f4a4d0a6a0b35a18",
            "552eb00e07d89be4",
            "52f86d2dc966b620"
        ],
        "x": 54,
        "y": 1079,
        "w": 472,
        "h": 182
    },
    {
        "id": "498764931f4b71aa",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "199e644b24cd4bf6",
            "96973cfa9742df19",
            "b4060dd8c7a655e4",
            "b08c11b25699b2f8"
        ],
        "x": 54,
        "y": 99,
        "w": 322,
        "h": 182
    },
    {
        "id": "a8c438ba71c0a43f",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "8dfaa3f341d5e07a",
            "cbed0e82daa4b5c2",
            "105b7358fbc1c293",
            "e58fa1f7bf9f8550",
            "4ba1e29a17d4625b",
            "ef75f3514328cd17",
            "3921b65f469ae086",
            "5c73b81e188d9ac2",
            "b647f3942cbd6254",
            "cd5c218ee9c6205a",
            "06d7e8c6c1334b71",
            "36af044387884685",
            "fce5303b5fb552fb",
            "9563ba90d9215170"
        ],
        "x": 54,
        "y": 299,
        "w": 1232,
        "h": 202
    },
    {
        "id": "53383e8862e9b803",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d74dffa819f73129",
            "f2da1fd75e931b7e",
            "c4b96ca4567898b7",
            "7e433f88e96e41eb",
            "f649396824a36178",
            "d0a2c2703adcc983",
            "8a11ee839a0979da",
            "0e184ddd3a0c00c0",
            "d14a279303962827",
            "5a3caea94c3651a7",
            "1f214db4b066a4b0",
            "3ad4e65ea27962e9",
            "06d3873666cdcc8c"
        ],
        "x": 54,
        "y": 519,
        "w": 1232,
        "h": 202
    },
    {
        "id": "84114652054927ee",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d9470f58dda5f7f6",
            "dfb1adba836ad9e6",
            "45d280528d1b4dfb",
            "97ae9adc20fdda10",
            "4fd97f3c436aa12b",
            "601ed41a32f7b1c7",
            "e458e99a72602419",
            "5bd7dec67038c80a",
            "b29bcebac97bdcf5",
            "66b972ccb44c57ca",
            "b46861707df4cbbc",
            "aae528061b51fe89",
            "3e884f2af668b4c9"
        ],
        "x": 54,
        "y": 739,
        "w": 1232,
        "h": 202
    },
    {
        "id": "14955f02aa0317be",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a09a5266c9e37d51",
            "67a1237aa8db2ef2",
            "cb34236a415a64dd",
            "b563a069690530dc",
            "234d63d07a766d1b",
            "ff9355116873d642",
            "0d272e145cf9e77f",
            "2ea116986217b6b5",
            "4c9ec412a893312b",
            "3d4ded5bafc2789e",
            "60315ce943dfadcc",
            "785259ae610fd3e0",
            "582b718ead86ec49"
        ],
        "x": 54,
        "y": 959,
        "w": 1232,
        "h": 202
    },
    {
        "id": "e7f10f45daeaf688",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d01f398fa34b84e6",
            "55d44e3a3b6f493a",
            "9af565314439fc4e",
            "b98efcbbf56da6df",
            "dee7f3574781e050",
            "c8f90973dea69e83",
            "a5413bd94ea89539",
            "7e96cf05721102ca",
            "e05ad0dcd8d0af70",
            "109d8d57f28bd0a8",
            "ee10ab59961da23c",
            "93279c25b5a05f4b",
            "d8c7ecffa86e51ab"
        ],
        "x": 54,
        "y": 1179,
        "w": 1232,
        "h": 202
    },
    {
        "id": "240bcd834eb33cf7",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bdae3c5d2cd207a4",
            "08d5038231a82483",
            "4aa12f5df2e22995",
            "22ba8158696087fb",
            "861b42de0290b1e4",
            "469fb031045ac616",
            "f481fe5b4421ebe6",
            "74ade0d27636133a",
            "03d87c8ebc066a96",
            "8899a3ad7242ec32",
            "effd615210513b4b",
            "70346f5fc6ad3c22",
            "8b638bc66dad9013"
        ],
        "x": 54,
        "y": 1399,
        "w": 1232,
        "h": 202
    },
    {
        "id": "f41dbc6febc7f940",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b2add571b6f01571",
            "68c2dd9382fd801d",
            "ca76449609927f3a",
            "f59c7a4c85be083c",
            "21c7a908db22bc3a",
            "f2f9afc18d31bd34",
            "4bb9ccd58662dc9a",
            "61a3c53120148a48",
            "0ed079d2659a6eab",
            "21bfdd6cb6dc2c22",
            "d02db1a1e6df16b4",
            "543babc216b09724",
            "cdf008a3c8ad6593"
        ],
        "x": 54,
        "y": 1619,
        "w": 1232,
        "h": 202
    },
    {
        "id": "5a6ed92c41528bb0",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a93ac6f89eb0111a",
            "1e3e8e8b79c1d1b1",
            "2ecea0a103eac8af",
            "88d970917f492191",
            "0fcaa9dc996ba593",
            "06bbae300c2adbf2",
            "3ac6187a8a83bab3",
            "722aaaee01661a51",
            "32e16135e1e0107f",
            "826b3342825de03c",
            "87fa4ed0d1f58c61",
            "860c713e56ba1a1a",
            "ef6d149a52e5a7eb"
        ],
        "x": 54,
        "y": 1839,
        "w": 1232,
        "h": 202
    },
    {
        "id": "cee982dc38904cdb",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ab0ce47ba2fbdaf0",
            "d28711ca27a38fcf",
            "0f55a45b5d4722e1",
            "941c31c96190ed36",
            "cb0567464daab6c1",
            "7508e67f3853f139",
            "a79abf3192c43784",
            "1db90311e4f74f4a",
            "c8dc5dd52562c662",
            "cc5d225d719d7343",
            "2a116f457938557f",
            "fa37fd6a89dec1a9",
            "bee24cec67c2bd34"
        ],
        "x": 54,
        "y": 2059,
        "w": 1232,
        "h": 202
    },
    {
        "id": "c3167a56125bb451",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b192aebf24178f75",
            "ceab5f64bb45b087",
            "93df8599ad612ec7",
            "0a27bc8e8b32fc2c",
            "2a88500f7575a211",
            "4df0e2029eb96f33",
            "d627d7b6724ba95a",
            "9b59b52798c817e5",
            "e9362e7f3c2fc5d9",
            "966e92a9336395e4",
            "d0c2ba54e19b8c55",
            "d33e30800772875f",
            "18c02c9cbb6082cb"
        ],
        "x": 54,
        "y": 2279,
        "w": 1232,
        "h": 202
    },
    {
        "id": "a1f79c2e32ad7c7a",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bf814a7a27f37484",
            "c2e208e816e1214d",
            "2027e5a5f226d68c",
            "e5bb5167cc42ddfb",
            "8cfea906416f9471",
            "d28eda873efb0f16",
            "f7cc577f7636de41",
            "b47431ad9fac00a9",
            "65083aa2bad271b1",
            "04c3dba32d7af993",
            "62e7ac35611434e1",
            "81037cfd1cca377c",
            "68eeb8363d74b6f0"
        ],
        "x": 54,
        "y": 2499,
        "w": 1232,
        "h": 202
    },
    {
        "id": "af65b1cf913c581f",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d73e12e0b0355aee",
            "4eb69295d4e3be47",
            "9188e3a48d2a39be",
            "339d0b2ef3b413f6",
            "bceb699c0b897603",
            "84e615d5a0916ad6",
            "f1c863a7324d4bb6",
            "d95c9f9a1522b4e5",
            "68f005cdbe70be44",
            "3adab46062d74a1c",
            "b5ebb1e8c5b8f0a6",
            "52adb34b44a91203",
            "c4fbb5d6bc4d1705"
        ],
        "x": 54,
        "y": 2719,
        "w": 1232,
        "h": 202
    },
    {
        "id": "27233bf2b30dc86e",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4ee0c7b002fbb548",
            "d637ab39ad04abc3",
            "36e393322517e0b9",
            "8d2cf2d35b9ed765",
            "4154ce6de80c590d",
            "716bc1e85058519b",
            "282ebc181d21e648",
            "ddb2a6458b699216",
            "8d951fc7ca90bac9",
            "1d97c80b117e92e6",
            "85d130497f8d1c1f",
            "c96347f7b2d84cee",
            "70206e5d2f551471"
        ],
        "x": 54,
        "y": 2939,
        "w": 1232,
        "h": 202
    },
    {
        "id": "28709fc7768f4c7f",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "089d3b8db42feef7",
            "1dbcec2c2e281356",
            "42b2aefe8a793e53",
            "090a8fada3cddceb",
            "a8cad4718add655d",
            "d094e569846f9466",
            "7d026183464eed1b",
            "f374049ef45f87f1",
            "3c107fdc2b012131",
            "32f4bf6d0d2fd316",
            "99e7a9144584bba9",
            "aa0d13f19a9d2030",
            "09d133b856096954"
        ],
        "x": 54,
        "y": 3159,
        "w": 1232,
        "h": 202
    },
    {
        "id": "709f9014691197e8",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ce7641387fce5d30",
            "4212ca74f6fe6925",
            "2819e3062c0ec390",
            "019f5dfdcb3403e7",
            "f36b3565ee8dd644",
            "04de84447f7ef0ec",
            "5f077ad03df03eb4",
            "233ef6e7319cb681",
            "c3a8972de2eb1ac7",
            "9abc5852696dd007",
            "2a1aeab4bd948f2a",
            "51db23b114da2966",
            "b8bd57fe666fe9f3"
        ],
        "x": 54,
        "y": 3819,
        "w": 1232,
        "h": 202
    },
    {
        "id": "4a661830d296a9f8",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "1fc7984f3151b51e",
            "d06c2278f6cdc2f2",
            "0266a853038f15ee",
            "23e1ccc4f64dd082",
            "36837c5652b7ee9b",
            "77ef8befb10cc36d",
            "5468bd1b0210def4",
            "3bbf3b4a47400e13",
            "51ba5f02d6bfbef8",
            "141bda04cd333c77",
            "b2c3afea262e3886",
            "dc1c47f610201a5f",
            "ba9f8b6f9ee6ee5f"
        ],
        "x": 54,
        "y": 4039,
        "w": 1232,
        "h": 202
    },
    {
        "id": "408c191f95cb3007",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "1ecd0e844e8ebbfd",
            "6063254271dbe2f8",
            "cd564a67b7af70f5",
            "48f13be0aab9673e",
            "14b26663f0ccd1e8",
            "e714b273232bbbd8",
            "2485ad77a0ca397f",
            "4d270d4a9ed77a89",
            "4f168c459b1c47ed",
            "c55796570c542485",
            "0d142624a94b296d",
            "13f7ceb41536f862",
            "bac9ca7388169018"
        ],
        "x": 54,
        "y": 4259,
        "w": 1232,
        "h": 202
    },
    {
        "id": "f56b1859406935eb",
        "type": "group",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f5a1ee040838f147",
            "618bc920dedea369",
            "dc3b128908422624",
            "53e88746ad15d7a1",
            "d04604ecc6637529",
            "d9dfd6334355e3e0"
        ],
        "x": 54,
        "y": 4479,
        "w": 472,
        "h": 202
    },
    {
        "id": "6a8629d966bc8d0e",
        "type": "group",
        "z": "669b2c5a031c1ea8",
        "g": "8d913cb2ad803019",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7002636ddb30f910",
            "82cb70c003e87435",
            "eaa563ef1aa3827a",
            "d33356dcd168fc2a",
            "b76ef466ac9a7e3a",
            "1249f497fea1a35d"
        ],
        "x": 74,
        "y": 299,
        "w": 472,
        "h": 202
    },
    {
        "id": "596a5810aa7c9486",
        "type": "group",
        "z": "669b2c5a031c1ea8",
        "g": "8d913cb2ad803019",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7cd8f04c0521442b",
            "1b6f6d598dd77a2c",
            "60d5acd974e6fbff",
            "34283419f9ffbc0e",
            "857d65bc5c3a4532",
            "18a9e0b0fa31c882"
        ],
        "x": 74,
        "y": 99,
        "w": 952,
        "h": 182
    },
    {
        "id": "bed7b3a0f177126a",
        "type": "group",
        "z": "34a182d43462f44e",
        "g": "0592eb0f2887c3ea",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3b2cf9c3afe2d376",
            "4688b5952e4cb207",
            "1bdf45fec5432b9b",
            "684991e42840bd1e",
            "18a6cb4f095a87ac",
            "d9c1878b7171502d"
        ],
        "x": 54,
        "y": 279,
        "w": 472,
        "h": 202
    },
    {
        "id": "7d093e4c3e197c6a",
        "type": "group",
        "z": "34a182d43462f44e",
        "g": "0592eb0f2887c3ea",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "cf1501f639a22e09",
            "f12517394d74bd51",
            "6c4792f058f9c526",
            "7cd6bda2b53deacc",
            "83e9296b6f199155",
            "63bfb9114da94960"
        ],
        "x": 54,
        "y": 99,
        "w": 992,
        "h": 162
    },
    {
        "id": "cbd92a9404646671",
        "type": "group",
        "z": "09685600d012d69f",
        "g": "e83a4a9578dffbb9",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ec21d3efa2d6bffe",
            "613c357d84c4b290",
            "2d5d45d995cd7950",
            "f28f5b07b82ad25f"
        ],
        "x": 54,
        "y": 639,
        "w": 472,
        "h": 142
    },
    {
        "id": "3065cbbcf25013fd",
        "type": "group",
        "z": "09685600d012d69f",
        "g": "e83a4a9578dffbb9",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "844943af8c7d4e73",
            "ef5798fc2f337728",
            "1b881169df1b0798",
            "0d0cad53f07a5b92",
            "9d32063781414887",
            "96d681e45de21a0e",
            "a03396ba0ddce445",
            "8644a79af8c9a0a7",
            "7c7f31bbd0689a19",
            "cb0171b2927b5304",
            "1e0806e065ace9dc",
            "692aacbe40f4705b"
        ],
        "x": 54,
        "y": 99,
        "w": 742,
        "h": 322
    },
    {
        "id": "e446abe020d042ad",
        "type": "group",
        "z": "09685600d012d69f",
        "g": "e83a4a9578dffbb9",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "5dba1dd7f8ef9f37",
            "802c2f6560b5c23b",
            "692ad4797710b201",
            "57a282e093ade67f",
            "ceccaac9a358c815"
        ],
        "x": 54,
        "y": 439,
        "w": 612,
        "h": 182
    },
    {
        "id": "ba05562c85557e0e",
        "type": "group",
        "z": "f74e1af5aec31631",
        "g": "4bbb49ad40394687",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "46142d271d11c1b1",
            "d52dac65f46168b2",
            "7655d507feebce3a",
            "c87e99b5c4590a7e",
            "a00453562aaf80c5",
            "1e32a1581432b5b5"
        ],
        "x": 74,
        "y": 299,
        "w": 472,
        "h": 202
    },
    {
        "id": "a08702cd6d20b021",
        "type": "group",
        "z": "f74e1af5aec31631",
        "g": "4bbb49ad40394687",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "21aa61e535f67716",
            "34446c17128d3e27",
            "453064c635bce4af",
            "b0bd82357acc1a58",
            "90f3aa363caf5125",
            "32f85d54cb02d364"
        ],
        "x": 74,
        "y": 99,
        "w": 702,
        "h": 182
    },
    {
        "id": "e57930d954bad51a",
        "type": "group",
        "z": "d48fb9af316b0fe2",
        "g": "3c18d8686a88df81",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f64565d0614bd4d9",
            "eb8ac13e75487dce",
            "7f0a1ca5317c64f2",
            "e80b87d89c140237",
            "9e824dc92c233e92",
            "12225f8d5beaf555"
        ],
        "x": 54,
        "y": 299,
        "w": 452,
        "h": 202
    },
    {
        "id": "af5ab425cf03c631",
        "type": "group",
        "z": "d48fb9af316b0fe2",
        "g": "3c18d8686a88df81",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "78f9a562fec4fcc1",
            "2d7925ba24b17ddc",
            "a1db2bad0a9bc913",
            "12711aee6cc91af8"
        ],
        "x": 54,
        "y": 99,
        "w": 492,
        "h": 182
    },
    {
        "id": "a103f22c7ee8d82d",
        "type": "group",
        "z": "e8287d7944e724f7",
        "g": "8d259b92e5c57f37",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "51f69b1bdc9a3ec2",
            "deff96f79e54b357",
            "cd20082090c4089f",
            "02e1108f9f5494c7"
        ],
        "x": 54,
        "y": 99,
        "w": 412,
        "h": 142
    },
    {
        "id": "10821c84251bd152",
        "type": "group",
        "z": "e8287d7944e724f7",
        "g": "8d259b92e5c57f37",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "2ff7790cc95546a4",
            "f6ee5a147509f8a7",
            "c36938b99c6ef84d"
        ],
        "x": 54,
        "y": 259,
        "w": 252,
        "h": 142
    },
    {
        "id": "1c1ece291a498e9c",
        "type": "group",
        "z": "e8287d7944e724f7",
        "g": "8d259b92e5c57f37",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "fd6966f62c5f4377",
            "a1a28835cc78a456"
        ],
        "x": 314,
        "y": 259,
        "w": 232,
        "h": 142
    },
    {
        "id": "98457142acc80c09",
        "type": "group",
        "z": "e8287d7944e724f7",
        "g": "8d259b92e5c57f37",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b7ae2ba514a725d7",
            "7545bc9af9735841",
            "1ca11c9dc4212a97"
        ],
        "x": 54,
        "y": 419,
        "w": 578,
        "h": 408
    },
    {
        "id": "69ec59095e3f8d2e",
        "type": "group",
        "z": "e8287d7944e724f7",
        "g": "8d259b92e5c57f37",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "be7050e23063ac3f",
            "efcc528c06ac65c3"
        ],
        "x": 554,
        "y": 259,
        "w": 252,
        "h": 142
    },
    {
        "id": "0972a4a4ea90b52a",
        "type": "group",
        "z": "9f6f8230457312f3",
        "g": "ee3e7e6dc75cbd81",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "76140eddd162166d",
            "2f31c77966406561"
        ],
        "x": 54,
        "y": 99,
        "w": 212,
        "h": 142
    },
    {
        "id": "17e544175a980e9e",
        "type": "group",
        "z": "9f6f8230457312f3",
        "g": "ee3e7e6dc75cbd81",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bf995a2ef240a2ec",
            "05381af15160533c",
            "eaed3b45a16c7861"
        ],
        "x": 274,
        "y": 99,
        "w": 382,
        "h": 142
    },
    {
        "id": "1878674991d9b330",
        "type": "group",
        "z": "9f6f8230457312f3",
        "g": "ee3e7e6dc75cbd81",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e06adc1055db882b",
            "c05d7f1b5282f789",
            "13fe1aeb38fe44f7",
            "352bb99953728a78"
        ],
        "x": 54,
        "y": 259,
        "w": 362,
        "h": 142
    },
    {
        "id": "3657e7abd62e07dc",
        "type": "group",
        "z": "9cf3a6d.1104258",
        "g": "381b2ac9cf8dfa77",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "cf3854e6.653878",
            "4de9dba1.ed7854",
            "f4592b30.2f0528",
            "4b4a0861.092b28",
            "45883067344c46b6"
        ],
        "x": 54,
        "y": 919,
        "w": 352,
        "h": 209.5
    },
    {
        "id": "1105f7cee0a7483b",
        "type": "group",
        "z": "9cf3a6d.1104258",
        "g": "381b2ac9cf8dfa77",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "958bb7fb24c360f9",
            "2832a784255c721e",
            "c9c843c2a7f1f6db",
            "404edafd431901a6",
            "725155326c937c25",
            "819d7d584fcd463f",
            "5e3b44aaa25a2f54",
            "f756c2a2b9eec448",
            "2c4e2c6498879ba7",
            "93519447ae8f0a25",
            "4fdf18cb138523bc"
        ],
        "x": 54,
        "y": 699,
        "w": 712,
        "h": 202
    },
    {
        "id": "48a67c268ba3db08",
        "type": "group",
        "z": "9cf3a6d.1104258",
        "g": "381b2ac9cf8dfa77",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f71718837a54a08f",
            "6fafd79cb02b87d9",
            "497ebb96dcfe1dc9",
            "77f4196c4b4e9683",
            "d6656179725684ec",
            "768e50e864cde681",
            "7fba4f6acda56415",
            "3681e65fd56fee9f",
            "831f1f934785ff40",
            "de2f89e08e377527",
            "105c78ffbb045c78",
            "9844b596b9c6e557",
            "404f06.1e77b0fc",
            "4bae8072.e81c2",
            "d4feb199.b898b",
            "73708987a7b6747c"
        ],
        "x": 54,
        "y": 99,
        "w": 832,
        "h": 302
    },
    {
        "id": "b8ae31859144c0c5",
        "type": "group",
        "z": "9cf3a6d.1104258",
        "g": "381b2ac9cf8dfa77",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a508a5b7.89a128",
            "5b885c00f9044571",
            "5e142e90e04342e4",
            "ee6c1b7c2a94e272",
            "5992919b17c5a783",
            "833741c520aa051e",
            "86c8aa164e10bf01",
            "d420bfa15aacf3e2",
            "751d4c866d282f5f",
            "7a45bf60f5d88d0b",
            "8ba27fce95d8dd60",
            "e9ff54e87cb4a07a",
            "a002cfd7b7be6b3b",
            "ad4498e0.e7c278"
        ],
        "x": 54,
        "y": 419,
        "w": 672,
        "h": 262
    },
    {
        "id": "a6925304338a38ce",
        "type": "group",
        "z": "38d792f0bb10ea75",
        "g": "89a4ae0a1259ce03",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4e40d269f48f470d",
            "86e73473a3e214d1",
            "1aa5af6032edc5ab",
            "56c099c98ad9eaf9",
            "bb6117245d83f20a",
            "32bbe25fe1a9a945",
            "6afd3e63d4bc7b0a",
            "d6356c3a4ded65df"
        ],
        "x": 54,
        "y": 99,
        "w": 862,
        "h": 202
    },
    {
        "id": "d3c1470185340454",
        "type": "group",
        "z": "9f6f8230457312f3",
        "g": "dcf654098a681aa7",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "709d3e83688a9b4b",
            "37149fc0ba2ae4f6",
            "2c485295a4013537"
        ],
        "x": 54,
        "y": 519,
        "w": 452,
        "h": 142
    },
    {
        "id": "d7f7f53f51e446ae",
        "type": "group",
        "z": "38d792f0bb10ea75",
        "g": "89a4ae0a1259ce03",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b1febcc17f2ba6b1",
            "d5483a424d414257",
            "5b38f4be3fe9e5b4"
        ],
        "x": 54,
        "y": 919,
        "w": 332,
        "h": 142
    },
    {
        "id": "f947e220e412adfe",
        "type": "group",
        "z": "3c1ed78bc6df6cbd",
        "g": "0372f041345ff56b",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d2ab753d8990c917",
            "3780a621e1676780",
            "384a23cf46f3ecba",
            "3829aec4c323c5ce",
            "234edab9ccee349a",
            "47cf208a6e77ebea",
            "104af077a29300d7"
        ],
        "x": 94,
        "y": 179,
        "w": 872,
        "h": 162
    },
    {
        "id": "4c0c6dfcc390f93f",
        "type": "group",
        "z": "3c1ed78bc6df6cbd",
        "g": "0372f041345ff56b",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bef4051a82cbf4bc"
        ],
        "x": 94,
        "y": 359,
        "w": 192,
        "h": 82
    },
    {
        "id": "7545bc9af9735841",
        "type": "group",
        "z": "e8287d7944e724f7",
        "g": "98457142acc80c09",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "37b3107ac0c0715b",
            "be4493f2c2f75c3e",
            "20bafe5cc7c9ba94"
        ],
        "x": 94,
        "y": 499,
        "w": 512,
        "h": 142
    },
    {
        "id": "1ca11c9dc4212a97",
        "type": "group",
        "z": "e8287d7944e724f7",
        "g": "98457142acc80c09",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "66c27d2410b776bc",
            "f1d443282985b5cf",
            "41d54b1aa97f9252"
        ],
        "x": 94,
        "y": 659,
        "w": 412,
        "h": 142
    },
    {
        "id": "552e299bbb7f9815",
        "type": "ui_spacer",
        "z": "9cf3a6d.1104258",
        "name": "",
        "group": "89655bc687a2d39e",
        "order": 6,
        "width": "15",
        "height": "1"
    },
    {
        "id": "e5f1cf376838c3b8",
        "type": "ui_spacer",
        "z": "9cf3a6d.1104258",
        "name": "",
        "group": "89655bc687a2d39e",
        "order": 1,
        "width": "1",
        "height": "6"
    },
    {
        "id": "5509e9f032f24ffe",
        "type": "ui_spacer",
        "z": "9cf3a6d.1104258",
        "name": "",
        "group": "89655bc687a2d39e",
        "order": 5,
        "width": "1",
        "height": "6"
    },
    {
        "id": "f42b8d798a407cdc",
        "type": "ui_spacer",
        "z": "9cf3a6d.1104258",
        "name": "",
        "group": "9cb4bc4d.96552",
        "order": 1,
        "width": "1",
        "height": "5"
    },
    {
        "id": "1e6a5a5b884fdfc7",
        "type": "ui_spacer",
        "z": "9cf3a6d.1104258",
        "name": "",
        "group": "9cb4bc4d.96552",
        "order": 4,
        "width": "1",
        "height": "5"
    },
    {
        "id": "3e97454d3041123d",
        "type": "ui_spacer",
        "z": "9cf3a6d.1104258",
        "name": "lorawan-keys",
        "group": "9cb4bc4d.96552",
        "order": 9,
        "width": "17",
        "height": "1"
    },
    {
        "id": "e6403d65f73d9be1",
        "type": "ui_spacer",
        "z": "9cf3a6d.1104258",
        "name": "",
        "group": "9cb4bc4d.96552",
        "order": 6,
        "width": "1",
        "height": "6"
    },
    {
        "id": "72c3e1a6d0947c49",
        "type": "ui_spacer",
        "z": "9cf3a6d.1104258",
        "name": "",
        "group": "9cb4bc4d.96552",
        "order": 8,
        "width": "1",
        "height": "6"
    },
    {
        "id": "382c2db67b719a33",
        "type": "ui_spacer",
        "z": "9cf3a6d.1104258",
        "name": "",
        "group": "466350cf14959bc1",
        "order": 1,
        "width": "1",
        "height": "4"
    },
    {
        "id": "392848647b0e6898",
        "type": "ui_spacer",
        "z": "9cf3a6d.1104258",
        "name": "",
        "group": "dd70abe0.14cb38",
        "order": 1,
        "width": "11",
        "height": "1"
    },
    {
        "id": "21b8de656cc7cfe6",
        "type": "ui_spacer",
        "z": "9cf3a6d.1104258",
        "name": "",
        "group": "dd70abe0.14cb38",
        "order": 5,
        "width": "11",
        "height": "2"
    },
    {
        "id": "c835ef46d2d400fd",
        "type": "ui_spacer",
        "z": "9cf3a6d.1104258",
        "name": "",
        "group": "dd70abe0.14cb38",
        "order": 2,
        "width": "2",
        "height": "2"
    },
    {
        "id": "0d6f9b7c5d109b4b",
        "type": "postgreSQLConfig",
        "name": "NOCS",
        "host": "HOST_RDB",
        "hostFieldType": "env",
        "port": "PORT_RDB",
        "portFieldType": "env",
        "database": "NAME_RDB",
        "databaseFieldType": "env",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "USER_RDB",
        "userFieldType": "env",
        "password": "PASSWORD_RDB",
        "passwordFieldType": "env"
    },
    {
        "id": "a9a656a76fe9053e",
        "type": "postgreSQLConfig",
        "name": "Local",
        "host": "HOST_DB",
        "hostFieldType": "env",
        "port": "PORT_DB",
        "portFieldType": "env",
        "database": "NAME_DB",
        "databaseFieldType": "env",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "env",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "USER_DB",
        "userFieldType": "env",
        "password": "PASSWORD_DB",
        "passwordFieldType": "env"
    },
    {
        "id": "cbc780059d841a44",
        "type": "ui_tab",
        "name": "Raspberry Pi (Painel de Controle)",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2a911f79a93f391d",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#cc0000",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#cc0000",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#cc0000",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#ff1a1a",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#cc0000",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "9cb4bc4d.96552",
        "type": "ui_group",
        "name": "Sistema",
        "tab": "cbc780059d841a44",
        "order": 2,
        "disp": true,
        "width": "17",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dd70abe0.14cb38",
        "type": "ui_group",
        "name": "OS",
        "tab": "cbc780059d841a44",
        "order": 3,
        "disp": true,
        "width": "11",
        "collapse": false,
        "className": ""
    },
    {
        "id": "89655bc687a2d39e",
        "type": "ui_group",
        "name": "Disco",
        "tab": "cbc780059d841a44",
        "order": 1,
        "disp": true,
        "width": "17",
        "collapse": false,
        "className": ""
    },
    {
        "id": "466350cf14959bc1",
        "type": "ui_group",
        "name": "Memoria Ram",
        "tab": "cbc780059d841a44",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "234edab9ccee349a",
        "type": "switch",
        "z": "3c1ed78bc6df6cbd",
        "g": "f947e220e412adfe",
        "name": "Não nulos",
        "property": "payload.client",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 280,
        "wires": [
            [
                "3829aec4c323c5ce"
            ]
        ]
    },
    {
        "id": "384a23cf46f3ecba",
        "type": "switch",
        "z": "3c1ed78bc6df6cbd",
        "g": "f947e220e412adfe",
        "name": "Existe dados",
        "property": "payload.packet.payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 280,
        "wires": [
            [
                "d2ab753d8990c917",
                "3780a621e1676780"
            ]
        ]
    },
    {
        "id": "3829aec4c323c5ce",
        "type": "switch",
        "z": "3c1ed78bc6df6cbd",
        "g": "f947e220e412adfe",
        "name": "Esta conectado",
        "property": "payload.client.connected",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 600,
        "y": 280,
        "wires": [
            [
                "384a23cf46f3ecba"
            ]
        ]
    },
    {
        "id": "104af077a29300d7",
        "type": "comment",
        "z": "3c1ed78bc6df6cbd",
        "g": "f947e220e412adfe",
        "name": "Modulos comerciais",
        "info": "",
        "x": 210,
        "y": 220,
        "wires": []
    },
    {
        "id": "bef4051a82cbf4bc",
        "type": "comment",
        "z": "3c1ed78bc6df6cbd",
        "g": "4c0c6dfcc390f93f",
        "name": "Modulos PMM",
        "info": "",
        "x": 190,
        "y": 400,
        "wires": []
    },
    {
        "id": "d2ab753d8990c917",
        "type": "link out",
        "z": "3c1ed78bc6df6cbd",
        "g": "f947e220e412adfe",
        "name": "status",
        "mode": "link",
        "links": [
            "5bb329c128359845"
        ],
        "x": 925,
        "y": 300,
        "wires": []
    },
    {
        "id": "00ae605e067a75c3",
        "type": "comment",
        "z": "3c1ed78bc6df6cbd",
        "g": "0372f041345ff56b",
        "name": "Recebimento",
        "info": "",
        "x": 150,
        "y": 140,
        "wires": []
    },
    {
        "id": "d79888a1a7530cc3",
        "type": "comment",
        "z": "3c1ed78bc6df6cbd",
        "g": "07617004c325cdb0",
        "name": "Status",
        "info": "",
        "x": 130,
        "y": 580,
        "wires": []
    },
    {
        "id": "5bb329c128359845",
        "type": "link in",
        "z": "3c1ed78bc6df6cbd",
        "g": "07617004c325cdb0",
        "name": "status",
        "links": [
            "d2ab753d8990c917"
        ],
        "x": 115,
        "y": 640,
        "wires": [
            [
                "590970c68ed4e141"
            ]
        ]
    },
    {
        "id": "88b47616b03f1c45",
        "type": "template",
        "z": "3c1ed78bc6df6cbd",
        "g": "07617004c325cdb0",
        "name": "Conectado",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Conectado",
        "output": "str",
        "x": 390,
        "y": 620,
        "wires": [
            [
                "0123b886a978d9a2"
            ]
        ]
    },
    {
        "id": "590970c68ed4e141",
        "type": "switch",
        "z": "3c1ed78bc6df6cbd",
        "g": "07617004c325cdb0",
        "name": "",
        "property": "payload.client.connected",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 640,
        "wires": [
            [
                "88b47616b03f1c45"
            ],
            [
                "0bf1c5dd8f255c1b"
            ]
        ]
    },
    {
        "id": "0bf1c5dd8f255c1b",
        "type": "template",
        "z": "3c1ed78bc6df6cbd",
        "g": "07617004c325cdb0",
        "name": "Desconectado",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Desconectado",
        "output": "str",
        "x": 400,
        "y": 660,
        "wires": [
            [
                "0123b886a978d9a2"
            ]
        ]
    },
    {
        "id": "2fe173a7cb0a2a40",
        "type": "link in",
        "z": "3c1ed78bc6df6cbd",
        "g": "4f3abbcb43bb4e2e",
        "name": "status out",
        "links": [
            "0123b886a978d9a2",
            "57cf3c526ee8f1d9"
        ],
        "x": 975,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "0123b886a978d9a2",
        "type": "link out",
        "z": "3c1ed78bc6df6cbd",
        "g": "07617004c325cdb0",
        "name": "status out",
        "mode": "link",
        "links": [
            "2fe173a7cb0a2a40"
        ],
        "x": 545,
        "y": 620,
        "wires": []
    },
    {
        "id": "119f2f93adb8552d",
        "type": "link in",
        "z": "3c1ed78bc6df6cbd",
        "g": "4f3abbcb43bb4e2e",
        "name": "out 1",
        "links": [
            "3780a621e1676780"
        ],
        "x": 975,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "3780a621e1676780",
        "type": "link out",
        "z": "3c1ed78bc6df6cbd",
        "g": "f947e220e412adfe",
        "name": "out 1",
        "mode": "link",
        "links": [
            "119f2f93adb8552d"
        ],
        "x": 925,
        "y": 260,
        "wires": []
    },
    {
        "id": "4e6d0bcfdddd096b",
        "type": "comment",
        "z": "3c1ed78bc6df6cbd",
        "g": "4f3abbcb43bb4e2e",
        "name": "MQTT",
        "info": "",
        "x": 90,
        "y": 60,
        "wires": []
    },
    {
        "id": "47cf208a6e77ebea",
        "type": "aedes broker",
        "z": "3c1ed78bc6df6cbd",
        "g": "f947e220e412adfe",
        "name": "",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "persistence_bind": "memory",
        "dburl": "",
        "usetls": false,
        "x": 230,
        "y": 280,
        "wires": [
            [],
            [
                "234edab9ccee349a"
            ]
        ]
    },
    {
        "id": "da0851086569fc3a",
        "type": "json",
        "z": "d85720db46554979",
        "g": "67d25ef121d15f94",
        "name": "convert payload",
        "property": "payload.packet.payload",
        "action": "",
        "pretty": false,
        "x": 260,
        "y": 200,
        "wires": [
            [
                "abc1cc7f685db311"
            ]
        ]
    },
    {
        "id": "abc1cc7f685db311",
        "type": "change",
        "z": "d85720db46554979",
        "g": "67d25ef121d15f94",
        "name": "Reconfiguração",
        "rules": [
            {
                "t": "set",
                "p": "payload.id",
                "pt": "msg",
                "to": "payload.client.id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.topic",
                "pt": "msg",
                "to": "payload.packet.topic",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.variable",
                "pt": "msg",
                "to": "payload.packet.payload.variable",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.value",
                "pt": "msg",
                "to": "payload.packet.payload.value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.unit",
                "pt": "msg",
                "to": "payload.packet.payload.unit",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload.packet",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.client",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 200,
        "wires": [
            [
                "d68cc4b4aa5992ee"
            ]
        ]
    },
    {
        "id": "d68cc4b4aa5992ee",
        "type": "json",
        "z": "d85720db46554979",
        "g": "67d25ef121d15f94",
        "name": "Trasformação String",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 680,
        "y": 200,
        "wires": [
            [
                "5bc332cef7bd68dd"
            ]
        ]
    },
    {
        "id": "8927e4ccf542999d",
        "type": "comment",
        "z": "d85720db46554979",
        "g": "67d25ef121d15f94",
        "name": "Reconfiguração",
        "info": "",
        "x": 160,
        "y": 140,
        "wires": []
    },
    {
        "id": "5bc332cef7bd68dd",
        "type": "link out",
        "z": "d85720db46554979",
        "g": "67d25ef121d15f94",
        "name": "Indentificação de Topico",
        "mode": "link",
        "links": [
            "059a8b0edfc718f5"
        ],
        "x": 845,
        "y": 200,
        "wires": []
    },
    {
        "id": "2b409d0b8bba51cc",
        "type": "json",
        "z": "d85720db46554979",
        "g": "a0a062d88e115230",
        "name": "Recuperação",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 910,
        "y": 380,
        "wires": [
            [
                "c3718ac6037398bd"
            ]
        ]
    },
    {
        "id": "4204ca863fb0bc35",
        "type": "link out",
        "z": "d85720db46554979",
        "g": "a0a062d88e115230",
        "name": "out 1",
        "mode": "link",
        "links": [
            "0ea7eda264f5cec1"
        ],
        "x": 1205,
        "y": 380,
        "wires": []
    },
    {
        "id": "60bdd308296943ef",
        "type": "switch",
        "z": "d85720db46554979",
        "g": "a0a062d88e115230",
        "name": "Identificação fase",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "\"topic\":\"Monofasico\"",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "\"topic\":\"Bifasico\"",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "\"topic\":\"Trifasico\"",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "\"topic\":\"Sensor\"",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 270,
        "y": 380,
        "wires": [
            [
                "7a8f749828a1f658"
            ],
            [
                "9dadcaaf455341da"
            ],
            [
                "dc6a1f322af6636c"
            ],
            []
        ]
    },
    {
        "id": "7a8f749828a1f658",
        "type": "join",
        "z": "d85720db46554979",
        "g": "a0a062d88e115230",
        "name": "Junção Monofasico",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": ",",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 490,
        "y": 340,
        "wires": [
            [
                "61608ffadbbef6dd"
            ]
        ]
    },
    {
        "id": "9dadcaaf455341da",
        "type": "join",
        "z": "d85720db46554979",
        "g": "a0a062d88e115230",
        "name": "Junção Bifasico",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": ",",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "16",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 480,
        "y": 380,
        "wires": [
            [
                "61608ffadbbef6dd"
            ]
        ]
    },
    {
        "id": "dc6a1f322af6636c",
        "type": "join",
        "z": "d85720db46554979",
        "g": "a0a062d88e115230",
        "name": "Junção Trifasico",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": ",",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "39",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 480,
        "y": 420,
        "wires": [
            [
                "61608ffadbbef6dd"
            ]
        ]
    },
    {
        "id": "e25b402cd2b1be3f",
        "type": "comment",
        "z": "d85720db46554979",
        "g": "a0a062d88e115230",
        "name": "Identificação de Topico e junção",
        "info": "",
        "x": 210,
        "y": 300,
        "wires": []
    },
    {
        "id": "059a8b0edfc718f5",
        "type": "link in",
        "z": "d85720db46554979",
        "g": "a0a062d88e115230",
        "name": "Indentificação de Topico",
        "links": [
            "5bc332cef7bd68dd"
        ],
        "x": 115,
        "y": 380,
        "wires": [
            [
                "60bdd308296943ef"
            ]
        ]
    },
    {
        "id": "b805d4cd38d09b54",
        "type": "complete",
        "z": "d85720db46554979",
        "g": "7a08cb8df76eb516",
        "name": "",
        "scope": [
            "2b409d0b8bba51cc"
        ],
        "uncaught": false,
        "x": 170,
        "y": 580,
        "wires": [
            [
                "0f22977e34f796a8"
            ]
        ]
    },
    {
        "id": "0f22977e34f796a8",
        "type": "template",
        "z": "d85720db46554979",
        "g": "7a08cb8df76eb516",
        "name": "processando",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "processando",
        "output": "str",
        "x": 350,
        "y": 580,
        "wires": [
            [
                "9d063926b6edf5b8"
            ]
        ]
    },
    {
        "id": "facec851db25aa60",
        "type": "link in",
        "z": "d85720db46554979",
        "g": "cc9e6cb2286922e2",
        "name": "status",
        "links": [
            "9d063926b6edf5b8",
            "a3e283b23edc1f7f"
        ],
        "x": 1235,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "9d063926b6edf5b8",
        "type": "link out",
        "z": "d85720db46554979",
        "g": "7a08cb8df76eb516",
        "name": "status",
        "mode": "link",
        "links": [
            "facec851db25aa60"
        ],
        "x": 475,
        "y": 580,
        "wires": []
    },
    {
        "id": "87e724c87e97dc97",
        "type": "comment",
        "z": "d85720db46554979",
        "g": "7a08cb8df76eb516",
        "name": "Status",
        "info": "",
        "x": 130,
        "y": 520,
        "wires": []
    },
    {
        "id": "0ea7eda264f5cec1",
        "type": "link in",
        "z": "d85720db46554979",
        "g": "cc9e6cb2286922e2",
        "name": "out 1",
        "links": [
            "4204ca863fb0bc35"
        ],
        "x": 1235,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "87a810e83bc732ce",
        "type": "comment",
        "z": "d85720db46554979",
        "g": "cc9e6cb2286922e2",
        "name": "Tratamento",
        "info": "",
        "x": 110,
        "y": 60,
        "wires": []
    },
    {
        "id": "61608ffadbbef6dd",
        "type": "change",
        "z": "d85720db46554979",
        "g": "a0a062d88e115230",
        "name": "Junção e Alteração",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": ",\"value\":",
                "fromt": "str",
                "to": ":",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "},{",
                "fromt": "str",
                "to": ",",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"P\"",
                "fromt": "str",
                "to": "\"active_power_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"PA\"",
                "fromt": "str",
                "to": "\"active_power_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"PB\"",
                "fromt": "str",
                "to": "\"active_power_B\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"PC\"",
                "fromt": "str",
                "to": "\"active_power_C\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"Q\"",
                "fromt": "str",
                "to": "\"reactive_power_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"QA\"",
                "fromt": "str",
                "to": "\"reactive_power_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"QB\"",
                "fromt": "str",
                "to": "\"reactive_power_B\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"QC\"",
                "fromt": "str",
                "to": "\"reactive_power_C\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"S\"",
                "fromt": "str",
                "to": "\"apparent_power_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"SA\"",
                "fromt": "str",
                "to": "\"apparent_power_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"SB\"",
                "fromt": "str",
                "to": "\"apparent_power_B\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"SC\"",
                "fromt": "str",
                "to": "\"apparent_power_C\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"U\"",
                "fromt": "str",
                "to": "\"voltage_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"UA\"",
                "fromt": "str",
                "to": "\"voltage_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"UB\"",
                "fromt": "str",
                "to": "\"voltage_B\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"UC\"",
                "fromt": "str",
                "to": "\"voltage_C\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"I\"",
                "fromt": "str",
                "to": "\"current_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"IA\"",
                "fromt": "str",
                "to": "\"current_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"IB\"",
                "fromt": "str",
                "to": "\"current_B\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"IC\"",
                "fromt": "str",
                "to": "\"current_C\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"PF\"",
                "fromt": "str",
                "to": "\"power_factor_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"PFA\"",
                "fromt": "str",
                "to": "\"power_factor_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"PFB\"",
                "fromt": "str",
                "to": "\"power_factor_B\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"PFC\"",
                "fromt": "str",
                "to": "\"power_factor_C\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"PGA\"",
                "fromt": "str",
                "to": "\"voltage_current_angle_A\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"PGB\"",
                "fromt": "str",
                "to": "\"voltage_current_angle_B\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"PGC\"",
                "fromt": "str",
                "to": "\"voltage_current_angle_C\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"YUAUB\"",
                "fromt": "str",
                "to": "\"angle_voltage_A_B\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"YUAUC\"",
                "fromt": "str",
                "to": "\"angle_voltage_A_C\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"YUBUC\"",
                "fromt": "str",
                "to": "\"angle_voltage_B_C\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"TPSD\"",
                "fromt": "str",
                "to": "\"temperature\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "\"variable\":\"FREQ\"",
                "fromt": "str",
                "to": "\"frequency\"",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": ",\"variable\":",
                "fromt": "str",
                "to": ",",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 380,
        "wires": [
            [
                "2b409d0b8bba51cc"
            ]
        ]
    },
    {
        "id": "c3718ac6037398bd",
        "type": "change",
        "z": "d85720db46554979",
        "g": "a0a062d88e115230",
        "name": "Remoção",
        "rules": [
            {
                "t": "delete",
                "p": "payload.unit",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.EP",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.EPA",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.EPB",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.EPC",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.EPT",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.EQ",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.EQA",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.EQB",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.EQC",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.EQT",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.PFT",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.PT",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.QT",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.ST",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.IT",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.UT",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 380,
        "wires": [
            [
                "4204ca863fb0bc35"
            ]
        ]
    },
    {
        "id": "b5a171c979c1d14e",
        "type": "comment",
        "z": "96676db9a2f887ed",
        "g": "70d701831511dd80",
        "name": "Tratamento dos dados",
        "info": "",
        "x": 180,
        "y": 140,
        "wires": []
    },
    {
        "id": "bf124cdbf4ec0574",
        "type": "link out",
        "z": "96676db9a2f887ed",
        "g": "70d701831511dd80",
        "name": "out 1",
        "mode": "link",
        "links": [
            "6df9804a629c0736",
            "fd8388a6b3562965"
        ],
        "x": 385,
        "y": 200,
        "wires": []
    },
    {
        "id": "f8e788f202e28034",
        "type": "function",
        "z": "96676db9a2f887ed",
        "g": "70d701831511dd80",
        "name": "Formatação",
        "func": "/*current*/\n/*A*/\nif (typeof msg.payload.current_A != \"undefined\") {\n    if (!Number.isInteger(msg.payload.current_A)) {\n        let sf = (\"\" + (\"\" + msg.payload.current_A).split('.')[1]).length\n        msg.payload.current_A = Math.trunc(msg.payload.current_A * Math.pow(10, sf))\n        msg.payload.current_A_sf = -1 * sf\n    } else\n        msg.payload.current_A_sf = 0\n}else{\n    msg.payload.current_A = 0\n    msg.payload.current_A_sf = 0\n}\n\n/*B*/\nif (typeof msg.payload.current_B != \"undefined\") {\n    if (!Number.isInteger(msg.payload.current_B)) {\n        let sf = (\"\" + (\"\" + msg.payload.current_B).split('.')[1]).length\n        msg.payload.current_B = Math.trunc(msg.payload.current_B * Math.pow(10, sf))\n        msg.payload.current_B_sf = -1 * sf\n    } else\n        msg.payload.current_B_sf = 0\n} else {\n    msg.payload.current_B = 0\n    msg.payload.current_B_sf = 0\n}\n\n/*C*/\nif (typeof msg.payload.current_C != \"undefined\") {\n    if (!Number.isInteger(msg.payload.current_C)) {\n        let sf = (\"\" + (\"\" + msg.payload.current_C).split('.')[1]).length\n        msg.payload.current_C = Math.trunc(msg.payload.current_C * Math.pow(10, sf))\n        msg.payload.current_C_sf = -1 * sf\n    } else\n        msg.payload.current_C_sf = 0\n} else {\n    msg.payload.current_C = 0\n    msg.payload.current_C_sf = 0\n}\n\n/*voltage*/\n/*A*/\nif (typeof msg.payload.voltage_A != \"undefined\") {\n    if (!Number.isInteger(msg.payload.voltage_A)){\n        let sf = (\"\" + (\"\" + msg.payload.voltage_A).split('.')[1]).length\n        msg.payload.voltage_A = Math.trunc(msg.payload.voltage_A * Math.pow(10, sf))\n        msg.payload.voltage_A_sf = -1 * sf\n    }else\n        msg.payload.voltage_A_sf = 0\n} else {\n    msg.payload.voltage_A = 0\n    msg.payload.voltage_A_sf = 0\n}\n\n/*B*/\nif (typeof msg.payload.voltage_B != \"undefined\") {\n    if (!Number.isInteger(msg.payload.voltage_B)) {\n        let sf = (\"\" + (\"\" + msg.payload.voltage_B).split('.')[1]).length\n        msg.payload.voltage_B = Math.trunc(msg.payload.voltage_B * Math.pow(10, sf))\n        msg.payload.voltage_B_sf = -1 * sf\n    } else\n        msg.payload.voltage_B_sf = 0\n} else {\n    msg.payload.voltage_B = 0\n    msg.payload.voltage_B_sf = 0\n}\n\n/*C*/\nif (typeof msg.payload.voltage_C != \"undefined\") {\n    if (!Number.isInteger(msg.payload.voltage_C)) {\n        let sf = (\"\" + (\"\" + msg.payload.voltage_C).split('.')[1]).length\n        msg.payload.voltage_C = Math.trunc(msg.payload.voltage_C * Math.pow(10, sf))\n        msg.payload.voltage_C_sf = -1 * sf\n    } else\n        msg.payload.voltage_C_sf = 0\n} else {\n    msg.payload.voltage_C = 0\n    msg.payload.voltage_C_sf = 0\n}\n\n/*power_factor_A*/\n/*A*/\nif (typeof msg.payload.power_factor_A == \"undefined\" && typeof msg.payload.current_A != \"undefined\")\n    msg.payload.power_factor_A = 0.95\n\n/*B*/\nif (typeof msg.payload.power_factor_B == \"undefined\" && typeof msg.payload.current_B != \"undefined\")\n    msg.payload.power_factor_B = 0.95\n\n/*C*/\nif (typeof msg.payload.power_factor_C == \"undefined\" && typeof msg.payload.current_C != \"undefined\")\n    msg.payload.power_factor_C = 0.95\n\n/*voltage_current_angle*/\n/*A*/\nif (typeof msg.payload.voltage_current_angle_A != \"undefined\") {\n    if (!Number.isInteger(msg.payload.voltage_current_angle_A)) {\n        let sf = (\"\" + (\"\" + msg.payload.voltage_current_angle_A).split('.')[1]).length\n        msg.payload.voltage_current_angle_A = Math.trunc(msg.payload.voltage_current_angle_A * Math.pow(10, sf))\n        msg.payload.voltage_current_angle_A_sf = -1 * sf\n    } else\n        msg.payload.voltage_current_angle_A_sf = 0\n}else if (typeof msg.payload.current_A != \"undefined\"){\n    msg.payload.voltage_current_angle_A = ((Math.acos(msg.payload.power_factor_A) * 180) / Math.PI).toFixed(3)\n    \n    if (!Number.isInteger(msg.payload.voltage_current_angle_A)) {\n        let sf = (\"\" + (\"\" + msg.payload.voltage_current_angle_A).split('.')[1]).length\n        msg.payload.voltage_current_angle_A = Math.trunc(msg.payload.voltage_current_angle_A * Math.pow(10, sf))\n        msg.payload.voltage_current_angle_A_sf = -1 * sf\n    } else\n        msg.payload.voltage_current_angle_A_sf = 0\n}\n\n/*B*/\nif (typeof msg.payload.voltage_current_angle_B != \"undefined\") {\n    if (!Number.isInteger(msg.payload.voltage_current_angle_B)) {\n        let sf = (\"\" + (\"\" + msg.payload.voltage_current_angle_B).split('.')[1]).length\n        msg.payload.voltage_current_angle_B = Math.trunc(msg.payload.voltage_current_angle_B * Math.pow(10, sf))\n        msg.payload.voltage_current_angle_B_sf = -1 * sf\n    } else\n        msg.payload.voltage_current_angle_B_sf = 0\n} else if (typeof msg.payload.current_B != \"undefined\") {\n    msg.payload.voltage_current_angle_B = ((Math.acos(msg.payload.power_factor_B) * 180) / Math.PI).toFixed(3)\n\n    if (!Number.isInteger(msg.payload.voltage_current_angle_B)) {\n        let sf = (\"\" + (\"\" + msg.payload.voltage_current_angle_B).split('.')[1]).length\n        msg.payload.voltage_current_angle_B = Math.trunc(msg.payload.voltage_current_angle_B * Math.pow(10, sf))\n        msg.payload.voltage_current_angle_B_sf = -1 * sf\n    } else\n        msg.payload.voltage_current_angle_B_sf = 0\n} \n\n/*C*/\nif (typeof msg.payload.voltage_current_angle_C != \"undefined\") {\n    if (!Number.isInteger(msg.payload.voltage_current_angle_C)) {\n        let sf = (\"\" + (\"\" + msg.payload.voltage_current_angle_C).split('.')[1]).length\n        msg.payload.voltage_current_angle_C = Math.trunc(msg.payload.voltage_current_angle_C * Math.pow(10, sf))\n        msg.payload.voltage_current_angle_C_sf = -1 * sf\n    } else\n        msg.payload.voltage_current_angle_C_sf = 0\n} else if (typeof msg.payload.current_C != \"undefined\") {\n    msg.payload.voltage_current_angle_C = ((Math.acos(msg.payload.power_factor_C) * 180) / Math.PI).toFixed(3)\n\n    if (!Number.isInteger(msg.payload.voltage_current_angle_C)) {\n        let sf = (\"\" + (\"\" + msg.payload.voltage_current_angle_C).split('.')[1]).length\n        msg.payload.voltage_current_angle_C = Math.trunc(msg.payload.voltage_current_angle_C * Math.pow(10, sf))\n        msg.payload.voltage_current_angle_C_sf = -1 * sf\n    } else\n        msg.payload.voltage_current_angle_C_sf = 0\n} \n\n/*active_power*/\n/*A*/\nif (typeof msg.payload.active_power_A != \"undefined\") {\n    if (!Number.isInteger(msg.payload.active_power_A)) {\n        let sf = (\"\" + (\"\" + msg.payload.active_power_A).split('.')[1]).length\n        msg.payload.active_power_A = Math.trunc(msg.payload.active_power_A * Math.pow(10, sf))\n        msg.payload.active_power_A_sf = -1 * sf\n    } else\n        msg.payload.active_power_A_sf = 0\n} else if (typeof msg.payload.current_A != \"undefined\"){\n    msg.payload.active_power_A = msg.payload.current_A * msg.payload.voltage_A * Math.trunc(msg.payload.power_factor_A*100)\n    msg.payload.active_power_A_sf = msg.payload.current_A_sf + msg.payload.voltage_A_sf - 2\n\n    if (msg.payload.active_power_A == 0)\n        msg.payload.active_power_A_sf = 0\n}\n\n/*B*/\nif (typeof msg.payload.active_power_B != \"undefined\") {\n    if (!Number.isInteger(msg.payload.active_power_B)) {\n        let sf = (\"\" + (\"\" + msg.payload.active_power_B).split('.')[1]).length\n        msg.payload.active_power_B = Math.trunc(msg.payload.active_power_B * Math.pow(10, sf))\n        msg.payload.active_power_B_sf = -1 * sf\n    } else\n        msg.payload.active_power_B_sf = 0\n} else if (typeof msg.payload.current_B != \"undefined\") {\n    msg.payload.active_power_B = msg.payload.current_B * msg.payload.voltage_B * Math.trunc(msg.payload.power_factor_B * 100)\n    msg.payload.active_power_B_sf = msg.payload.current_B_sf + msg.payload.voltage_B_sf - 2\n\n    if (msg.payload.active_power_B == 0)\n        msg.payload.active_power_B_sf = 0\n}\n\n/*C*/\nif (typeof msg.payload.active_power_C != \"undefined\") {\n    if (!Number.isInteger(msg.payload.active_power_C)) {\n        let sf = (\"\" + (\"\" + msg.payload.active_power_C).split('.')[1]).length\n        msg.payload.active_power_C = Math.trunc(msg.payload.active_power_C * Math.pow(10, sf))\n        msg.payload.active_power_C_sf = -1 * sf\n    } else\n        msg.payload.active_power_C_sf = 0\n} else if (typeof msg.payload.current_C != \"undefined\") {\n    msg.payload.active_power_C = msg.payload.current_C * msg.payload.voltage_C * Math.trunc(msg.payload.power_factor_C * 100)\n    msg.payload.active_power_C_sf = msg.payload.current_C_sf + msg.payload.voltage_C_sf - 2\n\n    if (msg.payload.active_power_C == 0)\n        msg.payload.active_power_C_sf = 0\n}\n\n/*apparent_power*/\n/*A*/\nif (typeof msg.payload.apparent_power_A != \"undefined\") {\n    if (!Number.isInteger(msg.payload.apparent_power_A)) {\n        let sf = (\"\" + (\"\" + msg.payload.apparent_power_A).split('.')[1]).length\n        msg.payload.apparent_power_A = Math.trunc(msg.payload.apparent_power_A * Math.pow(10, sf))\n        msg.payload.apparent_power_A_sf = -1 * sf\n    } else\n        msg.payload.apparent_power_A_sf = 0\n}else if (typeof msg.payload.current_A != \"undefined\") {\n    msg.payload.apparent_power_A = ((msg.payload.active_power_A * Math.pow(10, msg.payload.active_power_A_sf)) / msg.payload.power_factor_A).toFixed(5)\n\n    if (!Number.isInteger(msg.payload.apparent_power_A)) {\n        let sf = (\"\" + (\"\" + msg.payload.apparent_power_A).split('.')[1]).length\n        msg.payload.apparent_power_A = Math.trunc(msg.payload.apparent_power_A * Math.pow(10, sf))\n        msg.payload.apparent_power_A_sf = -1 * sf\n    } else\n        msg.payload.apparent_power_A_sf = 0\n}\n\n/*B*/\nif (typeof msg.payload.apparent_power_B != \"undefined\") {\n    if (!Number.isInteger(msg.payload.apparent_power_B)) {\n        let sf = (\"\" + (\"\" + msg.payload.apparent_power_B).split('.')[1]).length\n        msg.payload.apparent_power_B = Math.trunc(msg.payload.apparent_power_B * Math.pow(10, sf))\n        msg.payload.apparent_power_B_sf = -1 * sf\n    } else\n        msg.payload.apparent_power_B_sf = 0\n} else if (typeof msg.payload.current_B != \"undefined\") {\n    msg.payload.apparent_power_B = ((msg.payload.active_power_B * Math.pow(10, msg.payload.active_power_B_sf)) / msg.payload.power_factor_B).toFixed(5)\n\n    if (!Number.isInteger(msg.payload.apparent_power_B)) {\n        let sf = (\"\" + (\"\" + msg.payload.apparent_power_B).split('.')[1]).length\n        msg.payload.apparent_power_B = Math.trunc(msg.payload.apparent_power_B * Math.pow(10, sf))\n        msg.payload.apparent_power_B_sf = -1 * sf\n    } else\n        msg.payload.apparent_power_B_sf = 0\n}\n/*C*/\nif (typeof msg.payload.apparent_power_C != \"undefined\") {\n    if (!Number.isInteger(msg.payload.apparent_power_C)) {\n        let sf = (\"\" + (\"\" + msg.payload.apparent_power_C).split('.')[1]).length\n        msg.payload.apparent_power_C = Math.trunc(msg.payload.apparent_power_C * Math.pow(10, sf))\n        msg.payload.apparent_power_C_sf = -1 * sf\n    } else\n        msg.payload.apparent_power_C_sf = 0\n} else if (typeof msg.payload.current_C != \"undefined\") {\n    msg.payload.apparent_power_C = ((msg.payload.active_power_C * Math.pow(10, msg.payload.active_power_C_sf)) / msg.payload.power_factor_C).toFixed(5)\n\n    if (!Number.isInteger(msg.payload.apparent_power_C)) {\n        let sf = (\"\" + (\"\" + msg.payload.apparent_power_C).split('.')[1]).length\n        msg.payload.apparent_power_C = Math.trunc(msg.payload.apparent_power_C * Math.pow(10, sf))\n        msg.payload.apparent_power_C_sf = -1 * sf\n    } else\n        msg.payload.apparent_power_C_sf = 0\n}\n\n/*reactive_power*/\n/*A*/\nif (typeof msg.payload.reactive_power_A != \"undefined\") {\n    if (!Number.isInteger(msg.payload.reactive_power_A)) {\n        let sf = (\"\" + (\"\" + msg.payload.reactive_power_A).split('.')[1]).length\n        msg.payload.reactive_power_A = Math.trunc(msg.payload.reactive_power_A * Math.pow(10, sf))\n        msg.payload.reactive_power_A_sf = -1 * sf\n    } else\n        msg.payload.reactive_power_A_sf = 0\n} else if (typeof msg.payload.current_A != \"undefined\") {\n    msg.payload.reactive_power_A = (Math.sqrt(Math.pow((msg.payload.apparent_power_A * Math.pow(10, msg.payload.apparent_power_A_sf)), 2) - Math.pow((msg.payload.active_power_A * Math.pow(10, msg.payload.active_power_A_sf)), 2))).toFixed(5)\n    \n    if (!Number.isInteger(msg.payload.reactive_power_A)) {\n        let sf = (\"\" + (\"\" + msg.payload.reactive_power_A).split('.')[1]).length\n        msg.payload.reactive_power_A = Math.trunc(msg.payload.reactive_power_A * Math.pow(10, sf))\n        msg.payload.reactive_power_A_sf = -1 * sf\n    } else\n        msg.payload.reactive_power_A_sf = 0\n        \n    if (msg.payload.reactive_power_A == null || Number.isNaN(msg.payload.reactive_power_A)) {\n        msg.payload.reactive_power_A = 0\n        msg.payload.reactive_power_A_sf = 0\n    }\n} \n\n/*B*/\nif (typeof msg.payload.reactive_power_B != \"undefined\") {\n    if (!Number.isInteger(msg.payload.reactive_power_B)) {\n        let sf = (\"\" + (\"\" + msg.payload.reactive_power_B).split('.')[1]).length\n        msg.payload.reactive_power_B = Math.trunc(msg.payload.reactive_power_B * Math.pow(10, sf))\n        msg.payload.reactive_power_B_sf = -1 * sf\n    } else\n        msg.payload.reactive_power_B_sf = 0\n} else if (typeof msg.payload.current_B != \"undefined\") {\n    msg.payload.reactive_power_B = (Math.sqrt(Math.pow((msg.payload.apparent_power_B * Math.pow(10, msg.payload.apparent_power_B_sf)), 2) - Math.pow((msg.payload.active_power_B * Math.pow(10, msg.payload.active_power_B_sf)), 2))).toFixed(5)\n\n    if (!Number.isInteger(msg.payload.reactive_power_B)) {\n        let sf = (\"\" + (\"\" + msg.payload.reactive_power_B).split('.')[1]).length\n        msg.payload.reactive_power_B = Math.trunc(msg.payload.reactive_power_B * Math.pow(10, sf))\n        msg.payload.reactive_power_B_sf = -1 * sf\n    } else\n        msg.payload.reactive_power_B_sf = 0\n\n    if (msg.payload.reactive_power_B == null || Number.isNaN(msg.payload.reactive_power_B)) {\n        msg.payload.reactive_power_B = 0\n        msg.payload.reactive_power_B_sf = 0\n    }\n}\n\n/*C*/\nif (typeof msg.payload.reactive_power_C != \"undefined\") {\n    if (!Number.isInteger(msg.payload.reactive_power_C)) {\n        let sf = (\"\" + (\"\" + msg.payload.reactive_power_C).split('.')[1]).length\n        msg.payload.reactive_power_C = Math.trunc(msg.payload.reactive_power_C * Math.pow(10, sf))\n        msg.payload.reactive_power_C_sf = -1 * sf\n    } else\n        msg.payload.reactive_power_C_sf = 0\n} else if (typeof msg.payload.current_C != \"undefined\") {\n    msg.payload.reactive_power_C = (Math.sqrt(Math.pow((msg.payload.apparent_power_C * Math.pow(10, msg.payload.apparent_power_C_sf)), 2) - Math.pow((msg.payload.active_power_C * Math.pow(10, msg.payload.active_power_C_sf)), 2))).toFixed(5)\n    if (!Number.isInteger(msg.payload.reactive_power_C)) {\n        let sf = (\"\" + (\"\" + msg.payload.reactive_power_C).split('.')[1]).length\n        msg.payload.reactive_power_C = Math.trunc(msg.payload.reactive_power_C * Math.pow(10, sf))\n        msg.payload.reactive_power_C_sf = -1 * sf\n    } else\n        msg.payload.reactive_power_C_sf = 0\n\n    if (msg.payload.reactive_power_C == null || Number.isNaN(msg.payload.reactive_power_C)) {\n        msg.payload.reactive_power_C = 0\n        msg.payload.reactive_power_C_sf = 0\n    }\n}\n\n/*voltage_lag*/\n/*AB*/\nif (typeof msg.payload.angle_voltage_A_B != \"undefined\") {\n    if (!Number.isInteger(msg.payload.angle_voltage_A_B)) {\n        let sf = (\"\" + (\"\" + msg.payload.angle_voltage_A_B).split('.')[1]).length\n        msg.payload.angle_voltage_A_B = Math.trunc(msg.payload.angle_voltage_A_B * Math.pow(10, sf))\n        msg.payload.angle_voltage_A_B_sf = -1 * sf\n\n        if (msg.payload.angle_voltage_A_B == 0)\n            msg.payload.angle_voltage_A_B_sf = 0\n    }else\n        msg.payload.angle_voltage_A_B_sf = 0\n} else{\n    msg.payload.angle_voltage_A_B = 0   \n    msg.payload.angle_voltage_A_B_sf = 0\n}\n\n/*AC*/\nif (typeof msg.payload.angle_voltage_A_C != \"undefined\") {\n    if (!Number.isInteger(msg.payload.angle_voltage_A_C)) {\n        let sf = (\"\" + (\"\" + msg.payload.angle_voltage_A_C).split('.')[1]).length\n        msg.payload.angle_voltage_A_C = Math.trunc(msg.payload.angle_voltage_A_C * Math.pow(10, sf))\n        msg.payload.angle_voltage_A_C_sf = -1 * sf\n\n        if (msg.payload.angle_voltage_A_C == 0)\n            msg.payload.angle_voltage_A_C_sf = 0\n    } else\n        msg.payload.angle_voltage_A_C_sf = 0\n} else {\n    msg.payload.angle_voltage_A_C = 0\n    msg.payload.angle_voltage_A_C_sf = 0\n}\n\n/*BC*/\nif (typeof msg.payload.angle_voltage_B_C != \"undefined\") {\n    if (!Number.isInteger(msg.payload.angle_voltage_B_C)) {\n        let sf = (\"\" + (\"\" + msg.payload.angle_voltage_B_C).split('.')[1]).length\n        msg.payload.angle_voltage_B_C = Math.trunc(msg.payload.angle_voltage_B_C * Math.pow(10, sf))\n        msg.payload.angle_voltage_B_C_sf = -1 * sf\n\n        if (msg.payload.angle_voltage_B_C == 0)\n            msg.payload.angle_voltage_B_C_sf = 0\n    } else\n        msg.payload.angle_voltage_B_C_sf = 0\n} else {\n    msg.payload.angle_voltage_B_C = 0\n    msg.payload.angle_voltage_B_C_sf = 0\n}\n\n/*temperature*/\nif (typeof msg.payload.temperature != \"undefined\") {\n    if (!Number.isInteger(msg.payload.temperature)) {\n        let sf = (\"\" + (\"\" + msg.payload.temperature).split('.')[1]).length\n        msg.payload.temperature = Math.trunc(msg.payload.temperature * Math.pow(10, sf))\n        msg.payload.temperature_sf = -1 * sf\n\n        if (msg.payload.temperature == 0)\n            msg.payload.temperature_sf = 0\n    } else\n        msg.payload.temperature_sf = 0\n} else {\n    msg.payload.temperature = 0\n    msg.payload.temperature_sf = 0\n}\n\n/*frequency*/\nif (typeof msg.payload.frequency != \"undefined\") {\n    if (!Number.isInteger(msg.payload.frequency)) {\n        let sf = (\"\" + (\"\" + msg.payload.frequency).split('.')[1]).length\n        msg.payload.frequency = Math.trunc(msg.payload.frequency * Math.pow(10, sf))\n        msg.payload.frequency_sf = -1 * sf\n\n        if (msg.payload.frequency == 0)\n            msg.payload.frequency_sf = 0\n    } else\n        msg.payload.frequency_sf = 0\n} else{\n    msg.payload.frequency = 60\n    msg.payload.frequency_sf = 0\n}\n\n/*Verifica Geração*/\nmsg.payload.generation = false;\nif (typeof msg.payload.EPT_G != \"undefined\")\n    if (msg.payload.EPT_G > 0)\n        msg.payload.generation = true;\n        \n/*date_time_stamp*/\nmsg.payload.date_time_stamp = new Date()\nmsg.payload = JSON.parse(JSON.stringify(msg.payload));\n\n/*message_counter*/\nvar count = flow.get(\"count\") || 0\ncount += 1\nflow.set(\"count\", count)\n\nmsg.payload.message_counter     = count\n\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 200,
        "wires": [
            [
                "bf124cdbf4ec0574"
            ]
        ]
    },
    {
        "id": "cec395bda2b21416",
        "type": "function",
        "z": "96676db9a2f887ed",
        "g": "58e8ea5634e5a59c",
        "name": "Zera contador",
        "func": "flow.set(\"count\", 0)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 360,
        "wires": []
    },
    {
        "id": "b1ee4f14f7ef77d7",
        "type": "comment",
        "z": "96676db9a2f887ed",
        "g": "58e8ea5634e5a59c",
        "name": "Contador de mensagens",
        "info": "",
        "x": 190,
        "y": 300,
        "wires": []
    },
    {
        "id": "6df9804a629c0736",
        "type": "link in",
        "z": "96676db9a2f887ed",
        "g": "58e8ea5634e5a59c",
        "name": "contador",
        "links": [
            "bf124cdbf4ec0574"
        ],
        "x": 115,
        "y": 360,
        "wires": [
            [
                "ced64b0b61ea785b"
            ]
        ]
    },
    {
        "id": "ced64b0b61ea785b",
        "type": "switch",
        "z": "96676db9a2f887ed",
        "g": "58e8ea5634e5a59c",
        "name": "verifica zerar",
        "property": "zerar",
        "propertyType": "env",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 360,
        "wires": [
            [
                "cec395bda2b21416"
            ]
        ]
    },
    {
        "id": "fd8388a6b3562965",
        "type": "link in",
        "z": "96676db9a2f887ed",
        "g": "dca8bc654adbbf02",
        "name": "out 1",
        "links": [
            "bf124cdbf4ec0574"
        ],
        "x": 555,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "c06bba404e4a2fc9",
        "type": "comment",
        "z": "96676db9a2f887ed",
        "g": "26d3a3ef0cd6942c",
        "name": "Status",
        "info": "",
        "x": 130,
        "y": 460,
        "wires": []
    },
    {
        "id": "d64a1c0cf361fa3a",
        "type": "template",
        "z": "96676db9a2f887ed",
        "g": "26d3a3ef0cd6942c",
        "name": "Formatada",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Formatando",
        "output": "str",
        "x": 350,
        "y": 520,
        "wires": [
            [
                "b438ff76cfc8718b"
            ]
        ]
    },
    {
        "id": "b438ff76cfc8718b",
        "type": "link out",
        "z": "96676db9a2f887ed",
        "g": "26d3a3ef0cd6942c",
        "name": "status",
        "mode": "link",
        "links": [
            "2c63b29beb296212"
        ],
        "x": 485,
        "y": 520,
        "wires": []
    },
    {
        "id": "2c63b29beb296212",
        "type": "link in",
        "z": "96676db9a2f887ed",
        "g": "dca8bc654adbbf02",
        "name": "link in 2",
        "links": [
            "09a3f46dd176e808",
            "b438ff76cfc8718b",
            "c8372e7ad4bb8539"
        ],
        "x": 555,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "4b0889ab965ab6c9",
        "type": "complete",
        "z": "96676db9a2f887ed",
        "g": "26d3a3ef0cd6942c",
        "name": "",
        "scope": [
            "f8e788f202e28034"
        ],
        "uncaught": false,
        "x": 170,
        "y": 520,
        "wires": [
            [
                "d64a1c0cf361fa3a"
            ]
        ]
    },
    {
        "id": "678d7a8aa9bf1cb0",
        "type": "template",
        "z": "96676db9a2f887ed",
        "g": "26d3a3ef0cd6942c",
        "name": "Contador Zerado",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Contador Zerado",
        "output": "str",
        "x": 370,
        "y": 580,
        "wires": [
            [
                "b438ff76cfc8718b"
            ]
        ]
    },
    {
        "id": "8e6b524a8fa26f7b",
        "type": "complete",
        "z": "96676db9a2f887ed",
        "g": "26d3a3ef0cd6942c",
        "name": "",
        "scope": [
            "cec395bda2b21416"
        ],
        "uncaught": false,
        "x": 170,
        "y": 580,
        "wires": [
            [
                "678d7a8aa9bf1cb0"
            ]
        ]
    },
    {
        "id": "5e9a61f501a537ae",
        "type": "comment",
        "z": "96676db9a2f887ed",
        "g": "dca8bc654adbbf02",
        "name": "Formatação",
        "info": "",
        "x": 110,
        "y": 60,
        "wires": []
    },
    {
        "id": "040b6a5ede07d37a",
        "type": "change",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "cria msg.power (ABC)",
        "rules": [
            {
                "t": "set",
                "p": "power",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 580,
        "wires": [
            [
                "2e54fe5b50f57275"
            ]
        ]
    },
    {
        "id": "b8b248e6b297058e",
        "type": "change",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "cria msg.temperatura",
        "rules": [
            {
                "t": "set",
                "p": "temperatura",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 500,
        "wires": [
            [
                "93a3cde39b8c838e"
            ]
        ]
    },
    {
        "id": "4146eef348897bce",
        "type": "change",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "cria msg.voltagelag (ABC)",
        "rules": [
            {
                "t": "set",
                "p": "voltagelag",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 740,
        "wires": [
            [
                "db1e626491b2a83e"
            ]
        ]
    },
    {
        "id": "ed47f52f20f57955",
        "type": "change",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "cria msg.frequency",
        "rules": [
            {
                "t": "set",
                "p": "frequency",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 660,
        "wires": [
            [
                "e660f2d49a4bf0e9"
            ]
        ]
    },
    {
        "id": "6d8a9ccc15e60714",
        "type": "change",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "cria msg.energy (ABC)",
        "rules": [
            {
                "t": "set",
                "p": "energy",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 820,
        "wires": [
            [
                "e0d9949e09da892e"
            ]
        ]
    },
    {
        "id": "ba1f97dd5f403313",
        "type": "link in",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "Medições",
        "links": [
            "9bfc3d9edad16b68",
            "afc6b0f34df689eb",
            "bb6117245d83f20a"
        ],
        "x": 125,
        "y": 420,
        "wires": [
            [
                "90f2c3953bed557b"
            ]
        ]
    },
    {
        "id": "70b196f4f67d2827",
        "type": "comment",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "Pega todas as medições",
        "info": "",
        "x": 190,
        "y": 360,
        "wires": []
    },
    {
        "id": "5e4cafb618979765",
        "type": "link in",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "frequency",
        "links": [
            "5ab8c0a121cf0e58"
        ],
        "x": 125,
        "y": 660,
        "wires": [
            [
                "806b6a2b8268ae9a"
            ]
        ]
    },
    {
        "id": "ecfe55630da4601a",
        "type": "link in",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "power",
        "links": [
            "ce589cab12b8ce60"
        ],
        "x": 125,
        "y": 580,
        "wires": [
            [
                "7f8a305189528e4d"
            ]
        ]
    },
    {
        "id": "49df46e372d3ac33",
        "type": "link in",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "sensor",
        "links": [
            "923afcad2bcd1102"
        ],
        "x": 125,
        "y": 500,
        "wires": [
            [
                "4d39129c6fe22d90"
            ]
        ]
    },
    {
        "id": "0551cf9e18d8a383",
        "type": "link in",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "voltage_lag",
        "links": [
            "4a30e1429a444611"
        ],
        "x": 125,
        "y": 740,
        "wires": [
            [
                "e5ac913d52d84837"
            ]
        ]
    },
    {
        "id": "9d02f39318aa5afe",
        "type": "link in",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "energy",
        "links": [
            "177c08d34f1153ed"
        ],
        "x": 125,
        "y": 820,
        "wires": [
            [
                "b1a42583f0a435ce"
            ]
        ]
    },
    {
        "id": "923afcad2bcd1102",
        "type": "link out",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "frequency",
        "mode": "link",
        "links": [
            "d5483a424d414257",
            "49df46e372d3ac33"
        ],
        "x": 655,
        "y": 460,
        "wires": []
    },
    {
        "id": "8b608e41ee328872",
        "type": "link in",
        "z": "38d792f0bb10ea75",
        "g": "89a4ae0a1259ce03",
        "name": "status",
        "links": [
            "786bc2d4f569466a",
            "d15eb528c28e6139",
            "e279f7dad76b662c",
            "a3dbbf5b8b6484c9"
        ],
        "x": 885,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "96c098e745d45eec",
        "type": "comment",
        "z": "38d792f0bb10ea75",
        "g": "d9a0266626dfcca2",
        "name": "Status",
        "info": "",
        "x": 130,
        "y": 1120,
        "wires": []
    },
    {
        "id": "786bc2d4f569466a",
        "type": "link out",
        "z": "38d792f0bb10ea75",
        "g": "d9a0266626dfcca2",
        "name": "status Atualizando",
        "mode": "link",
        "links": [
            "8b608e41ee328872"
        ],
        "x": 485,
        "y": 1180,
        "wires": []
    },
    {
        "id": "f4a4d0a6a0b35a18",
        "type": "template",
        "z": "38d792f0bb10ea75",
        "g": "d9a0266626dfcca2",
        "name": "Finalizado",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Finalizado",
        "output": "str",
        "x": 350,
        "y": 1180,
        "wires": [
            [
                "786bc2d4f569466a"
            ]
        ]
    },
    {
        "id": "552eb00e07d89be4",
        "type": "complete",
        "z": "38d792f0bb10ea75",
        "g": "d9a0266626dfcca2",
        "name": "",
        "scope": [
            "e0d9949e09da892e",
            "66736d34fe8ddb6f"
        ],
        "uncaught": false,
        "x": 170,
        "y": 1180,
        "wires": [
            [
                "f4a4d0a6a0b35a18"
            ]
        ]
    },
    {
        "id": "e0919e2a7130b098",
        "type": "comment",
        "z": "38d792f0bb10ea75",
        "g": "89a4ae0a1259ce03",
        "name": "Sincroniza o banco remoto com os dados do banco local",
        "info": "",
        "x": 250,
        "y": 60,
        "wires": []
    },
    {
        "id": "4e40d269f48f470d",
        "type": "function",
        "z": "38d792f0bb10ea75",
        "g": "a6925304338a38ce",
        "name": "cria msg.last_remoto",
        "func": "msg.last_remoto = JSON.parse(JSON.stringify(msg.payload[0]))\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 200,
        "wires": [
            [
                "86e73473a3e214d1"
            ]
        ]
    },
    {
        "id": "1aa5af6032edc5ab",
        "type": "function",
        "z": "38d792f0bb10ea75",
        "g": "a6925304338a38ce",
        "name": "cria msg.last_local",
        "func": "try{\n    msg.last_local = JSON.parse(JSON.stringify(msg.payload[0]))\n\n\n    if (msg.last_local.date_time_stamp > msg.last_remoto.date_time_stamp){\n        global.set(\"sincronizando_remoto\", true)\n        return msg;\n    }else {\n        global.set(\"sincronizando_remoto\", false)\n    }\n} catch(e){}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 260,
        "wires": [
            [
                "bb6117245d83f20a"
            ]
        ]
    },
    {
        "id": "56c099c98ad9eaf9",
        "type": "comment",
        "z": "38d792f0bb10ea75",
        "g": "a6925304338a38ce",
        "name": "Verifica date",
        "info": "",
        "x": 150,
        "y": 140,
        "wires": []
    },
    {
        "id": "bb6117245d83f20a",
        "type": "link out",
        "z": "38d792f0bb10ea75",
        "g": "a6925304338a38ce",
        "name": "Peda ID",
        "mode": "link",
        "links": [
            "56cbc3bbb98268cc",
            "3ff4cb22301e51c7",
            "ba1f97dd5f403313"
        ],
        "x": 875,
        "y": 260,
        "wires": []
    },
    {
        "id": "32bbe25fe1a9a945",
        "type": "function",
        "z": "38d792f0bb10ea75",
        "g": "a6925304338a38ce",
        "name": "central_id",
        "func": "msg.central_id  = env.get('central_id')\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 200,
        "wires": [
            [
                "6afd3e63d4bc7b0a"
            ]
        ]
    },
    {
        "id": "66736d34fe8ddb6f",
        "type": "change",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "cria msg.measurement",
        "rules": [
            {
                "t": "set",
                "p": "measurement",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 420,
        "wires": [
            [
                "e66406cdf13ec4db"
            ]
        ]
    },
    {
        "id": "e66406cdf13ec4db",
        "type": "switch",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 710,
        "y": 420,
        "wires": [
            [
                "5803a221c220798a",
                "dcc7c6f584808cce"
            ]
        ]
    },
    {
        "id": "d6356c3a4ded65df",
        "type": "link in",
        "z": "38d792f0bb10ea75",
        "g": "a6925304338a38ce",
        "name": "Medições",
        "links": [
            "23c4238d8da6f334",
            "5bfe929015aec041"
        ],
        "x": 285,
        "y": 240,
        "wires": [
            [
                "6afd3e63d4bc7b0a"
            ]
        ]
    },
    {
        "id": "e660f2d49a4bf0e9",
        "type": "function",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "instancia Frequency",
        "func": "msg.payload = \"\"\n\n// Frequency\nif (typeof msg.frequency != \"undefined\")\n    for (let frequency of JSON.parse(JSON.stringify(msg.frequency)))\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_frequencymeasure(frequency, frequency_sf, measurement_id) VALUES(\" + \n            frequency.frequency + \", \" + frequency.frequency_sf + \n            \", (SELECT id FROM public.organic_nodes_control_measurement WHERE(date_time_stamp = '\" + frequency.date_time_stamp + \"') LIMIT 1));\"\n            \nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 700,
        "wires": [
            [
                "4a30e1429a444611"
            ]
        ]
    },
    {
        "id": "93a3cde39b8c838e",
        "type": "function",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "instancia Temperature",
        "func": "msg.payload = \"\"\n\n// Temperature\nif (typeof msg.temperatura != \"undefined\")\n    for (let temperatura of JSON.parse(JSON.stringify(msg.temperatura)))\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_temperaturemeasurement(temperature, temperature_sf, measurement_id) VALUES(\" +\n            temperatura.temperature + \", \" + temperatura.temperature_sf + \n            \", (SELECT id FROM public.organic_nodes_control_measurement WHERE(date_time_stamp = '\" + temperatura.date_time_stamp + \"') LIMIT 1));\"\n\nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 540,
        "wires": [
            [
                "ce589cab12b8ce60"
            ]
        ]
    },
    {
        "id": "e0d9949e09da892e",
        "type": "function",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "instancia Energy",
        "func": "msg.payload = \"\"\n\n// Energy\nif (typeof msg.energy != \"undefined\")\n    for (let energy of JSON.parse(JSON.stringify(msg.energy)))\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_energymeasure(phase, current, current_sf, voltage, voltage_sf, measurement_id)VALUES('\" + \n            energy.phase + \"', \" + energy.current + \", \" + energy.current_sf + \", \" + energy.voltage + \", \" + energy.voltage_sf + \n            \", (SELECT id FROM public.organic_nodes_control_measurement WHERE(date_time_stamp = '\" + energy.date_time_stamp + \"') LIMIT 1));\"\n\nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 860,
        "wires": [
            [
                "5bfe929015aec041"
            ]
        ]
    },
    {
        "id": "2e54fe5b50f57275",
        "type": "function",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "instancia Power",
        "func": "msg.payload = \"\"\n\n// Power\nif (typeof msg.power != \"undefined\") \n    for (let power of JSON.parse(JSON.stringify(msg.power)))\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_powermeasure(phase, voltage_current_angle, voltage_current_angle_sf, power_factor, active_power, active_power_sf, reactive_power, reactive_power_sf, apparent_power, apparent_power_sf, measurement_id)VALUES('\" \n            + power.phase + \"', \" + power.voltage_current_angle + \", \" + power.voltage_current_angle_sf + \", \" + power.power_factor + \", \" + power.active_power + \", \" + power.active_power_sf + \", \" + power.reactive_power + \", \" + power.reactive_power_sf + \", \" + power.apparent_power + \", \" + power.apparent_power_sf + \n            \", (SELECT id FROM public.organic_nodes_control_measurement WHERE(date_time_stamp = '\" + power.date_time_stamp + \"') LIMIT 1));\"\n\nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 620,
        "wires": [
            [
                "5ab8c0a121cf0e58"
            ]
        ]
    },
    {
        "id": "db1e626491b2a83e",
        "type": "function",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "instancia Voltage lag",
        "func": "msg.payload = \"\"\n\n// Voltage lag\nif (typeof msg.voltagelag != \"undefined\") \n    for (let voltagelag of JSON.parse(JSON.stringify(msg.voltagelag)))\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_voltagelagmeasure(angle, angle_sf, phase_combination, measurement_id)VALUES(\" +\n            voltagelag.angle + \", \" + voltagelag.angle_sf + \", '\" + voltagelag.phase_combination + \n            \"', (SELECT id FROM public.organic_nodes_control_measurement WHERE(date_time_stamp = '\" + voltagelag.date_time_stamp + \"') LIMIT 1));\"\n\nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 780,
        "wires": [
            [
                "177c08d34f1153ed"
            ]
        ]
    },
    {
        "id": "92e389294835402c",
        "type": "template",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "Sincronizado",
        "field": "payload",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "Sincronizando - {{payload}}",
        "output": "str",
        "x": 710,
        "y": 380,
        "wires": [
            [
                "a3dbbf5b8b6484c9"
            ]
        ]
    },
    {
        "id": "a3dbbf5b8b6484c9",
        "type": "link out",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "status Atualizando",
        "mode": "link",
        "links": [
            "8b608e41ee328872"
        ],
        "x": 835,
        "y": 380,
        "wires": []
    },
    {
        "id": "5803a221c220798a",
        "type": "function",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "date",
        "func": "msg.payload = JSON.parse(JSON.stringify(msg.measurement[msg.measurement.length - 1].date_time_stamp))\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 380,
        "wires": [
            [
                "92e389294835402c"
            ]
        ]
    },
    {
        "id": "dcc7c6f584808cce",
        "type": "function",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "instancia medição",
        "func": "msg.payload = \"\"\n\n// Measurement\nfor (let measurement of JSON.parse(JSON.stringify(msg.measurement)))\n    msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_measurement (date_time_stamp, message_counter, setup_id, source, generation) VALUES('\" + \n    measurement.date_time_stamp + \"', \" + measurement.message_counter + \", \" + measurement.setup_id + \", \" + measurement.source + \", \" + measurement.generation + \");\"\n    \nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 460,
        "wires": [
            [
                "923afcad2bcd1102"
            ]
        ]
    },
    {
        "id": "b1febcc17f2ba6b1",
        "type": "comment",
        "z": "38d792f0bb10ea75",
        "g": "d7f7f53f51e446ae",
        "name": "Adiciona medições ao Banco remoto",
        "info": "",
        "x": 220,
        "y": 960,
        "wires": []
    },
    {
        "id": "d5483a424d414257",
        "type": "link in",
        "z": "38d792f0bb10ea75",
        "g": "d7f7f53f51e446ae",
        "name": "banco",
        "links": [
            "5bfe929015aec041",
            "177c08d34f1153ed",
            "ce589cab12b8ce60",
            "5ab8c0a121cf0e58",
            "4a30e1429a444611",
            "923afcad2bcd1102"
        ],
        "x": 115,
        "y": 1020,
        "wires": [
            [
                "5b38f4be3fe9e5b4"
            ]
        ]
    },
    {
        "id": "5bfe929015aec041",
        "type": "link out",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "banco",
        "mode": "link",
        "links": [
            "d5483a424d414257",
            "d6356c3a4ded65df"
        ],
        "x": 655,
        "y": 860,
        "wires": []
    },
    {
        "id": "177c08d34f1153ed",
        "type": "link out",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "energy",
        "mode": "link",
        "links": [
            "9d02f39318aa5afe",
            "d5483a424d414257"
        ],
        "x": 655,
        "y": 780,
        "wires": []
    },
    {
        "id": "ce589cab12b8ce60",
        "type": "link out",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "voltage_lag",
        "mode": "link",
        "links": [
            "d5483a424d414257",
            "ecfe55630da4601a"
        ],
        "x": 655,
        "y": 540,
        "wires": []
    },
    {
        "id": "5ab8c0a121cf0e58",
        "type": "link out",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "sensor",
        "mode": "link",
        "links": [
            "d5483a424d414257",
            "5e4cafb618979765"
        ],
        "x": 655,
        "y": 620,
        "wires": []
    },
    {
        "id": "4a30e1429a444611",
        "type": "link out",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "power",
        "mode": "link",
        "links": [
            "d5483a424d414257",
            "0551cf9e18d8a383"
        ],
        "x": 655,
        "y": 700,
        "wires": []
    },
    {
        "id": "52f86d2dc966b620",
        "type": "catch",
        "z": "38d792f0bb10ea75",
        "g": "d9a0266626dfcca2",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 160,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "86e73473a3e214d1",
        "type": "postgresql",
        "z": "38d792f0bb10ea75",
        "g": "a6925304338a38ce",
        "name": "Data ultima medição local",
        "query": "SELECT id, date_time_stamp \nFROM public.organic_nodes_control_measurement\nWHERE setup_id \nIN (\n    Select id \n    from public.organic_nodes_control_setup \n    where central_id = '{{msg.central_id}}'\n    )\nORDER BY date_time_stamp \nDESC LIMIT 1;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 470,
        "y": 260,
        "wires": [
            [
                "1aa5af6032edc5ab"
            ]
        ]
    },
    {
        "id": "90f2c3953bed557b",
        "type": "postgresql",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "Pega medição",
        "query": "SELECT *\nFROM public.organic_nodes_control_measurement\nWHERE setup_id \nIN (\n    Select id \n    from public.organic_nodes_control_setup \n    where central_id = '{{msg.central_id}}'\n    ) \nAND date_time_stamp > '{{msg.last_remoto.date_time_stamp}}'\nORDER BY id \nASC LIMIT 10;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 260,
        "y": 420,
        "wires": [
            [
                "66736d34fe8ddb6f"
            ]
        ]
    },
    {
        "id": "806b6a2b8268ae9a",
        "type": "postgresql",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "Pega frequency",
        "query": "with t as (\n\tSELECT *\n\tFROM public.organic_nodes_control_measurement\n\tWHERE setup_id \n\tIN (\n\t\tSelect id \n\t\tfrom public.organic_nodes_control_setup \n\t\twhere central_id = '{{msg.central_id}}'\n\t\t) \n\tAND date_time_stamp > '{{msg.last_remoto.date_time_stamp}}'\n\tORDER BY id \n\tASC LIMIT 10\n)\n\nSELECT f.*, t.date_time_stamp\nFROM public.organic_nodes_control_frequencymeasure AS f\nJOIN t ON f.measurement_id = t.id;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 260,
        "y": 660,
        "wires": [
            [
                "ed47f52f20f57955"
            ]
        ]
    },
    {
        "id": "7f8a305189528e4d",
        "type": "postgresql",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "Pega power",
        "query": "with t as (\n\tSELECT *\n\tFROM public.organic_nodes_control_measurement\n\tWHERE setup_id \n\tIN (\n\t\tSelect id \n\t\tfrom public.organic_nodes_control_setup \n\t\twhere central_id = '{{msg.central_id}}'\n\t\t) \n\tAND date_time_stamp > '{{msg.last_remoto.date_time_stamp}}'\n\tORDER BY id \n\tASC LIMIT 10\n)\n\nSELECT p.*, t.date_time_stamp\nFROM public.organic_nodes_control_powermeasure AS p\nJOIN t ON p.measurement_id = t.id;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 250,
        "y": 580,
        "wires": [
            [
                "040b6a5ede07d37a"
            ]
        ]
    },
    {
        "id": "4d39129c6fe22d90",
        "type": "postgresql",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "Pega temperature",
        "query": "with t as (\n\tSELECT *\n\tFROM public.organic_nodes_control_measurement\n\tWHERE setup_id \n\tIN (\n\t\tSelect id \n\t\tfrom public.organic_nodes_control_setup \n\t\twhere central_id = '{{msg.central_id}}'\n\t\t) \n\tAND date_time_stamp > '{{msg.last_remoto.date_time_stamp}}'\n\tORDER BY id \n\tASC LIMIT 10\n)\n\nSELECT temp.*, t.date_time_stamp\nFROM public.organic_nodes_control_temperaturemeasurement AS temp\nJOIN t ON temp.measurement_id = t.id;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 270,
        "y": 500,
        "wires": [
            [
                "b8b248e6b297058e"
            ]
        ]
    },
    {
        "id": "e5ac913d52d84837",
        "type": "postgresql",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "Pega voltagelag",
        "query": "with t as (\n\tSELECT *\n\tFROM public.organic_nodes_control_measurement\n\tWHERE setup_id \n\tIN (\n\t\tSelect id \n\t\tfrom public.organic_nodes_control_setup \n\t\twhere central_id = '{{msg.central_id}}'\n\t\t) \n\tAND date_time_stamp > '{{msg.last_remoto.date_time_stamp}}'\n\tORDER BY id \n\tASC LIMIT 10\n)\n\nSELECT v.*, t.date_time_stamp\nFROM public.organic_nodes_control_voltagelagmeasure AS v\nJOIN t ON v.measurement_id = t.id;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 260,
        "y": 740,
        "wires": [
            [
                "4146eef348897bce"
            ]
        ]
    },
    {
        "id": "b1a42583f0a435ce",
        "type": "postgresql",
        "z": "38d792f0bb10ea75",
        "g": "52c66abdf3919c1f",
        "name": "Pega energy",
        "query": "with t as (\n\tSELECT *\n\tFROM public.organic_nodes_control_measurement\n\tWHERE setup_id \n\tIN (\n\t\tSelect id \n\t\tfrom public.organic_nodes_control_setup \n\t\twhere central_id = '{{msg.central_id}}'\n\t\t) \n\tAND date_time_stamp > '{{msg.last_remoto.date_time_stamp}}'\n\tORDER BY id \n\tASC LIMIT 10\n)\n\nSELECT e.*, t.date_time_stamp\nFROM public.organic_nodes_control_energymeasure AS e\nJOIN t ON e.measurement_id = t.id;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 250,
        "y": 820,
        "wires": [
            [
                "6d8a9ccc15e60714"
            ]
        ]
    },
    {
        "id": "6afd3e63d4bc7b0a",
        "type": "postgresql",
        "z": "38d792f0bb10ea75",
        "g": "a6925304338a38ce",
        "name": "Data ultima medição remota",
        "query": "SELECT id, date_time_stamp \nFROM public.organic_nodes_control_measurement\nWHERE setup_id \nIN (\n    Select id \n    from public.organic_nodes_control_setup \n    where central_id = '{{msg.central_id}}'\n    )\nORDER BY date_time_stamp \nDESC LIMIT 1;",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 460,
        "y": 200,
        "wires": [
            [
                "4e40d269f48f470d"
            ]
        ]
    },
    {
        "id": "5b38f4be3fe9e5b4",
        "type": "postgresql",
        "z": "38d792f0bb10ea75",
        "g": "d7f7f53f51e446ae",
        "name": "NOCS",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 230,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "426d5b10c47cee7e",
        "type": "debug",
        "z": "38d792f0bb10ea75",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1200,
        "wires": []
    },
    {
        "id": "ce7641387fce5d30",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "709f9014691197e8",
        "name": "organic_nodes_control_setup",
        "info": "",
        "x": 200,
        "y": 3860,
        "wires": []
    },
    {
        "id": "bdae3c5d2cd207a4",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "240bcd834eb33cf7",
        "name": "organic_nodes_control_area",
        "info": "",
        "x": 200,
        "y": 1440,
        "wires": []
    },
    {
        "id": "d01f398fa34b84e6",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "e7f10f45daeaf688",
        "name": "core_registration_company",
        "info": "",
        "x": 190,
        "y": 1220,
        "wires": []
    },
    {
        "id": "a09a5266c9e37d51",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "14955f02aa0317be",
        "name": "core_registration_city",
        "info": "",
        "x": 180,
        "y": 1000,
        "wires": []
    },
    {
        "id": "d9470f58dda5f7f6",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "84114652054927ee",
        "name": "core_registration_state",
        "info": "",
        "x": 180,
        "y": 780,
        "wires": []
    },
    {
        "id": "d74dffa819f73129",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "53383e8862e9b803",
        "name": "core_registration_country",
        "info": "",
        "x": 190,
        "y": 560,
        "wires": []
    },
    {
        "id": "8dfaa3f341d5e07a",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "a8c438ba71c0a43f",
        "name": "core_access_user",
        "info": "",
        "x": 170,
        "y": 340,
        "wires": []
    },
    {
        "id": "96973cfa9742df19",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "498764931f4b71aa",
        "name": "Entrada",
        "info": "",
        "x": 130,
        "y": 140,
        "wires": []
    },
    {
        "id": "cbed0e82daa4b5c2",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "a8c438ba71c0a43f",
        "name": "access_user",
        "links": [
            "105b7358fbc1c293",
            "199e644b24cd4bf6",
            "6ff7d2857d1edcbc"
        ],
        "x": 115,
        "y": 400,
        "wires": [
            [
                "4ba1e29a17d4625b"
            ]
        ]
    },
    {
        "id": "199e644b24cd4bf6",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "498764931f4b71aa",
        "name": "loop",
        "mode": "link",
        "links": [
            "08d5038231a82483",
            "1dbcec2c2e281356",
            "1e3e8e8b79c1d1b1",
            "4212ca74f6fe6925",
            "4eb69295d4e3be47",
            "55d44e3a3b6f493a",
            "6063254271dbe2f8",
            "67a1237aa8db2ef2",
            "68c2dd9382fd801d",
            "93167eaf02c78a30",
            "c2e208e816e1214d",
            "c4b96ca4567898b7",
            "cbed0e82daa4b5c2",
            "ceab5f64bb45b087",
            "d06c2278f6cdc2f2",
            "d28711ca27a38fcf",
            "d637ab39ad04abc3",
            "dfb1adba836ad9e6",
            "f0a6c3c22ff49c34"
        ],
        "x": 335,
        "y": 200,
        "wires": []
    },
    {
        "id": "dfb1adba836ad9e6",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "84114652054927ee",
        "name": "state",
        "links": [
            "45d280528d1b4dfb",
            "199e644b24cd4bf6",
            "6ff7d2857d1edcbc"
        ],
        "x": 115,
        "y": 840,
        "wires": [
            [
                "97ae9adc20fdda10"
            ]
        ]
    },
    {
        "id": "67a1237aa8db2ef2",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "14955f02aa0317be",
        "name": "city",
        "links": [
            "cb34236a415a64dd",
            "199e644b24cd4bf6",
            "6ff7d2857d1edcbc"
        ],
        "x": 115,
        "y": 1060,
        "wires": [
            [
                "b563a069690530dc"
            ]
        ]
    },
    {
        "id": "55d44e3a3b6f493a",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "e7f10f45daeaf688",
        "name": "company",
        "links": [
            "9af565314439fc4e",
            "199e644b24cd4bf6",
            "6ff7d2857d1edcbc"
        ],
        "x": 115,
        "y": 1280,
        "wires": [
            [
                "b98efcbbf56da6df"
            ]
        ]
    },
    {
        "id": "08d5038231a82483",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "240bcd834eb33cf7",
        "name": "area",
        "links": [
            "4aa12f5df2e22995",
            "199e644b24cd4bf6",
            "6ff7d2857d1edcbc"
        ],
        "x": 115,
        "y": 1500,
        "wires": [
            [
                "22ba8158696087fb"
            ]
        ]
    },
    {
        "id": "4212ca74f6fe6925",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "709f9014691197e8",
        "name": "setup",
        "links": [
            "2819e3062c0ec390",
            "199e644b24cd4bf6",
            "6ff7d2857d1edcbc"
        ],
        "x": 115,
        "y": 3920,
        "wires": [
            [
                "f36b3565ee8dd644"
            ]
        ]
    },
    {
        "id": "089d3b8db42feef7",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "28709fc7768f4c7f",
        "name": "organic_nodes_control_circuit",
        "info": "",
        "x": 200,
        "y": 3200,
        "wires": []
    },
    {
        "id": "1dbcec2c2e281356",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "28709fc7768f4c7f",
        "name": "circuit",
        "links": [
            "42b2aefe8a793e53",
            "199e644b24cd4bf6",
            "6ff7d2857d1edcbc"
        ],
        "x": 115,
        "y": 3260,
        "wires": [
            [
                "a8cad4718add655d"
            ]
        ]
    },
    {
        "id": "1ecd0e844e8ebbfd",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "408c191f95cb3007",
        "name": "organic_nodes_control_mqttdevice",
        "info": "",
        "x": 220,
        "y": 4300,
        "wires": []
    },
    {
        "id": "1fc7984f3151b51e",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "4a661830d296a9f8",
        "name": "organic_nodes_control_mqttaccess",
        "info": "",
        "x": 220,
        "y": 4080,
        "wires": []
    },
    {
        "id": "b2add571b6f01571",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "f41dbc6febc7f940",
        "name": "organic_nodes_control_hardware",
        "info": "",
        "x": 210,
        "y": 1660,
        "wires": []
    },
    {
        "id": "a93ac6f89eb0111a",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "5a6ed92c41528bb0",
        "name": "organic_nodes_control_firmware",
        "info": "",
        "x": 210,
        "y": 1880,
        "wires": []
    },
    {
        "id": "ab0ce47ba2fbdaf0",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "cee982dc38904cdb",
        "name": "organic_nodes_control_devicesetup",
        "info": "",
        "x": 220,
        "y": 2100,
        "wires": []
    },
    {
        "id": "b192aebf24178f75",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "c3167a56125bb451",
        "name": "organic_nodes_control_devicecompany",
        "info": "",
        "x": 230,
        "y": 2320,
        "wires": []
    },
    {
        "id": "bf814a7a27f37484",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "a1f79c2e32ad7c7a",
        "name": "organic_nodes_control_devicetype",
        "info": "",
        "x": 220,
        "y": 2540,
        "wires": []
    },
    {
        "id": "d73e12e0b0355aee",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "af65b1cf913c581f",
        "name": "organic_nodes_control_device",
        "info": "",
        "x": 200,
        "y": 2760,
        "wires": []
    },
    {
        "id": "4ee0c7b002fbb548",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "27233bf2b30dc86e",
        "name": "organic_nodes_control_monitoreddevice",
        "info": "",
        "x": 240,
        "y": 2980,
        "wires": []
    },
    {
        "id": "68c2dd9382fd801d",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "f41dbc6febc7f940",
        "name": "hardware",
        "links": [
            "ca76449609927f3a",
            "199e644b24cd4bf6",
            "6ff7d2857d1edcbc"
        ],
        "x": 115,
        "y": 1720,
        "wires": [
            [
                "f59c7a4c85be083c"
            ]
        ]
    },
    {
        "id": "1e3e8e8b79c1d1b1",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "5a6ed92c41528bb0",
        "name": "firmware",
        "links": [
            "2ecea0a103eac8af",
            "199e644b24cd4bf6",
            "6ff7d2857d1edcbc"
        ],
        "x": 115,
        "y": 1940,
        "wires": [
            [
                "0fcaa9dc996ba593"
            ]
        ]
    },
    {
        "id": "d28711ca27a38fcf",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "cee982dc38904cdb",
        "name": "devicesetup",
        "links": [
            "0f55a45b5d4722e1",
            "199e644b24cd4bf6",
            "6ff7d2857d1edcbc"
        ],
        "x": 115,
        "y": 2160,
        "wires": [
            [
                "941c31c96190ed36"
            ]
        ]
    },
    {
        "id": "ceab5f64bb45b087",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "c3167a56125bb451",
        "name": "devicecompany",
        "links": [
            "93df8599ad612ec7",
            "199e644b24cd4bf6",
            "6ff7d2857d1edcbc"
        ],
        "x": 115,
        "y": 2380,
        "wires": [
            [
                "0a27bc8e8b32fc2c"
            ]
        ]
    },
    {
        "id": "c2e208e816e1214d",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "a1f79c2e32ad7c7a",
        "name": "devicetype",
        "links": [
            "2027e5a5f226d68c",
            "199e644b24cd4bf6",
            "6ff7d2857d1edcbc"
        ],
        "x": 115,
        "y": 2600,
        "wires": [
            [
                "e5bb5167cc42ddfb"
            ]
        ]
    },
    {
        "id": "4eb69295d4e3be47",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "af65b1cf913c581f",
        "name": "device",
        "links": [
            "9188e3a48d2a39be",
            "199e644b24cd4bf6",
            "6ff7d2857d1edcbc"
        ],
        "x": 115,
        "y": 2820,
        "wires": [
            [
                "339d0b2ef3b413f6"
            ]
        ]
    },
    {
        "id": "d637ab39ad04abc3",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "27233bf2b30dc86e",
        "name": "monitoreddevice",
        "links": [
            "36e393322517e0b9",
            "199e644b24cd4bf6",
            "6ff7d2857d1edcbc"
        ],
        "x": 115,
        "y": 3040,
        "wires": [
            [
                "8d2cf2d35b9ed765"
            ]
        ]
    },
    {
        "id": "d06c2278f6cdc2f2",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "4a661830d296a9f8",
        "name": "mqttaccess",
        "links": [
            "0266a853038f15ee",
            "199e644b24cd4bf6",
            "6ff7d2857d1edcbc"
        ],
        "x": 115,
        "y": 4140,
        "wires": [
            [
                "23e1ccc4f64dd082"
            ]
        ]
    },
    {
        "id": "6063254271dbe2f8",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "408c191f95cb3007",
        "name": "mqttdevice",
        "links": [
            "cd564a67b7af70f5",
            "199e644b24cd4bf6",
            "6ff7d2857d1edcbc"
        ],
        "x": 115,
        "y": 4360,
        "wires": [
            [
                "48f13be0aab9673e"
            ]
        ]
    },
    {
        "id": "105b7358fbc1c293",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "a8c438ba71c0a43f",
        "name": "access_user",
        "mode": "link",
        "links": [
            "cbed0e82daa4b5c2"
        ],
        "x": 1135,
        "y": 460,
        "wires": []
    },
    {
        "id": "e58fa1f7bf9f8550",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "a8c438ba71c0a43f",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nfor (let index = 0; index < 100; index++) {\n    const access_user_nocs = JSON.parse(JSON.stringify(msg.nocs))[index]\n    const access_user_local = JSON.parse(JSON.stringify(msg.local))[index]\n    \n    if (typeof access_user_local != \"undefined\"){\n        if (typeof access_user_nocs == \"undefined\") // Deleta dados no banco caso o não existam no remoto\n            msg.payload = msg.payload + \"DELETE FROM public.core_access_user WHERE id = \" + access_user_local.id +\";\"\n        else if (JSON.stringify(access_user_nocs) != JSON.stringify(access_user_local)) // Atualiza dados no banco local caso ele exista\n            msg.payload = msg.payload + \"UPDATE public.core_access_user SET id = \" + access_user_nocs.id + \", password = '-' , last_login = '2023-03-06 15:59:09.823184-03', is_superuser = \" + access_user_nocs.is_superuser + \", username = '\" + access_user_nocs.username + \"', first_name = '\" + access_user_nocs.first_name + \"', last_name = '\" + access_user_nocs.last_name + \"', email = '\" + access_user_nocs.email + \"', is_staff = \" + access_user_nocs.is_staff + \", is_active = \" + access_user_nocs.is_active + \", date_joined = '\" + access_user_nocs.date_joined + \"', cpf = '\" + access_user_nocs.cpf + \"', telephone = '\" + access_user_nocs.telephone + \"' WHERE id = \"+access_user_local.id+\";\"\n    }\n    else if (typeof access_user_nocs != \"undefined\") // Cria dados no banco caso eles não existão\n        msg.payload = msg.payload + \"INSERT INTO public.core_access_user VALUES(\" + access_user_nocs.id + \", '-' , '2023-03-06 15:59:09.823184-03', \" + access_user_nocs.is_superuser + \", '\" + access_user_nocs.username + \"', '\" + access_user_nocs.first_name + \"', '\" + access_user_nocs.last_name + \"', '\" + access_user_nocs.email + \"', \" + access_user_nocs.is_staff + \", \" + access_user_nocs.is_active + \", '\" + access_user_nocs.date_joined + \"', '\" + access_user_nocs.cpf + \"', '\" + access_user_nocs.telephone + \"');\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 460,
        "wires": [
            [
                "36af044387884685",
                "9563ba90d9215170"
            ]
        ]
    },
    {
        "id": "f2da1fd75e931b7e",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "53383e8862e9b803",
        "name": "country",
        "mode": "link",
        "links": [
            "c4b96ca4567898b7"
        ],
        "x": 1135,
        "y": 680,
        "wires": []
    },
    {
        "id": "4ba1e29a17d4625b",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "a8c438ba71c0a43f",
        "name": "Start offset",
        "func": "msg.offset = global.get(\"access_user\")\n\nif (typeof msg.offset == \"undefined\"){\n    global.set(\"access_user\", 0)\n    msg.offset = 0\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 400,
        "wires": [
            [
                "ef75f3514328cd17"
            ]
        ]
    },
    {
        "id": "45d280528d1b4dfb",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "84114652054927ee",
        "name": "state",
        "mode": "link",
        "links": [
            "dfb1adba836ad9e6"
        ],
        "x": 1135,
        "y": 900,
        "wires": []
    },
    {
        "id": "cb34236a415a64dd",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "14955f02aa0317be",
        "name": "city",
        "mode": "link",
        "links": [
            "67a1237aa8db2ef2"
        ],
        "x": 1135,
        "y": 1120,
        "wires": []
    },
    {
        "id": "9af565314439fc4e",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "e7f10f45daeaf688",
        "name": "company",
        "mode": "link",
        "links": [
            "55d44e3a3b6f493a"
        ],
        "x": 1135,
        "y": 1340,
        "wires": []
    },
    {
        "id": "4aa12f5df2e22995",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "240bcd834eb33cf7",
        "name": "area",
        "mode": "link",
        "links": [
            "08d5038231a82483"
        ],
        "x": 1135,
        "y": 1560,
        "wires": []
    },
    {
        "id": "ca76449609927f3a",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "f41dbc6febc7f940",
        "name": "hardware",
        "mode": "link",
        "links": [
            "68c2dd9382fd801d"
        ],
        "x": 1135,
        "y": 1780,
        "wires": []
    },
    {
        "id": "2ecea0a103eac8af",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "5a6ed92c41528bb0",
        "name": "firmware",
        "mode": "link",
        "links": [
            "1e3e8e8b79c1d1b1"
        ],
        "x": 1135,
        "y": 2000,
        "wires": []
    },
    {
        "id": "0f55a45b5d4722e1",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "cee982dc38904cdb",
        "name": "devicesetup",
        "mode": "link",
        "links": [
            "d28711ca27a38fcf"
        ],
        "x": 1135,
        "y": 2220,
        "wires": []
    },
    {
        "id": "93df8599ad612ec7",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "c3167a56125bb451",
        "name": "devicecompany",
        "mode": "link",
        "links": [
            "ceab5f64bb45b087"
        ],
        "x": 1135,
        "y": 2440,
        "wires": []
    },
    {
        "id": "2027e5a5f226d68c",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "a1f79c2e32ad7c7a",
        "name": "devicetype",
        "mode": "link",
        "links": [
            "c2e208e816e1214d"
        ],
        "x": 1135,
        "y": 2660,
        "wires": []
    },
    {
        "id": "9188e3a48d2a39be",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "af65b1cf913c581f",
        "name": "device",
        "mode": "link",
        "links": [
            "4eb69295d4e3be47"
        ],
        "x": 1135,
        "y": 2880,
        "wires": []
    },
    {
        "id": "36e393322517e0b9",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "27233bf2b30dc86e",
        "name": "monitoreddevice",
        "mode": "link",
        "links": [
            "d637ab39ad04abc3"
        ],
        "x": 1135,
        "y": 3100,
        "wires": []
    },
    {
        "id": "42b2aefe8a793e53",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "28709fc7768f4c7f",
        "name": "circuit",
        "mode": "link",
        "links": [
            "1dbcec2c2e281356"
        ],
        "x": 1135,
        "y": 3320,
        "wires": []
    },
    {
        "id": "2819e3062c0ec390",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "709f9014691197e8",
        "name": "setup",
        "mode": "link",
        "links": [
            "4212ca74f6fe6925"
        ],
        "x": 1135,
        "y": 3980,
        "wires": []
    },
    {
        "id": "0266a853038f15ee",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "4a661830d296a9f8",
        "name": "mqttaccess",
        "mode": "link",
        "links": [
            "d06c2278f6cdc2f2"
        ],
        "x": 1135,
        "y": 4200,
        "wires": []
    },
    {
        "id": "cd564a67b7af70f5",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "408c191f95cb3007",
        "name": "mqttdevice",
        "mode": "link",
        "links": [
            "6063254271dbe2f8"
        ],
        "x": 1135,
        "y": 4420,
        "wires": []
    },
    {
        "id": "f5a1ee040838f147",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "f56b1859406935eb",
        "name": "Status",
        "info": "",
        "x": 130,
        "y": 4520,
        "wires": []
    },
    {
        "id": "618bc920dedea369",
        "type": "template",
        "z": "ba2e913aeb86a3ea",
        "g": "f56b1859406935eb",
        "name": "Atualizando",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Atualizando...",
        "output": "str",
        "x": 350,
        "y": 4580,
        "wires": [
            [
                "dc3b128908422624"
            ]
        ]
    },
    {
        "id": "dc3b128908422624",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "f56b1859406935eb",
        "name": "status Atualizando",
        "mode": "link",
        "links": [
            "3ad75db1d1e689f2"
        ],
        "x": 485,
        "y": 4580,
        "wires": []
    },
    {
        "id": "53e88746ad15d7a1",
        "type": "complete",
        "z": "ba2e913aeb86a3ea",
        "g": "f56b1859406935eb",
        "name": "",
        "scope": [
            "c6b85b8c2ea6269e",
            "99814e0e6070de17",
            "3574797015d06eb5",
            "b04e027a31b064c9",
            "06c64d2de231457c",
            "9885143b467005f6",
            "0d0fecc4674660ee",
            "d29e247425cbdb63",
            "5a37981b0b87b961",
            "df797988d7880a2b",
            "0bf4651d4e56a56b",
            "aa4df2b0c9be27fb",
            "3494d54734219a7b",
            "c6c8aa73f182ec79",
            "117c66decf94ec8c",
            "e59714b709552c49",
            "302c4a48e6208894",
            "8115d6131ec3fd07",
            "51f727f4ce50e655",
            "195c1eca51232af3",
            "8ddad3cfeac2b761",
            "75e023ec7e8f678d",
            "db0bab0fa0b144aa",
            "dd0fb0d9cbc16793",
            "f6dd27d11911b50d",
            "97a29af29ac8edf1",
            "7b3746bebb7df33a",
            "93edf3e6f07d6b91",
            "b51f05f0ecc233c2",
            "bd93b4160da4b12c",
            "34ea2652bc0a5b44",
            "09e1e99bd9d147c0",
            "5fdf34eb607cf650",
            "925a7c6ea1991a36",
            "9cd3914a5e266d1f"
        ],
        "uncaught": false,
        "x": 170,
        "y": 4580,
        "wires": [
            [
                "618bc920dedea369"
            ]
        ]
    },
    {
        "id": "d04604ecc6637529",
        "type": "template",
        "z": "ba2e913aeb86a3ea",
        "g": "f56b1859406935eb",
        "name": "Finalizado",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Finalizado",
        "output": "str",
        "x": 350,
        "y": 4640,
        "wires": [
            [
                "dc3b128908422624"
            ]
        ]
    },
    {
        "id": "d9dfd6334355e3e0",
        "type": "complete",
        "z": "ba2e913aeb86a3ea",
        "g": "f56b1859406935eb",
        "name": "",
        "scope": [
            "5c4bec19b5308a36",
            "4272d6c7aae0211d",
            "019f5dfdcb3403e7",
            "f9b8ac18eb652e46",
            "7ea589c7b65673ad",
            "e0b3c97216fd707f",
            "85d264a5ba2b6485",
            "ea3f55e2ec5df622",
            "66307c3131656cb7",
            "05c2a5a4b19c7178",
            "f9907a4c8664da93",
            "34d669944dc1f7f2",
            "0993cd6b4bfe5004",
            "661212b02ba49f94",
            "afdbc99d43bb27f5",
            "37b33a3af2fa229a",
            "e58fa1f7bf9f8550"
        ],
        "uncaught": false,
        "x": 170,
        "y": 4640,
        "wires": [
            [
                "d04604ecc6637529"
            ]
        ]
    },
    {
        "id": "3ad75db1d1e689f2",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "name": "status",
        "links": [
            "257e65e651a12260",
            "4b54f36dc2249de7",
            "dc3b128908422624"
        ],
        "x": 1275,
        "y": 4660,
        "wires": [
            []
        ]
    },
    {
        "id": "2853a7f0ee76f7f1",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "name": "Responsavel por manter as tabelas locais sincronizadas com as remotas",
        "info": "",
        "x": 300,
        "y": 60,
        "wires": []
    },
    {
        "id": "3921b65f469ae086",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "a8c438ba71c0a43f",
        "name": "Zera",
        "func": "global.set(\"access_user\", 0)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 380,
        "wires": []
    },
    {
        "id": "b647f3942cbd6254",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "a8c438ba71c0a43f",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 400,
        "wires": [
            [
                "5c73b81e188d9ac2"
            ]
        ]
    },
    {
        "id": "cd5c218ee9c6205a",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "a8c438ba71c0a43f",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 460,
        "wires": [
            [
                "e58fa1f7bf9f8550"
            ]
        ]
    },
    {
        "id": "c4b96ca4567898b7",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "53383e8862e9b803",
        "name": "country",
        "links": [
            "f2da1fd75e931b7e",
            "199e644b24cd4bf6",
            "6ff7d2857d1edcbc"
        ],
        "x": 115,
        "y": 620,
        "wires": [
            [
                "7e433f88e96e41eb"
            ]
        ]
    },
    {
        "id": "7e433f88e96e41eb",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "53383e8862e9b803",
        "name": "Start offset",
        "func": "msg.offset = global.get(\"country\")\n\nif (typeof msg.offset == \"undefined\"){\n    global.set(\"country\", 0)\n    msg.offset = 0\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 620,
        "wires": [
            [
                "f649396824a36178"
            ]
        ]
    },
    {
        "id": "d0a2c2703adcc983",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "53383e8862e9b803",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 620,
        "wires": [
            [
                "0e184ddd3a0c00c0"
            ]
        ]
    },
    {
        "id": "8a11ee839a0979da",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "53383e8862e9b803",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 680,
        "wires": [
            [
                "5a3caea94c3651a7"
            ]
        ]
    },
    {
        "id": "5a3caea94c3651a7",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "53383e8862e9b803",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nfor (let index = 0; index < 100; index++) {\n    const country_nocs = JSON.parse(JSON.stringify(msg.nocs))[index]\n    const country_local = JSON.parse(JSON.stringify(msg.local))[index]\n    \n    if (typeof country_nocs != \"undefined\")\n        var description = country_nocs.description.replace(/'/g, \"''\");\n\n    if (typeof country_local != \"undefined\") {\n        if (typeof country_nocs == \"undefined\") // Deleta dados no banco caso o não existam no remoto\n            msg.payload = msg.payload + \"DELETE FROM public.core_registration_country WHERE id = \" + country_local.id + \";\"\n        else if (JSON.stringify(country_nocs) != JSON.stringify(country_local)) // Atualiza dados no banco local caso ele exista\n            msg.payload = msg.payload + \"UPDATE public.core_registration_country SET id = \" + country_nocs.id + \", description = '\" + description + \"' WHERE id = \" + country_local.id + \";\"\n    }\n    else if (typeof country_nocs != \"undefined\") // Cria dados no banco caso eles não existão\n        msg.payload = msg.payload + \"INSERT INTO public.core_registration_country VALUES(\" + country_nocs.id + \", '\" + description + \"');\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 680,
        "wires": [
            [
                "3ad4e65ea27962e9",
                "31f3f9935cb4f352"
            ]
        ]
    },
    {
        "id": "d14a279303962827",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "53383e8862e9b803",
        "name": "Zera",
        "func": "global.set(\"country\", 0)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 600,
        "wires": []
    },
    {
        "id": "019f5dfdcb3403e7",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "709f9014691197e8",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nfor (let index = 0; index < 100; index++) {\n    const setup_nocs = JSON.parse(JSON.stringify(msg.nocs))[index]\n    const setup_local = JSON.parse(JSON.stringify(msg.local))[index]\n\n    if (typeof setup_nocs != \"undefined\") {\n        var description = setup_nocs.description.replace(/'/g, \"\\'\");\n    }\n\n    if (typeof setup_local != \"undefined\") {\n        if (typeof setup_nocs == \"undefined\") // Deleta dados no banco caso o não existam no remoto\n            msg.payload = msg.payload + \"DELETE FROM public.organic_nodes_control_setup WHERE id = \" + setup_local.id + \";\"\n        else if (JSON.stringify(setup_nocs) != JSON.stringify(setup_local)) // Atualiza dados no banco local caso ele exista\n            msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_setup SET id = \" + setup_nocs.id + \", date_setup = '\" + setup_nocs.date_setup + \"', status = '\" + setup_nocs.status + \"', description = '\" + description + \"', area_id = \" + setup_nocs.area_id + \", circuit_id = \" + setup_nocs.circuit_id + \", device_id = \" + setup_nocs.device_id + \", monitored_device_id = \" + setup_nocs.monitored_device_id + \", central_id = \" + setup_nocs.central_id + \" WHERE id = \" + setup_local.id + \";\"\n    }\n    else if (typeof setup_nocs != \"undefined\") // Cria dados no banco caso eles não existão\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_setup VALUES(\" + setup_nocs.id + \", '\" + setup_nocs.date_setup + \"', '\" + setup_nocs.status + \"', '\" + description + \"', \" + setup_nocs.area_id + \", \" + setup_nocs.circuit_id + \", \" + setup_nocs.device_id + \", \" + setup_nocs.monitored_device_id + \", \" + setup_nocs.central_id + \");\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 3980,
        "wires": [
            [
                "2a1aeab4bd948f2a",
                "f4be6594b8091b7c"
            ]
        ]
    },
    {
        "id": "97ae9adc20fdda10",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "84114652054927ee",
        "name": "Start offset",
        "func": "msg.offset = global.get(\"state\")\n\nif (typeof msg.offset == \"undefined\"){\n    global.set(\"state\", 0)\n    msg.offset = 0\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 840,
        "wires": [
            [
                "4fd97f3c436aa12b"
            ]
        ]
    },
    {
        "id": "e458e99a72602419",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "84114652054927ee",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 840,
        "wires": [
            [
                "601ed41a32f7b1c7"
            ]
        ]
    },
    {
        "id": "5bd7dec67038c80a",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "84114652054927ee",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 900,
        "wires": [
            [
                "66b972ccb44c57ca"
            ]
        ]
    },
    {
        "id": "b29bcebac97bdcf5",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "84114652054927ee",
        "name": "Zera",
        "func": "global.set(\"state\", 0)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 820,
        "wires": []
    },
    {
        "id": "b563a069690530dc",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "14955f02aa0317be",
        "name": "Start offset",
        "func": "msg.offset = global.get(\"city\")\n\nif (typeof msg.offset == \"undefined\"){\n    global.set(\"city\", 0)\n    msg.offset = 0\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1060,
        "wires": [
            [
                "234d63d07a766d1b"
            ]
        ]
    },
    {
        "id": "2ea116986217b6b5",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "14955f02aa0317be",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1060,
        "wires": [
            [
                "ff9355116873d642"
            ]
        ]
    },
    {
        "id": "0d272e145cf9e77f",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "14955f02aa0317be",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1120,
        "wires": [
            [
                "60315ce943dfadcc"
            ]
        ]
    },
    {
        "id": "4c9ec412a893312b",
        "type": "switch",
        "z": "ba2e913aeb86a3ea",
        "g": "14955f02aa0317be",
        "name": "",
        "property": "payload[0].count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "city",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 1060,
        "wires": [
            [
                "3d4ded5bafc2789e"
            ],
            [
                "cb34236a415a64dd",
                "582b718ead86ec49"
            ]
        ]
    },
    {
        "id": "3d4ded5bafc2789e",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "14955f02aa0317be",
        "name": "Zera",
        "func": "global.set(\"city\", 0)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1040,
        "wires": []
    },
    {
        "id": "b98efcbbf56da6df",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "e7f10f45daeaf688",
        "name": "Start offset",
        "func": "msg.offset = global.get(\"company\")\n\nif (typeof msg.offset == \"undefined\"){\n    global.set(\"company\", 0)\n    msg.offset = 0\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1280,
        "wires": [
            [
                "dee7f3574781e050"
            ]
        ]
    },
    {
        "id": "a5413bd94ea89539",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "e7f10f45daeaf688",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1280,
        "wires": [
            [
                "c8f90973dea69e83"
            ]
        ]
    },
    {
        "id": "7e96cf05721102ca",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "e7f10f45daeaf688",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1340,
        "wires": [
            [
                "109d8d57f28bd0a8"
            ]
        ]
    },
    {
        "id": "e05ad0dcd8d0af70",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "e7f10f45daeaf688",
        "name": "Zera",
        "func": "global.set(\"company\", 0)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1260,
        "wires": []
    },
    {
        "id": "22ba8158696087fb",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "240bcd834eb33cf7",
        "name": "Start offset",
        "func": "msg.offset = global.get(\"area\")\n\nif (typeof msg.offset == \"undefined\"){\n    global.set(\"area\", 0)\n    msg.offset = 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1500,
        "wires": [
            [
                "861b42de0290b1e4"
            ]
        ]
    },
    {
        "id": "f481fe5b4421ebe6",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "240bcd834eb33cf7",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1500,
        "wires": [
            [
                "469fb031045ac616"
            ]
        ]
    },
    {
        "id": "74ade0d27636133a",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "240bcd834eb33cf7",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1560,
        "wires": [
            [
                "8899a3ad7242ec32"
            ]
        ]
    },
    {
        "id": "03d87c8ebc066a96",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "240bcd834eb33cf7",
        "name": "Zera",
        "func": "global.set(\"area\", 0)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1480,
        "wires": []
    },
    {
        "id": "f59c7a4c85be083c",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "f41dbc6febc7f940",
        "name": "Start offset",
        "func": "msg.offset = global.get(\"hardware\")\n\nif (typeof msg.offset == \"undefined\"){\n    global.set(\"hardware\", 0)\n    msg.offset = 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1720,
        "wires": [
            [
                "21c7a908db22bc3a"
            ]
        ]
    },
    {
        "id": "4bb9ccd58662dc9a",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "f41dbc6febc7f940",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1720,
        "wires": [
            [
                "f2f9afc18d31bd34"
            ]
        ]
    },
    {
        "id": "61a3c53120148a48",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "f41dbc6febc7f940",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1780,
        "wires": [
            [
                "21bfdd6cb6dc2c22"
            ]
        ]
    },
    {
        "id": "0ed079d2659a6eab",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "f41dbc6febc7f940",
        "name": "Zera",
        "func": "global.set(\"hardware\", 0)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1700,
        "wires": []
    },
    {
        "id": "0fcaa9dc996ba593",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "5a6ed92c41528bb0",
        "name": "Start offset",
        "func": "msg.offset = global.get(\"firmware\")\n\nif (typeof msg.offset == \"undefined\"){\n    global.set(\"firmware\", 0)\n    msg.offset = 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1940,
        "wires": [
            [
                "06bbae300c2adbf2"
            ]
        ]
    },
    {
        "id": "722aaaee01661a51",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "5a6ed92c41528bb0",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1940,
        "wires": [
            [
                "3ac6187a8a83bab3"
            ]
        ]
    },
    {
        "id": "32e16135e1e0107f",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "5a6ed92c41528bb0",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 2000,
        "wires": [
            [
                "88d970917f492191"
            ]
        ]
    },
    {
        "id": "826b3342825de03c",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "5a6ed92c41528bb0",
        "name": "Zera",
        "func": "global.set(\"firmware\", 0)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1920,
        "wires": []
    },
    {
        "id": "941c31c96190ed36",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "cee982dc38904cdb",
        "name": "Start offset",
        "func": "msg.offset = global.get(\"devicesetup\")\n\nif (typeof msg.offset == \"undefined\"){\n    global.set(\"devicesetup\", 0)\n    msg.offset = 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 2160,
        "wires": [
            [
                "cb0567464daab6c1"
            ]
        ]
    },
    {
        "id": "1db90311e4f74f4a",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "cee982dc38904cdb",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 2160,
        "wires": [
            [
                "7508e67f3853f139"
            ]
        ]
    },
    {
        "id": "a79abf3192c43784",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "cee982dc38904cdb",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 2220,
        "wires": [
            [
                "cc5d225d719d7343"
            ]
        ]
    },
    {
        "id": "c8dc5dd52562c662",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "cee982dc38904cdb",
        "name": "Zera",
        "func": "global.set(\"devicesetup\", 0)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 2140,
        "wires": []
    },
    {
        "id": "0a27bc8e8b32fc2c",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "c3167a56125bb451",
        "name": "Start offset",
        "func": "msg.offset = global.get(\"devicecompany\")\n\nif (typeof msg.offset == \"undefined\"){\n    global.set(\"devicecompany\", 0)\n    msg.offset = 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 2380,
        "wires": [
            [
                "2a88500f7575a211"
            ]
        ]
    },
    {
        "id": "d627d7b6724ba95a",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "c3167a56125bb451",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 2380,
        "wires": [
            [
                "4df0e2029eb96f33"
            ]
        ]
    },
    {
        "id": "9b59b52798c817e5",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "c3167a56125bb451",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 2440,
        "wires": [
            [
                "966e92a9336395e4"
            ]
        ]
    },
    {
        "id": "e9362e7f3c2fc5d9",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "c3167a56125bb451",
        "name": "Zera",
        "func": "global.set(\"devicecompany\", 0)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 2360,
        "wires": []
    },
    {
        "id": "e5bb5167cc42ddfb",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "a1f79c2e32ad7c7a",
        "name": "Start offset",
        "func": "msg.offset = global.get(\"devicetype\")\n\nif (typeof msg.offset == \"undefined\"){\n    global.set(\"devicetype\", 0)\n    msg.offset = 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 2600,
        "wires": [
            [
                "8cfea906416f9471"
            ]
        ]
    },
    {
        "id": "f7cc577f7636de41",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "a1f79c2e32ad7c7a",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 2600,
        "wires": [
            [
                "d28eda873efb0f16"
            ]
        ]
    },
    {
        "id": "b47431ad9fac00a9",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "a1f79c2e32ad7c7a",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 2660,
        "wires": [
            [
                "04c3dba32d7af993"
            ]
        ]
    },
    {
        "id": "65083aa2bad271b1",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "a1f79c2e32ad7c7a",
        "name": "Zera",
        "func": "global.set(\"devicetype\", 0)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 2580,
        "wires": []
    },
    {
        "id": "339d0b2ef3b413f6",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "af65b1cf913c581f",
        "name": "Start offset",
        "func": "msg.offset = global.get(\"device\")\n\nif (typeof msg.offset == \"undefined\"){\n    global.set(\"device\", 0)\n    msg.offset = 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 2820,
        "wires": [
            [
                "bceb699c0b897603"
            ]
        ]
    },
    {
        "id": "d95c9f9a1522b4e5",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "af65b1cf913c581f",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 2820,
        "wires": [
            [
                "84e615d5a0916ad6"
            ]
        ]
    },
    {
        "id": "f1c863a7324d4bb6",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "af65b1cf913c581f",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 2880,
        "wires": [
            [
                "3adab46062d74a1c"
            ]
        ]
    },
    {
        "id": "68f005cdbe70be44",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "af65b1cf913c581f",
        "name": "Zera",
        "func": "global.set(\"device\", 0)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 2800,
        "wires": []
    },
    {
        "id": "8d2cf2d35b9ed765",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "27233bf2b30dc86e",
        "name": "Start offset",
        "func": "msg.offset = global.get(\"monitoreddevice\")\n\nif (typeof msg.offset == \"undefined\"){\n    global.set(\"monitoreddevice\", 0)\n    msg.offset = 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 3040,
        "wires": [
            [
                "4154ce6de80c590d"
            ]
        ]
    },
    {
        "id": "ddb2a6458b699216",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "27233bf2b30dc86e",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 3040,
        "wires": [
            [
                "716bc1e85058519b"
            ]
        ]
    },
    {
        "id": "282ebc181d21e648",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "27233bf2b30dc86e",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 3100,
        "wires": [
            [
                "1d97c80b117e92e6"
            ]
        ]
    },
    {
        "id": "8d951fc7ca90bac9",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "27233bf2b30dc86e",
        "name": "Zera",
        "func": "global.set(\"monitoreddevice\", 0)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 3020,
        "wires": []
    },
    {
        "id": "a8cad4718add655d",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "28709fc7768f4c7f",
        "name": "Start offset",
        "func": "msg.offset = global.get(\"circuit\")\n\nif (typeof msg.offset == \"undefined\"){\n    global.set(\"circuit\", 0)\n    msg.offset = 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 3260,
        "wires": [
            [
                "d094e569846f9466"
            ]
        ]
    },
    {
        "id": "f374049ef45f87f1",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "28709fc7768f4c7f",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 3260,
        "wires": [
            [
                "7d026183464eed1b"
            ]
        ]
    },
    {
        "id": "3c107fdc2b012131",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "28709fc7768f4c7f",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 3320,
        "wires": [
            [
                "090a8fada3cddceb"
            ]
        ]
    },
    {
        "id": "32f4bf6d0d2fd316",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "28709fc7768f4c7f",
        "name": "Zera",
        "func": "global.set(\"circuit\", 0)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 3240,
        "wires": []
    },
    {
        "id": "66b972ccb44c57ca",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "84114652054927ee",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nfor (let index = 0; index < 100; index++) {\n    const state_nocs = JSON.parse(JSON.stringify(msg.nocs))[index]\n    const state_local = JSON.parse(JSON.stringify(msg.local))[index]\n    \n    if (typeof state_nocs != \"undefined\")\n        var description = state_nocs.description.replace(/'/g, \"''\");\n        \n    if (typeof state_local != \"undefined\") {\n        if (typeof state_nocs == \"undefined\") // Deleta dados no banco caso o não existam no remoto\n            msg.payload = msg.payload + \"DELETE FROM public.core_registration_state WHERE id = \" + state_local.id + \";\"\n        else if (JSON.stringify(state_nocs) != JSON.stringify(state_local)) // Atualiza dados no banco local caso ele exista\n            msg.payload = msg.payload + \"UPDATE public.core_registration_state SET id = \" + state_nocs.id + \", description = '\" + description + \"', acronym = '\" + state_nocs.acronym + \"', country_id = \" + state_nocs.country_id + \" WHERE id = \" + state_local.id + \";\"\n    }\n    else if (typeof state_nocs != \"undefined\") // Cria dados no banco caso eles não existão\n        msg.payload = msg.payload + \"INSERT INTO public.core_registration_state VALUES(\" + state_nocs.id + \", '\" + description + \"', '\" + state_nocs.acronym + \"', \" + state_nocs.country_id + \");\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 900,
        "wires": [
            [
                "aae528061b51fe89",
                "ba3e902349e264be"
            ]
        ]
    },
    {
        "id": "60315ce943dfadcc",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "14955f02aa0317be",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nfor (let index = 0; index < 100; index++) {\n    const city_nocs = JSON.parse(JSON.stringify(msg.nocs))[index]\n    const city_local = JSON.parse(JSON.stringify(msg.local))[index]\n\n    if (typeof city_nocs != \"undefined\")\n        var description = city_nocs.description.replace(/'/g, \"''\");\n\n    if (typeof city_local != \"undefined\") {\n        if (typeof city_nocs == \"undefined\") // Deleta dados no banco caso o não existam no remoto\n            msg.payload = msg.payload + \"DELETE FROM public.core_registration_city WHERE id = \" + city_local.id + \";\"\n        else if (JSON.stringify(city_nocs) != JSON.stringify(city_local)) // Atualiza dados no banco local caso ele exista\n            msg.payload = msg.payload + \"UPDATE public.core_registration_city SET id = \" + city_nocs.id + \", description = '\" + description + \"', state_id = \" + city_nocs.state_id + \" WHERE id = \" + city_local.id + \";\"\n    }\n    else if (typeof city_nocs != \"undefined\") // Cria dados no banco caso eles não existão\n        msg.payload = msg.payload + \"INSERT INTO public.core_registration_city VALUES(\" + city_nocs.id + \", '\" + description + \"', \" + city_nocs.state_id + \");\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1120,
        "wires": [
            [
                "785259ae610fd3e0",
                "3f683224044753f1"
            ]
        ]
    },
    {
        "id": "109d8d57f28bd0a8",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "e7f10f45daeaf688",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nfor (let index = 0; index < 100; index++) {\n    const company_nocs = JSON.parse(JSON.stringify(msg.nocs))[index]\n    const company_local = JSON.parse(JSON.stringify(msg.local))[index]\n    \n    if (typeof company_nocs != \"undefined\"){\n        var description = company_nocs.description.replace(/'/g, \"\\'\");\n        var address     = company_nocs.address.replace(/'/g, \"\\'\");\n    }\n    \n    if (typeof company_local != \"undefined\") {\n        if (typeof company_nocs == \"undefined\") // Deleta dados no banco caso o não existam no remoto\n            msg.payload = msg.payload + \"DELETE FROM public.core_registration_company WHERE id = \" + company_local.id + \";\"\n        else if (JSON.stringify(company_nocs) != JSON.stringify(company_local)) // Atualiza dados no banco local caso ele exista\n            msg.payload = msg.payload + \"UPDATE public.core_registration_company SET id = \" + company_nocs.id + \",registration_date = '\" + company_nocs.registration_date + \"', description = '\" + description + \"', address = '\" + address + \"', city_id = \" + company_nocs.city_id + \", user_id = \" + company_nocs.user_id + \" WHERE id = \" + company_local.id + \";\"\n    }\n    else if (typeof company_nocs != \"undefined\") // Cria dados no banco caso eles não existão\n        msg.payload = msg.payload + \"INSERT INTO public.core_registration_company VALUES(\" + company_nocs.id + \", '\" + company_nocs.registration_date + \"', '\" + description + \"', '\" + address + \"', \" + company_nocs.city_id + \", \" + company_nocs.user_id + \");\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1340,
        "wires": [
            [
                "ee10ab59961da23c",
                "e0552d2f0fd6dea2"
            ]
        ]
    },
    {
        "id": "8899a3ad7242ec32",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "240bcd834eb33cf7",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nfor (let index = 0; index < 100; index++) {\n    const area_nocs = JSON.parse(JSON.stringify(msg.nocs))[index]\n    const area_local = JSON.parse(JSON.stringify(msg.local))[index]\n            \n    if (typeof area_nocs != \"undefined\"){\n        var name        = area_nocs.name.replace(/'/g, \"\\'\");\n        var description = area_nocs.description.replace(/'/g, \"\\'\");\n    }\n\n    if (typeof area_local != \"undefined\") {\n        if (typeof area_nocs == \"undefined\") // Deleta dados no banco caso o não existam no remoto\n            msg.payload = msg.payload + \"DELETE FROM public.organic_nodes_control_area WHERE id = \" + area_local.id + \";\"\n        else if (JSON.stringify(area_nocs) != JSON.stringify(area_local)) // Atualiza dados no banco local caso ele exista\n            msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_area SET id = \" + area_nocs.id + \",name = '\" + name + \"', description = '\" + description + \"', company_id = \" + area_nocs.company_id + \" WHERE id = \" + area_local.id + \";\"\n    }\n    else if (typeof area_nocs != \"undefined\") // Cria dados no banco caso eles não existão\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_area VALUES(\" + area_nocs.id + \", '\" + name + \"', '\" + description + \"', \" + area_nocs.company_id + \");\"\n\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1560,
        "wires": [
            [
                "effd615210513b4b",
                "74871e582731b0bd"
            ]
        ]
    },
    {
        "id": "21bfdd6cb6dc2c22",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "f41dbc6febc7f940",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nfor (let index = 0; index < 100; index++) {\n    const hardware_nocs = JSON.parse(JSON.stringify(msg.nocs))[index]\n    const hardware_local = JSON.parse(JSON.stringify(msg.local))[index]\n    \n    if (typeof hardware_nocs != \"undefined\"){\n        var name        = hardware_nocs.name.replace(/'/g, \"\\'\");\n        var description = hardware_nocs.description.replace(/'/g, \"\\'\");\n    }\n\n    if (typeof hardware_local != \"undefined\") {\n        if (typeof hardware_nocs == \"undefined\") // Deleta dados no banco caso o não existam no remoto\n            msg.payload = msg.payload + \"DELETE FROM public.organic_nodes_control_hardware WHERE id = \" + hardware_local.id + \";\"\n        else if (JSON.stringify(hardware_nocs) != JSON.stringify(hardware_local)) // Atualiza dados no banco local caso ele exista\n            msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_hardware SET id = \" + hardware_nocs.id + \",name = '\" + name + \"',nature = '\" + hardware_nocs.nature + \"',version = '\" + hardware_nocs.version + \"',esp_router = \" + hardware_nocs.esp_router + \",current_ic = '\" + hardware_nocs.current_ic + \"',sensor = '\" + hardware_nocs.sensor + \"',status = '\" + hardware_nocs.status + \"',description = '\" + description + \"' WHERE id = \" + hardware_local.id + \";\"\n    }\n    else if (typeof hardware_nocs != \"undefined\") // Cria dados no banco caso eles não existão\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_hardware VALUES(\" + hardware_nocs.id + \", '\" + name + \"', '\" + hardware_nocs.nature + \"', '\" + hardware_nocs.version + \"', \" + hardware_nocs.esp_router + \", '\" + hardware_nocs.current_ic + \"', '\" + hardware_nocs.sensor + \"', '\" + hardware_nocs.status + \"', '\" + description + \"');\" \n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1780,
        "wires": [
            [
                "d02db1a1e6df16b4",
                "98121aaea0b07440"
            ]
        ]
    },
    {
        "id": "cc5d225d719d7343",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "cee982dc38904cdb",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nfor (let index = 0; index < 100; index++) {\n    const devicesetup_nocs = JSON.parse(JSON.stringify(msg.nocs))[index]\n    const devicesetup_local = JSON.parse(JSON.stringify(msg.local))[index]\n    \n    if (typeof devicesetup_nocs != \"undefined\") {\n        var name = devicesetup_nocs.name.replace(/'/g, \"\\'\");\n        var description = devicesetup_nocs.description.replace(/'/g, \"\\'\");\n    }\n\n    if (typeof devicesetup_local != \"undefined\") {\n        if (typeof devicesetup_nocs == \"undefined\") // Deleta dados no banco caso o não existam no remoto\n            msg.payload = msg.payload + \"DELETE FROM public.organic_nodes_control_devicesetup WHERE id = \" + devicesetup_local.id + \";\"\n        else if (JSON.stringify(devicesetup_nocs) != JSON.stringify(devicesetup_local)) // Atualiza dados no banco local caso ele exista\n            msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_devicesetup SET id = \" + devicesetup_nocs.id + \",name = '\" + name + \"',description = '\" + description + \"',firmware_id = \" + devicesetup_nocs.firmware_id + \",hardware_id = \" + devicesetup_nocs.hardware_id + \" WHERE id = \" + devicesetup_local.id + \";\"\n    }\n    else if (typeof devicesetup_nocs != \"undefined\") // Cria dados no banco caso eles não existão\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_devicesetup VALUES(\" + devicesetup_nocs.id + \", '\" + name + \"', '\" + description + \"', \" + devicesetup_nocs.firmware_id + \", \" + devicesetup_nocs.hardware_id + \");\" \n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 2220,
        "wires": [
            [
                "2a116f457938557f",
                "e183b8fa3d8479b4"
            ]
        ]
    },
    {
        "id": "966e92a9336395e4",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "c3167a56125bb451",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nfor (let index = 0; index < 100; index++) {\n    const devicecompany_nocs = JSON.parse(JSON.stringify(msg.nocs))[index]\n    const devicecompany_local = JSON.parse(JSON.stringify(msg.local))[index]\n    \n    if (typeof devicecompany_nocs != \"undefined\") {\n        var name = devicecompany_nocs.name.replace(/'/g, \"\\'\");\n        var description = devicecompany_nocs.description.replace(/'/g, \"\\'\");\n    }\n\n    if (typeof devicecompany_local != \"undefined\") {\n        if (typeof devicecompany_nocs == \"undefined\") // Deleta dados no banco caso o não existam no remoto\n            msg.payload = msg.payload + \"DELETE FROM public.organic_nodes_control_devicecompany WHERE id = \" + devicecompany_local.id + \";\"\n        else if (JSON.stringify(devicecompany_nocs) != JSON.stringify(devicecompany_local)) // Atualiza dados no banco local caso ele exista\n            msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_devicecompany SET id = \" + devicecompany_nocs.id + \",name = '\" + name + \"',description = '\" + description + \"' WHERE id = \" + devicecompany_local.id + \";\"\n    }\n    else if (typeof devicecompany_nocs != \"undefined\") // Cria dados no banco caso eles não existão\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_devicecompany VALUES(\" + devicecompany_nocs.id + \", '\" + name + \"', '\" + description + \"');\" \n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 2440,
        "wires": [
            [
                "d0c2ba54e19b8c55",
                "9dc162f8e7b7b2fe"
            ]
        ]
    },
    {
        "id": "04c3dba32d7af993",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "a1f79c2e32ad7c7a",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nfor (let index = 0; index < 100; index++) {\n    const devicetype_nocs = JSON.parse(JSON.stringify(msg.nocs))[index]\n    const devicetype_local = JSON.parse(JSON.stringify(msg.local))[index]\n    \n    if (typeof devicetype_nocs != \"undefined\") {\n        var name = devicetype_nocs.name.replace(/'/g, \"\\'\");\n        var description = devicetype_nocs.description.replace(/'/g, \"\\'\");\n    }\n\n    if (typeof devicetype_local != \"undefined\") {\n        if (typeof devicetype_nocs == \"undefined\") // Deleta dados no banco caso o não existam no remoto\n            msg.payload = msg.payload + \"DELETE FROM public.organic_nodes_control_devicetype WHERE id = \" + devicetype_local.id + \";\"\n        else if (JSON.stringify(devicetype_nocs) != JSON.stringify(devicetype_local)) // Atualiza dados no banco local caso ele exista\n            msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_devicetype SET id = \" + devicetype_nocs.id + \",name = '\" + name + \"',description = '\" + description + \"',device_company_id = \" + devicetype_nocs.device_company_id + \" WHERE id = \" + devicetype_local.id + \";\"\n    }\n    else if (typeof devicetype_nocs != \"undefined\") // Cria dados no banco caso eles não existão\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_devicetype VALUES(\" + devicetype_nocs.id + \", '\" + name + \"', '\" + description + \"', \" + devicetype_nocs.device_company_id + \");\" \n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 2660,
        "wires": [
            [
                "62e7ac35611434e1",
                "a6d35a79da19b43c"
            ]
        ]
    },
    {
        "id": "3adab46062d74a1c",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "af65b1cf913c581f",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nfor (let index = 0; index < 100; index++) {\n    const device_nocs = JSON.parse(JSON.stringify(msg.nocs))[index]\n    const device_local = JSON.parse(JSON.stringify(msg.local))[index]\n    \n    if (typeof device_nocs != \"undefined\")\n        var description = device_nocs.description.replace(/'/g, \"\\'\");\n\n    if (typeof device_local != \"undefined\") {\n        if (typeof device_nocs == \"undefined\") // Deleta dados no banco caso o não existam no remoto\n            msg.payload = msg.payload + \"DELETE FROM public.organic_nodes_control_device WHERE id = \" + device_local.id + \";\"\n        else if (JSON.stringify(device_nocs) != JSON.stringify(device_local)) // Atualiza dados no banco local caso ele exista\n            msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_device SET id = \" + device_nocs.id + \",mac = '\" + device_nocs.mac + \"',description = '\" + description + \"',status = '\" + device_nocs.status + \"',registration_date = '\" + device_nocs.registration_date + \"',device_setup_id = \" + device_nocs.device_setup_id + \",device_type_id = \" + device_nocs.device_type_id + \",ip = '\" + device_nocs.ip + \"' WHERE id = \" + device_local.id + \";\"\n    }\n    else if (typeof device_nocs != \"undefined\") // Cria dados no banco caso eles não existão\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_device VALUES(\" + device_nocs.id + \", '\" + device_nocs.mac + \"', '\" + description + \"', '\" + device_nocs.status + \"', '\" + device_nocs.registration_date + \"', \" + device_nocs.device_setup_id + \", \" + device_nocs.device_type_id + \", '\" + device_nocs.ip + \"');\"  \n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 2880,
        "wires": [
            [
                "b5ebb1e8c5b8f0a6",
                "dd33804dd6b927f7"
            ]
        ]
    },
    {
        "id": "1d97c80b117e92e6",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "27233bf2b30dc86e",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nfor (let index = 0; index < 100; index++) {\n    const monitoreddevice_nocs = JSON.parse(JSON.stringify(msg.nocs))[index]\n    const monitoreddevice_local = JSON.parse(JSON.stringify(msg.local))[index]\n    \n    if (typeof monitoreddevice_nocs != \"undefined\") {\n        var name = monitoreddevice_nocs.name.replace(/'/g, \"\\'\");\n        var description = monitoreddevice_nocs.description.replace(/'/g, \"\\'\");\n    }\n\n    if (typeof monitoreddevice_local != \"undefined\") {\n        if (typeof monitoreddevice_nocs == \"undefined\") // Deleta dados no banco caso o não existam no remoto\n            msg.payload = msg.payload + \"DELETE FROM public.organic_nodes_control_monitoreddevice WHERE id = \" + monitoreddevice_local.id + \";\"\n        else if (JSON.stringify(monitoreddevice_nocs) != JSON.stringify(monitoreddevice_local)) // Atualiza dados no banco local caso ele exista\n            msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_monitoreddevice SET id = \" + monitoreddevice_nocs.id + \",name = '\" + name + \"',description = '\" + description + \"',\\\"monthly_kW_consumption\\\" = \" + monitoreddevice_nocs.monthly_kW_consumption + \",voltage = \" + monitoreddevice_nocs.voltage + \",power = \" + monitoreddevice_nocs.power + \" WHERE id = \" + monitoreddevice_local.id + \";\"\n    }\n    else if (typeof monitoreddevice_nocs != \"undefined\") // Cria dados no banco caso eles não existão\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_monitoreddevice VALUES(\" + monitoreddevice_nocs.id + \", '\" + name + \"', '\" + description + \"', \" + monitoreddevice_nocs.monthly_kW_consumption + \", \" + monitoreddevice_nocs.voltage + \", \" + monitoreddevice_nocs.power + \");\" \n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 3100,
        "wires": [
            [
                "85d130497f8d1c1f",
                "a408e5bd433b3d6f"
            ]
        ]
    },
    {
        "id": "090a8fada3cddceb",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "28709fc7768f4c7f",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nfor (let index = 0; index < 100; index++) {\n    const circuit_nocs = JSON.parse(JSON.stringify(msg.nocs))[index]\n    const circuit_local = JSON.parse(JSON.stringify(msg.local))[index]\n    \n    if (typeof circuit_nocs != \"undefined\") {\n        var name = circuit_nocs.name.replace(/'/g, \"\\'\");\n        var description = circuit_nocs.description.replace(/'/g, \"\\'\");\n    }\n\n    if (typeof circuit_local != \"undefined\") {\n        if (typeof circuit_nocs == \"undefined\") // Deleta dados no banco caso o não existam no remoto\n            msg.payload = msg.payload + \"DELETE FROM public.organic_nodes_control_circuit WHERE id = \" + circuit_local.id + \";\"\n        else if (JSON.stringify(circuit_nocs) != JSON.stringify(circuit_local)) // Atualiza dados no banco local caso ele exista\n            msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_circuit SET id = \" + circuit_nocs.id + \",phase = '\" + circuit_nocs.phase + \"', breaker = '\" + circuit_nocs.breaker + \"', name = '\" + name + \"', description = '\" + description + \"' WHERE id = \" + circuit_local.id + \";\"\n\n    }\n    else if (typeof circuit_nocs != \"undefined\") // Cria dados no banco caso eles não existão\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_circuit VALUES(\" + circuit_nocs.id + \", '\" + circuit_nocs.phase + \"', '\" + circuit_nocs.breaker + \"', '\" + name + \"', '\" + description + \"');\"\n\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 3320,
        "wires": [
            [
                "99e7a9144584bba9",
                "77066d85e8050a93"
            ]
        ]
    },
    {
        "id": "88d970917f492191",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "5a6ed92c41528bb0",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nfor (let index = 0; index < 100; index++) {\n    const firmware_nocs = JSON.parse(JSON.stringify(msg.nocs))[index]\n    const firmware_local = JSON.parse(JSON.stringify(msg.local))[index]\n    \n    if (typeof firmware_nocs != \"undefined\") {\n        var name = firmware_nocs.name.replace(/'/g, \"\\'\");\n        var description = firmware_nocs.description.replace(/'/g, \"\\'\");\n    }\n\n    if (typeof firmware_local != \"undefined\") {\n        if (typeof firmware_nocs == \"undefined\") // Deleta dados no banco caso o não existam no remoto\n            msg.payload = msg.payload + \"DELETE FROM public.organic_nodes_control_firmware WHERE id = \" + firmware_local.id + \";\"\n        else if (JSON.stringify(firmware_nocs) != JSON.stringify(firmware_local)) // Atualiza dados no banco local caso ele exista\n            msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_firmware SET id = \" + firmware_nocs.id + \",name = '\" + name + \"',version = '\" + firmware_nocs.version + \"',nature = '\" + firmware_nocs.nature + \"',function = '\" + firmware_nocs.function + \"',status = '\" + firmware_nocs.status + \"',description = '\" + description + \"',path = '\" + firmware_nocs.path + \"' WHERE id = \" + firmware_local.id + \";\"\n    }\n    else if (typeof firmware_nocs != \"undefined\") // Cria dados no banco caso eles não existão\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_firmware VALUES(\" + firmware_nocs.id + \", '\" + name + \"', '\" + firmware_nocs.version + \"', '\" + firmware_nocs.nature + \"', '\" + firmware_nocs.function + \"', '\" + firmware_nocs.status + \"', '\" + description + \"', '\" + firmware_nocs.path + \"');\" \n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 2000,
        "wires": [
            [
                "87fa4ed0d1f58c61",
                "0e4fcc6c968d94a3"
            ]
        ]
    },
    {
        "id": "590dd9d1a74fc835",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "74a7f93a69afdede",
        "name": "organic_nodes_control_version",
        "info": "",
        "x": 210,
        "y": 3420,
        "wires": []
    },
    {
        "id": "93167eaf02c78a30",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "74a7f93a69afdede",
        "name": "version",
        "links": [
            "199e644b24cd4bf6",
            "e89b1d3d441e707f",
            "6ff7d2857d1edcbc"
        ],
        "x": 115,
        "y": 3480,
        "wires": [
            [
                "7c9e057d35f53c6c"
            ]
        ]
    },
    {
        "id": "e89b1d3d441e707f",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "74a7f93a69afdede",
        "name": "version",
        "mode": "link",
        "links": [
            "93167eaf02c78a30"
        ],
        "x": 1135,
        "y": 3540,
        "wires": []
    },
    {
        "id": "f60522ae345d03ca",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "74a7f93a69afdede",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nfor (let index = 0; index < 100; index++) {\n    const version_nocs = JSON.parse(JSON.stringify(msg.nocs))[index]\n    const version_local = JSON.parse(JSON.stringify(msg.local))[index]\n    \n    if (typeof version_local != \"undefined\") {\n        if (typeof version_nocs == \"undefined\") // Deleta dados no banco caso o não existam no remoto\n            msg.payload = msg.payload + \"DELETE FROM public.organic_nodes_control_version WHERE id = \" + version_local.id + \";\"\n        else if (JSON.stringify(version_nocs) != JSON.stringify(version_local)) // Atualiza dados no banco local caso ele exista\n            msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_version SET id = \" + version_nocs.id + \", version = '\" + version_nocs.version + \"', repositorio = '\" + version_nocs.repositorio + \"', type = '\" + version_nocs.type + \"';\"\n\n    }\n    else if (typeof version_nocs != \"undefined\") // Cria dados no banco caso eles não existão\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_version VALUES(\" + version_nocs.id + \", '\" + version_nocs.version + \"', '\" + version_nocs.repositorio + \"', '\" + version_nocs.type + \"');\"\n\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 3540,
        "wires": [
            [
                "42bf92d9c2401950",
                "457c19c17b864058"
            ]
        ]
    },
    {
        "id": "7c9e057d35f53c6c",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "74a7f93a69afdede",
        "name": "Start offset",
        "func": "msg.offset = global.get(\"version\")\n\nif (typeof msg.offset == \"undefined\"){\n    global.set(\"version\", 0)\n    msg.offset = 0\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 3480,
        "wires": [
            [
                "1c72b23102619651"
            ]
        ]
    },
    {
        "id": "ea5a3b2d16aded4f",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "74a7f93a69afdede",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 3480,
        "wires": [
            [
                "5d811315ac3e75de"
            ]
        ]
    },
    {
        "id": "d311c0c15c6c0348",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "74a7f93a69afdede",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 3540,
        "wires": [
            [
                "f60522ae345d03ca"
            ]
        ]
    },
    {
        "id": "359d25cc9aec707e",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "74a7f93a69afdede",
        "name": "Zera",
        "func": "global.set(\"version\", 0)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 3460,
        "wires": []
    },
    {
        "id": "158f61f33d51de6d",
        "type": "comment",
        "z": "ba2e913aeb86a3ea",
        "g": "f89f668f9e414063",
        "name": "organic_nodes_control_central",
        "info": "",
        "x": 210,
        "y": 3640,
        "wires": []
    },
    {
        "id": "f0a6c3c22ff49c34",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "f89f668f9e414063",
        "name": "central",
        "links": [
            "199e644b24cd4bf6",
            "6fb8e26c98625437",
            "6ff7d2857d1edcbc"
        ],
        "x": 115,
        "y": 3700,
        "wires": [
            [
                "2eb5fe97c7cebfd8"
            ]
        ]
    },
    {
        "id": "6fb8e26c98625437",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "f89f668f9e414063",
        "name": "central",
        "mode": "link",
        "links": [
            "f0a6c3c22ff49c34"
        ],
        "x": 1135,
        "y": 3760,
        "wires": []
    },
    {
        "id": "7d246c7c0d35edb8",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "f89f668f9e414063",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nfor (let index = 0; index < 100; index++) {\n    const central_nocs = JSON.parse(JSON.stringify(msg.nocs))[index]\n    const central_local = JSON.parse(JSON.stringify(msg.local))[index]\n    \n    if (typeof central_local != \"undefined\") {\n        if (typeof central_nocs == \"undefined\") // Deleta dados no banco caso o não existam no remoto\n            msg.payload = msg.payload + \"DELETE FROM public.organic_nodes_control_central WHERE id = \" + central_local.id + \";\"\n        else if (JSON.stringify(central_nocs) != JSON.stringify(central_local)) // Atualiza dados no banco local caso ele exista\n            msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_central SET id = \" + central_nocs.id + \", registration_date = '\" + central_nocs.registration_date + \"', mac = '\" + central_nocs.mac + \"', model = '\" + central_nocs.model + \"', status = '\" + central_nocs.status + \"', scaling_governor = '\" + central_nocs.scaling_governor + \"', data_permanence = \" + central_nocs.data_permanence + \", version_id = \" + central_nocs.version_id + \";\"\n\n    }\n    else if (typeof central_nocs != \"undefined\") // Cria dados no banco caso eles não existão\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_central VALUES(\" + central_nocs.id + \", '\" + central_nocs.registration_date + \"', '\" + central_nocs.mac + \"', '\" + central_nocs.model + \"', '\" + central_nocs.status + \"', '\" + central_nocs.scaling_governor + \"', '\" + central_nocs.data_permanence + \"', '\" + central_nocs.version_id + \"');\"\n\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 3760,
        "wires": [
            [
                "727ee5c1eb284387",
                "21abab79b5876624"
            ]
        ]
    },
    {
        "id": "2eb5fe97c7cebfd8",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "f89f668f9e414063",
        "name": "Start offset",
        "func": "msg.offset = global.get(\"central\")\n\nif (typeof msg.offset == \"undefined\"){\n    global.set(\"central\", 0)\n    msg.offset = 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 3700,
        "wires": [
            [
                "d8b82cd8e69a468c"
            ]
        ]
    },
    {
        "id": "95c5f304f5839103",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "f89f668f9e414063",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 3700,
        "wires": [
            [
                "8867bd0762540831"
            ]
        ]
    },
    {
        "id": "6ef1481815dfebca",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "f89f668f9e414063",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 3760,
        "wires": [
            [
                "7d246c7c0d35edb8"
            ]
        ]
    },
    {
        "id": "10c8eb4b9ed854d0",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "f89f668f9e414063",
        "name": "Zera",
        "func": "global.set(\"central\", 0)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 3680,
        "wires": []
    },
    {
        "id": "f36b3565ee8dd644",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "709f9014691197e8",
        "name": "Start offset",
        "func": "msg.offset = global.get(\"setup\")\n\nif (typeof msg.offset == \"undefined\"){\n    global.set(\"setup\", 0)\n    msg.offset = 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 3920,
        "wires": [
            [
                "04de84447f7ef0ec"
            ]
        ]
    },
    {
        "id": "233ef6e7319cb681",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "709f9014691197e8",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 3920,
        "wires": [
            [
                "5f077ad03df03eb4"
            ]
        ]
    },
    {
        "id": "c3a8972de2eb1ac7",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "709f9014691197e8",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 3980,
        "wires": [
            [
                "019f5dfdcb3403e7"
            ]
        ]
    },
    {
        "id": "9abc5852696dd007",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "709f9014691197e8",
        "name": "Zera",
        "func": "global.set(\"setup\", 0)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 3900,
        "wires": []
    },
    {
        "id": "23e1ccc4f64dd082",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "4a661830d296a9f8",
        "name": "Start offset",
        "func": "msg.offset = global.get(\"mqttaccess\")\n\nif (typeof msg.offset == \"undefined\"){\n    global.set(\"mqttaccess\", 0)\n    msg.offset = 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 4140,
        "wires": [
            [
                "36837c5652b7ee9b"
            ]
        ]
    },
    {
        "id": "3bbf3b4a47400e13",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "4a661830d296a9f8",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 4140,
        "wires": [
            [
                "77ef8befb10cc36d"
            ]
        ]
    },
    {
        "id": "5468bd1b0210def4",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "4a661830d296a9f8",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 4200,
        "wires": [
            [
                "51ba5f02d6bfbef8"
            ]
        ]
    },
    {
        "id": "141bda04cd333c77",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "4a661830d296a9f8",
        "name": "Zera",
        "func": "global.set(\"mqttaccess\", 0)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 4120,
        "wires": []
    },
    {
        "id": "2485ad77a0ca397f",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "408c191f95cb3007",
        "name": "cria msg.nocs",
        "rules": [
            {
                "t": "set",
                "p": "nocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 4360,
        "wires": [
            [
                "e714b273232bbbd8"
            ]
        ]
    },
    {
        "id": "48f13be0aab9673e",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "408c191f95cb3007",
        "name": "Start offset",
        "func": "msg.offset = global.get(\"mqttdevice\")\n\nif (typeof msg.offset == \"undefined\"){\n    global.set(\"mqttdevice\", 0)\n    msg.offset = 0\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 4360,
        "wires": [
            [
                "14b26663f0ccd1e8"
            ]
        ]
    },
    {
        "id": "4d270d4a9ed77a89",
        "type": "change",
        "z": "ba2e913aeb86a3ea",
        "g": "408c191f95cb3007",
        "name": "cria msg.local",
        "rules": [
            {
                "t": "set",
                "p": "local",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 4420,
        "wires": [
            [
                "4f168c459b1c47ed"
            ]
        ]
    },
    {
        "id": "c55796570c542485",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "408c191f95cb3007",
        "name": "Zera",
        "func": "global.set(\"mqttdevice\", 0)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 4340,
        "wires": []
    },
    {
        "id": "4f168c459b1c47ed",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "408c191f95cb3007",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nfor (let index = 0; index < 100; index++) {\n    const mqttdevice_nocs = JSON.parse(JSON.stringify(msg.nocs))[index]\n    const mqttdevice_local = JSON.parse(JSON.stringify(msg.local))[index]\n\n    if (typeof mqttdevice_local != \"undefined\") {\n        if (typeof mqttdevice_nocs == \"undefined\") // Deleta dados no banco caso o não existam no remoto\n            msg.payload = msg.payload + \"DELETE FROM public.organic_nodes_control_mqttdevice WHERE id = \" + mqttdevice_local.id + \";\"\n        else if (JSON.stringify(mqttdevice_nocs) != JSON.stringify(mqttdevice_local)) // Atualiza dados no banco local caso ele exista\n            msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_mqttdevice SET id = \" + mqttdevice_nocs.id + \",device_id = \" + mqttdevice_nocs.device_id + \",mqtt_access_id = \" + mqttdevice_nocs.mqtt_access_id + \" WHERE id = \" + mqttdevice_local.id + \";\"\n    }\n    else if (typeof mqttdevice_nocs != \"undefined\") // Cria dados no banco caso eles não existão\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_mqttdevice VALUES(\" + mqttdevice_nocs.id + \", \" + mqttdevice_nocs.device_id + \", \" + mqttdevice_nocs.mqtt_access_id + \");\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 4420,
        "wires": [
            [
                "0d142624a94b296d",
                "0b35b4a0d002c79f"
            ]
        ]
    },
    {
        "id": "51ba5f02d6bfbef8",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "4a661830d296a9f8",
        "name": "criação e atualizção ",
        "func": "msg.payload = \"\"\n\nfor (let index = 0; index < 100; index++) {\n    const mqttaccess_nocs = JSON.parse(JSON.stringify(msg.nocs))[index]\n    const mqttaccess_local = JSON.parse(JSON.stringify(msg.local))[index]\n\n    if (typeof mqttaccess_local != \"undefined\") {\n        if (typeof mqttaccess_nocs == \"undefined\") // Deleta dados no banco caso o não existam no remoto\n            msg.payload = msg.payload + \"DELETE FROM public.organic_nodes_control_mqttaccess WHERE id = \" + mqttaccess_local.id + \";\"\n        else if (JSON.stringify(mqttaccess_nocs) != JSON.stringify(mqttaccess_local)) // Atualiza dados no banco local caso ele exista\n            msg.payload = msg.payload + \"UPDATE public.organic_nodes_control_mqttaccess SET id = \" + mqttaccess_nocs.id + \",mqtt_id = '\" + mqttaccess_nocs.mqtt_id + \"',mqtt_port = \" + mqttaccess_nocs.mqtt_port + \",status = '\" + mqttaccess_nocs.status + \"',mqtt_server = '\" + mqttaccess_nocs.mqtt_server + \"',pub_topic = '\" + mqttaccess_nocs.pub_topic + \"',action = '\" + mqttaccess_nocs.action + \"',type = '\" + mqttaccess_nocs.type + \"',sub_topic = '\" + mqttaccess_nocs.sub_topic + \"',sub_user = '\" + mqttaccess_nocs.sub_user + \"',pub_user = '\" + mqttaccess_nocs.pub_user + \"',user_mqtt = '\" + mqttaccess_nocs.user_mqtt + \"' WHERE id = \" + mqttaccess_local.id + \";\"\n    }\n    else if (typeof mqttaccess_nocs != \"undefined\") // Cria dados no banco caso eles não existão\n        msg.payload = msg.payload + \"INSERT INTO public.organic_nodes_control_mqttaccess VALUES(\" + mqttaccess_nocs.id + \", '\" + mqttaccess_nocs.mqtt_id + \"', \" + mqttaccess_nocs.mqtt_port + \", '\" + mqttaccess_nocs.status + \"', '\" + mqttaccess_nocs.mqtt_server + \"', '\" + mqttaccess_nocs.pub_topic + \"', '\" + mqttaccess_nocs.action + \"', '\" + mqttaccess_nocs.type + \"', '\" + mqttaccess_nocs.sub_topic + \"', '\" + mqttaccess_nocs.sub_user + \"', '\" + mqttaccess_nocs.pub_user + \"', '\" + mqttaccess_nocs.user_mqtt + \"');\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 4200,
        "wires": [
            [
                "b2c3afea262e3886",
                "b7d4b89cc7a9b690"
            ]
        ]
    },
    {
        "id": "582b718ead86ec49",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "14955f02aa0317be",
        "name": "Incrementa",
        "func": "let offset = global.get(\"city\") | 0\noffset = offset + 100;\nglobal.set(\"city\", offset)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1080,
        "wires": []
    },
    {
        "id": "b46861707df4cbbc",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "84114652054927ee",
        "name": "Incrementa",
        "func": "let offset = global.get(\"state\") | 0\noffset = offset + 100;\nglobal.set(\"state\", offset)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 860,
        "wires": []
    },
    {
        "id": "1f214db4b066a4b0",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "53383e8862e9b803",
        "name": "Incrementa",
        "func": "let offset = global.get(\"country\") | 0\noffset = offset + 100;\nglobal.set(\"country\", offset)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 640,
        "wires": []
    },
    {
        "id": "06d7e8c6c1334b71",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "a8c438ba71c0a43f",
        "name": "Incrementa",
        "func": "let offset = global.get(\"access_user\") | 0\noffset = offset + 100;\nglobal.set(\"access_user\", offset)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 420,
        "wires": []
    },
    {
        "id": "93279c25b5a05f4b",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "e7f10f45daeaf688",
        "name": "Incrementa",
        "func": "let offset = global.get(\"company\") | 0\noffset = offset + 100;\nglobal.set(\"company\", offset)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1300,
        "wires": []
    },
    {
        "id": "3e884f2af668b4c9",
        "type": "switch",
        "z": "ba2e913aeb86a3ea",
        "g": "84114652054927ee",
        "name": "",
        "property": "payload[0].count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "state",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 840,
        "wires": [
            [
                "b29bcebac97bdcf5"
            ],
            [
                "b46861707df4cbbc",
                "45d280528d1b4dfb"
            ]
        ]
    },
    {
        "id": "06d3873666cdcc8c",
        "type": "switch",
        "z": "ba2e913aeb86a3ea",
        "g": "53383e8862e9b803",
        "name": "",
        "property": "payload[0].count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "country",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 620,
        "wires": [
            [
                "d14a279303962827"
            ],
            [
                "1f214db4b066a4b0",
                "f2da1fd75e931b7e"
            ]
        ]
    },
    {
        "id": "fce5303b5fb552fb",
        "type": "switch",
        "z": "ba2e913aeb86a3ea",
        "g": "a8c438ba71c0a43f",
        "name": "",
        "property": "payload[0].count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "access_user",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 400,
        "wires": [
            [
                "3921b65f469ae086"
            ],
            [
                "06d7e8c6c1334b71",
                "105b7358fbc1c293"
            ]
        ]
    },
    {
        "id": "d8c7ecffa86e51ab",
        "type": "switch",
        "z": "ba2e913aeb86a3ea",
        "g": "e7f10f45daeaf688",
        "name": "",
        "property": "payload[0].count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "company",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 1280,
        "wires": [
            [
                "e05ad0dcd8d0af70"
            ],
            [
                "93279c25b5a05f4b",
                "9af565314439fc4e"
            ]
        ]
    },
    {
        "id": "70346f5fc6ad3c22",
        "type": "switch",
        "z": "ba2e913aeb86a3ea",
        "g": "240bcd834eb33cf7",
        "name": "",
        "property": "payload[0].count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "area",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 1500,
        "wires": [
            [
                "03d87c8ebc066a96"
            ],
            [
                "8b638bc66dad9013",
                "4aa12f5df2e22995"
            ]
        ]
    },
    {
        "id": "8b638bc66dad9013",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "240bcd834eb33cf7",
        "name": "Incrementa",
        "func": "let offset = global.get(\"area\") | 0\noffset = offset + 100;\nglobal.set(\"area\", offset)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1520,
        "wires": []
    },
    {
        "id": "543babc216b09724",
        "type": "switch",
        "z": "ba2e913aeb86a3ea",
        "g": "f41dbc6febc7f940",
        "name": "",
        "property": "payload[0].count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "hardware",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 1720,
        "wires": [
            [
                "0ed079d2659a6eab"
            ],
            [
                "cdf008a3c8ad6593",
                "ca76449609927f3a"
            ]
        ]
    },
    {
        "id": "cdf008a3c8ad6593",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "f41dbc6febc7f940",
        "name": "Incrementa",
        "func": "let offset = global.get(\"hardware\") | 0\noffset = offset + 100;\nglobal.set(\"hardware\", offset)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1740,
        "wires": []
    },
    {
        "id": "860c713e56ba1a1a",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "5a6ed92c41528bb0",
        "name": "Incrementa",
        "func": "let offset = global.get(\"firmware\") | 0\noffset = offset + 100;\nglobal.set(\"firmware\", offset)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1960,
        "wires": []
    },
    {
        "id": "ef6d149a52e5a7eb",
        "type": "switch",
        "z": "ba2e913aeb86a3ea",
        "g": "5a6ed92c41528bb0",
        "name": "",
        "property": "payload[0].count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "firmware",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 1940,
        "wires": [
            [
                "826b3342825de03c"
            ],
            [
                "860c713e56ba1a1a",
                "2ecea0a103eac8af"
            ]
        ]
    },
    {
        "id": "fa37fd6a89dec1a9",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "cee982dc38904cdb",
        "name": "Incrementa",
        "func": "let offset = global.get(\"devicesetup\") | 0\noffset = offset + 100;\nglobal.set(\"devicesetup\", offset)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 2180,
        "wires": []
    },
    {
        "id": "bee24cec67c2bd34",
        "type": "switch",
        "z": "ba2e913aeb86a3ea",
        "g": "cee982dc38904cdb",
        "name": "",
        "property": "payload[0].count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "devicesetup",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 2160,
        "wires": [
            [
                "c8dc5dd52562c662"
            ],
            [
                "fa37fd6a89dec1a9",
                "0f55a45b5d4722e1"
            ]
        ]
    },
    {
        "id": "d33e30800772875f",
        "type": "switch",
        "z": "ba2e913aeb86a3ea",
        "g": "c3167a56125bb451",
        "name": "",
        "property": "payload[0].count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "devicecompany",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 2380,
        "wires": [
            [
                "e9362e7f3c2fc5d9"
            ],
            [
                "18c02c9cbb6082cb",
                "93df8599ad612ec7"
            ]
        ]
    },
    {
        "id": "18c02c9cbb6082cb",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "c3167a56125bb451",
        "name": "Incrementa",
        "func": "let offset = global.get(\"devicecompany\") | 0\noffset = offset + 100;\nglobal.set(\"devicecompany\", offset)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 2400,
        "wires": []
    },
    {
        "id": "81037cfd1cca377c",
        "type": "switch",
        "z": "ba2e913aeb86a3ea",
        "g": "a1f79c2e32ad7c7a",
        "name": "",
        "property": "payload[0].count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "devicetype",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 2600,
        "wires": [
            [
                "65083aa2bad271b1"
            ],
            [
                "68eeb8363d74b6f0",
                "2027e5a5f226d68c"
            ]
        ]
    },
    {
        "id": "68eeb8363d74b6f0",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "a1f79c2e32ad7c7a",
        "name": "Incrementa",
        "func": "let offset = global.get(\"devicetype\") | 0\noffset = offset + 100;\nglobal.set(\"devicetype\", offset)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 2620,
        "wires": []
    },
    {
        "id": "52adb34b44a91203",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "af65b1cf913c581f",
        "name": "Incrementa",
        "func": "let offset = global.get(\"device\") | 0\noffset = offset + 100;\nglobal.set(\"device\", offset)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 2840,
        "wires": []
    },
    {
        "id": "c4fbb5d6bc4d1705",
        "type": "switch",
        "z": "ba2e913aeb86a3ea",
        "g": "af65b1cf913c581f",
        "name": "",
        "property": "payload[0].count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "device",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 2820,
        "wires": [
            [
                "68f005cdbe70be44"
            ],
            [
                "52adb34b44a91203",
                "9188e3a48d2a39be"
            ]
        ]
    },
    {
        "id": "c96347f7b2d84cee",
        "type": "switch",
        "z": "ba2e913aeb86a3ea",
        "g": "27233bf2b30dc86e",
        "name": "",
        "property": "payload[0].count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "monitoreddevice",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 3040,
        "wires": [
            [
                "8d951fc7ca90bac9"
            ],
            [
                "70206e5d2f551471",
                "36e393322517e0b9"
            ]
        ]
    },
    {
        "id": "70206e5d2f551471",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "27233bf2b30dc86e",
        "name": "Incrementa",
        "func": "let offset = global.get(\"monitoreddevice\") | 0\noffset = offset + 100;\nglobal.set(\"monitoreddevice\", offset)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3060,
        "wires": []
    },
    {
        "id": "aa0d13f19a9d2030",
        "type": "switch",
        "z": "ba2e913aeb86a3ea",
        "g": "28709fc7768f4c7f",
        "name": "",
        "property": "payload[0].count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "circuit",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 3260,
        "wires": [
            [
                "32f4bf6d0d2fd316"
            ],
            [
                "09d133b856096954",
                "42b2aefe8a793e53"
            ]
        ]
    },
    {
        "id": "09d133b856096954",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "28709fc7768f4c7f",
        "name": "Incrementa",
        "func": "let offset = global.get(\"circuit\") | 0\noffset = offset + 100;\nglobal.set(\"circuit\", offset)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3280,
        "wires": []
    },
    {
        "id": "31f614c194128bce",
        "type": "switch",
        "z": "ba2e913aeb86a3ea",
        "g": "74a7f93a69afdede",
        "name": "",
        "property": "payload[0].count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "version",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 3480,
        "wires": [
            [
                "359d25cc9aec707e"
            ],
            [
                "ee865ff6144bb3dc",
                "e89b1d3d441e707f"
            ]
        ]
    },
    {
        "id": "ee865ff6144bb3dc",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "74a7f93a69afdede",
        "name": "Incrementa",
        "func": "let offset = global.get(\"version\") | 0\noffset = offset + 100;\nglobal.set(\"version\", offset)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3500,
        "wires": []
    },
    {
        "id": "982c662a4032ef84",
        "type": "switch",
        "z": "ba2e913aeb86a3ea",
        "g": "f89f668f9e414063",
        "name": "",
        "property": "payload[0].count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "central",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 3700,
        "wires": [
            [
                "10c8eb4b9ed854d0"
            ],
            [
                "324f11f7a7ca0b5b",
                "6fb8e26c98625437"
            ]
        ]
    },
    {
        "id": "324f11f7a7ca0b5b",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "f89f668f9e414063",
        "name": "Incrementa",
        "func": "let offset = global.get(\"central\") | 0\noffset = offset + 100;\nglobal.set(\"central\", offset)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3720,
        "wires": []
    },
    {
        "id": "51db23b114da2966",
        "type": "switch",
        "z": "ba2e913aeb86a3ea",
        "g": "709f9014691197e8",
        "name": "",
        "property": "payload[0].count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "setup",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 3920,
        "wires": [
            [
                "9abc5852696dd007"
            ],
            [
                "b8bd57fe666fe9f3",
                "2819e3062c0ec390"
            ]
        ]
    },
    {
        "id": "b8bd57fe666fe9f3",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "709f9014691197e8",
        "name": "Incrementa",
        "func": "let offset = global.get(\"setup\") | 0\noffset = offset + 100;\nglobal.set(\"setup\", offset)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 3940,
        "wires": []
    },
    {
        "id": "dc1c47f610201a5f",
        "type": "switch",
        "z": "ba2e913aeb86a3ea",
        "g": "4a661830d296a9f8",
        "name": "",
        "property": "payload[0].count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "mqttaccess",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 4140,
        "wires": [
            [
                "141bda04cd333c77"
            ],
            [
                "ba9f8b6f9ee6ee5f",
                "0266a853038f15ee"
            ]
        ]
    },
    {
        "id": "ba9f8b6f9ee6ee5f",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "4a661830d296a9f8",
        "name": "Incrementa",
        "func": "let offset = global.get(\"mqttaccess\") | 0\noffset = offset + 100;\nglobal.set(\"mqttaccess\", offset)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 4160,
        "wires": []
    },
    {
        "id": "13f7ceb41536f862",
        "type": "switch",
        "z": "ba2e913aeb86a3ea",
        "g": "408c191f95cb3007",
        "name": "",
        "property": "payload[0].count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "mqttdevice",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 4360,
        "wires": [
            [
                "c55796570c542485"
            ],
            [
                "bac9ca7388169018",
                "cd564a67b7af70f5"
            ]
        ]
    },
    {
        "id": "bac9ca7388169018",
        "type": "function",
        "z": "ba2e913aeb86a3ea",
        "g": "408c191f95cb3007",
        "name": "Incrementa",
        "func": "let offset = global.get(\"mqttdevice\") | 0\noffset = offset + 100;\nglobal.set(\"mqttdevice\", offset)",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 4380,
        "wires": []
    },
    {
        "id": "ef75f3514328cd17",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "a8c438ba71c0a43f",
        "name": "NOCS",
        "query": "SELECT * FROM public.core_access_user where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 400,
        "wires": [
            [
                "b647f3942cbd6254"
            ]
        ]
    },
    {
        "id": "5c73b81e188d9ac2",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "a8c438ba71c0a43f",
        "name": "Local",
        "query": "SELECT * FROM public.core_access_user where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 460,
        "wires": [
            [
                "cd5c218ee9c6205a"
            ]
        ]
    },
    {
        "id": "f649396824a36178",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "53383e8862e9b803",
        "name": "NOCS",
        "query": "SELECT * FROM public.core_registration_country where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 620,
        "wires": [
            [
                "d0a2c2703adcc983"
            ]
        ]
    },
    {
        "id": "0e184ddd3a0c00c0",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "53383e8862e9b803",
        "name": "Local",
        "query": "SELECT * FROM public.core_registration_country where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 680,
        "wires": [
            [
                "8a11ee839a0979da"
            ]
        ]
    },
    {
        "id": "4fd97f3c436aa12b",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "84114652054927ee",
        "name": "NOCS",
        "query": "SELECT * FROM public.core_registration_state where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 840,
        "wires": [
            [
                "e458e99a72602419"
            ]
        ]
    },
    {
        "id": "601ed41a32f7b1c7",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "84114652054927ee",
        "name": "Local",
        "query": "SELECT * FROM public.core_registration_state where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 900,
        "wires": [
            [
                "5bd7dec67038c80a"
            ]
        ]
    },
    {
        "id": "234d63d07a766d1b",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "14955f02aa0317be",
        "name": "NOCS",
        "query": "SELECT * FROM public.core_registration_city where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 1060,
        "wires": [
            [
                "2ea116986217b6b5"
            ]
        ]
    },
    {
        "id": "ff9355116873d642",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "14955f02aa0317be",
        "name": "Local",
        "query": "SELECT * FROM public.core_registration_city where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 1120,
        "wires": [
            [
                "0d272e145cf9e77f"
            ]
        ]
    },
    {
        "id": "dee7f3574781e050",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "e7f10f45daeaf688",
        "name": "NOCS",
        "query": "SELECT * FROM public.core_registration_company where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 1280,
        "wires": [
            [
                "a5413bd94ea89539"
            ]
        ]
    },
    {
        "id": "c8f90973dea69e83",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "e7f10f45daeaf688",
        "name": "Local",
        "query": "SELECT * FROM public.core_registration_company where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 1340,
        "wires": [
            [
                "7e96cf05721102ca"
            ]
        ]
    },
    {
        "id": "861b42de0290b1e4",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "240bcd834eb33cf7",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_area where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 1500,
        "wires": [
            [
                "f481fe5b4421ebe6"
            ]
        ]
    },
    {
        "id": "469fb031045ac616",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "240bcd834eb33cf7",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_area where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 1560,
        "wires": [
            [
                "74ade0d27636133a"
            ]
        ]
    },
    {
        "id": "21c7a908db22bc3a",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "f41dbc6febc7f940",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_hardware where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 1720,
        "wires": [
            [
                "4bb9ccd58662dc9a"
            ]
        ]
    },
    {
        "id": "f2f9afc18d31bd34",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "f41dbc6febc7f940",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_hardware where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 1780,
        "wires": [
            [
                "61a3c53120148a48"
            ]
        ]
    },
    {
        "id": "06bbae300c2adbf2",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "5a6ed92c41528bb0",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_firmware where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 1940,
        "wires": [
            [
                "722aaaee01661a51"
            ]
        ]
    },
    {
        "id": "3ac6187a8a83bab3",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "5a6ed92c41528bb0",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_firmware where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 2000,
        "wires": [
            [
                "32e16135e1e0107f"
            ]
        ]
    },
    {
        "id": "cb0567464daab6c1",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "cee982dc38904cdb",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_devicesetup where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 2160,
        "wires": [
            [
                "1db90311e4f74f4a"
            ]
        ]
    },
    {
        "id": "7508e67f3853f139",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "cee982dc38904cdb",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_devicesetup where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 2220,
        "wires": [
            [
                "a79abf3192c43784"
            ]
        ]
    },
    {
        "id": "2a88500f7575a211",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "c3167a56125bb451",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_devicecompany where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 2380,
        "wires": [
            [
                "d627d7b6724ba95a"
            ]
        ]
    },
    {
        "id": "4df0e2029eb96f33",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "c3167a56125bb451",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_devicecompany where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 2440,
        "wires": [
            [
                "9b59b52798c817e5"
            ]
        ]
    },
    {
        "id": "8cfea906416f9471",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "a1f79c2e32ad7c7a",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_devicetype where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 2600,
        "wires": [
            [
                "f7cc577f7636de41"
            ]
        ]
    },
    {
        "id": "d28eda873efb0f16",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "a1f79c2e32ad7c7a",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_devicetype where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 2660,
        "wires": [
            [
                "b47431ad9fac00a9"
            ]
        ]
    },
    {
        "id": "bceb699c0b897603",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "af65b1cf913c581f",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_device where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 2820,
        "wires": [
            [
                "d95c9f9a1522b4e5"
            ]
        ]
    },
    {
        "id": "84e615d5a0916ad6",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "af65b1cf913c581f",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_device where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 2880,
        "wires": [
            [
                "f1c863a7324d4bb6"
            ]
        ]
    },
    {
        "id": "4154ce6de80c590d",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "27233bf2b30dc86e",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_monitoreddevice where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 3040,
        "wires": [
            [
                "ddb2a6458b699216"
            ]
        ]
    },
    {
        "id": "716bc1e85058519b",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "27233bf2b30dc86e",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_monitoreddevice where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 3100,
        "wires": [
            [
                "282ebc181d21e648"
            ]
        ]
    },
    {
        "id": "d094e569846f9466",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "28709fc7768f4c7f",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_circuit where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 3260,
        "wires": [
            [
                "f374049ef45f87f1"
            ]
        ]
    },
    {
        "id": "7d026183464eed1b",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "28709fc7768f4c7f",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_circuit where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 3320,
        "wires": [
            [
                "3c107fdc2b012131"
            ]
        ]
    },
    {
        "id": "1c72b23102619651",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "74a7f93a69afdede",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_version where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 3480,
        "wires": [
            [
                "ea5a3b2d16aded4f"
            ]
        ]
    },
    {
        "id": "5d811315ac3e75de",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "74a7f93a69afdede",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_version where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 3540,
        "wires": [
            [
                "d311c0c15c6c0348"
            ]
        ]
    },
    {
        "id": "d8b82cd8e69a468c",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "f89f668f9e414063",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_central where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 3700,
        "wires": [
            [
                "95c5f304f5839103"
            ]
        ]
    },
    {
        "id": "8867bd0762540831",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "f89f668f9e414063",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_central where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 3760,
        "wires": [
            [
                "6ef1481815dfebca"
            ]
        ]
    },
    {
        "id": "04de84447f7ef0ec",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "709f9014691197e8",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_setup where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 3920,
        "wires": [
            [
                "233ef6e7319cb681"
            ]
        ]
    },
    {
        "id": "5f077ad03df03eb4",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "709f9014691197e8",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_setup where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 3980,
        "wires": [
            [
                "c3a8972de2eb1ac7"
            ]
        ]
    },
    {
        "id": "36837c5652b7ee9b",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "4a661830d296a9f8",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_mqttaccess where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 4140,
        "wires": [
            [
                "3bbf3b4a47400e13"
            ]
        ]
    },
    {
        "id": "77ef8befb10cc36d",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "4a661830d296a9f8",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_mqttaccess where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 4200,
        "wires": [
            [
                "5468bd1b0210def4"
            ]
        ]
    },
    {
        "id": "14b26663f0ccd1e8",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "408c191f95cb3007",
        "name": "NOCS",
        "query": "SELECT * FROM public.organic_nodes_control_mqttdevice where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 4360,
        "wires": [
            [
                "2485ad77a0ca397f"
            ]
        ]
    },
    {
        "id": "e714b273232bbbd8",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "408c191f95cb3007",
        "name": "Local",
        "query": "SELECT * FROM public.organic_nodes_control_mqttdevice where id >= '{{msg.offset}}' order by id asc limit 100;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 4420,
        "wires": [
            [
                "4d270d4a9ed77a89"
            ]
        ]
    },
    {
        "id": "785259ae610fd3e0",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "14955f02aa0317be",
        "name": "Local",
        "query": "SELECT COUNT(*) FROM core_registration_city;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 850,
        "y": 1060,
        "wires": [
            [
                "4c9ec412a893312b"
            ]
        ]
    },
    {
        "id": "aae528061b51fe89",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "84114652054927ee",
        "name": "Local",
        "query": "SELECT COUNT(*) FROM core_registration_state;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 850,
        "y": 840,
        "wires": [
            [
                "3e884f2af668b4c9"
            ]
        ]
    },
    {
        "id": "3ad4e65ea27962e9",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "53383e8862e9b803",
        "name": "Local",
        "query": "SELECT COUNT(*) FROM core_registration_country;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 850,
        "y": 620,
        "wires": [
            [
                "06d3873666cdcc8c"
            ]
        ]
    },
    {
        "id": "36af044387884685",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "a8c438ba71c0a43f",
        "name": "Local",
        "query": "SELECT COUNT(*) FROM core_access_user;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 850,
        "y": 400,
        "wires": [
            [
                "fce5303b5fb552fb"
            ]
        ]
    },
    {
        "id": "ee10ab59961da23c",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "e7f10f45daeaf688",
        "name": "Local",
        "query": "SELECT COUNT(*) FROM core_registration_company;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 850,
        "y": 1280,
        "wires": [
            [
                "d8c7ecffa86e51ab"
            ]
        ]
    },
    {
        "id": "effd615210513b4b",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "240bcd834eb33cf7",
        "name": "Local",
        "query": "SELECT COUNT(*) FROM organic_nodes_control_area;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 850,
        "y": 1500,
        "wires": [
            [
                "70346f5fc6ad3c22"
            ]
        ]
    },
    {
        "id": "d02db1a1e6df16b4",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "f41dbc6febc7f940",
        "name": "Local",
        "query": "SELECT COUNT(*) FROM organic_nodes_control_hardware;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 850,
        "y": 1720,
        "wires": [
            [
                "543babc216b09724"
            ]
        ]
    },
    {
        "id": "87fa4ed0d1f58c61",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "5a6ed92c41528bb0",
        "name": "Local",
        "query": "SELECT COUNT(*) FROM organic_nodes_control_firmware;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 850,
        "y": 1940,
        "wires": [
            [
                "ef6d149a52e5a7eb"
            ]
        ]
    },
    {
        "id": "2a116f457938557f",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "cee982dc38904cdb",
        "name": "Local",
        "query": "SELECT COUNT(*) FROM organic_nodes_control_devicesetup;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 850,
        "y": 2160,
        "wires": [
            [
                "bee24cec67c2bd34"
            ]
        ]
    },
    {
        "id": "d0c2ba54e19b8c55",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "c3167a56125bb451",
        "name": "Local",
        "query": "SELECT COUNT(*) FROM organic_nodes_control_devicecompany;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 850,
        "y": 2380,
        "wires": [
            [
                "d33e30800772875f"
            ]
        ]
    },
    {
        "id": "62e7ac35611434e1",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "a1f79c2e32ad7c7a",
        "name": "Local",
        "query": "SELECT COUNT(*) FROM organic_nodes_control_devicetype;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 850,
        "y": 2600,
        "wires": [
            [
                "81037cfd1cca377c"
            ]
        ]
    },
    {
        "id": "b5ebb1e8c5b8f0a6",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "af65b1cf913c581f",
        "name": "Local",
        "query": "SELECT COUNT(*) FROM organic_nodes_control_device;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 850,
        "y": 2820,
        "wires": [
            [
                "c4fbb5d6bc4d1705"
            ]
        ]
    },
    {
        "id": "85d130497f8d1c1f",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "27233bf2b30dc86e",
        "name": "Local",
        "query": "SELECT COUNT(*) FROM organic_nodes_control_monitoreddevice;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 850,
        "y": 3040,
        "wires": [
            [
                "c96347f7b2d84cee"
            ]
        ]
    },
    {
        "id": "99e7a9144584bba9",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "28709fc7768f4c7f",
        "name": "Local",
        "query": "SELECT COUNT(*) FROM organic_nodes_control_circuit;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 850,
        "y": 3260,
        "wires": [
            [
                "aa0d13f19a9d2030"
            ]
        ]
    },
    {
        "id": "42bf92d9c2401950",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "74a7f93a69afdede",
        "name": "Local",
        "query": "SELECT COUNT(*) FROM organic_nodes_control_version;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 850,
        "y": 3480,
        "wires": [
            [
                "31f614c194128bce"
            ]
        ]
    },
    {
        "id": "727ee5c1eb284387",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "f89f668f9e414063",
        "name": "Local",
        "query": "SELECT COUNT(*) FROM organic_nodes_control_central;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 850,
        "y": 3700,
        "wires": [
            [
                "982c662a4032ef84"
            ]
        ]
    },
    {
        "id": "2a1aeab4bd948f2a",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "709f9014691197e8",
        "name": "Local",
        "query": "SELECT COUNT(*) FROM organic_nodes_control_setup;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 850,
        "y": 3920,
        "wires": [
            [
                "51db23b114da2966"
            ]
        ]
    },
    {
        "id": "b2c3afea262e3886",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "4a661830d296a9f8",
        "name": "Local",
        "query": "SELECT COUNT(*) FROM organic_nodes_control_mqttaccess;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 850,
        "y": 4140,
        "wires": [
            [
                "dc1c47f610201a5f"
            ]
        ]
    },
    {
        "id": "0d142624a94b296d",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "408c191f95cb3007",
        "name": "Local",
        "query": "SELECT COUNT(*) FROM organic_nodes_control_mqttdevice;",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 850,
        "y": 4360,
        "wires": [
            [
                "13f7ceb41536f862"
            ]
        ]
    },
    {
        "id": "4bc17b1f342a5caa",
        "type": "catch",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 1140,
        "y": 4600,
        "wires": [
            [
                "e3df92b83ed3ae9a"
            ]
        ]
    },
    {
        "id": "b4060dd8c7a655e4",
        "type": "link in",
        "z": "ba2e913aeb86a3ea",
        "g": "498764931f4b71aa",
        "name": "reinicio",
        "links": [
            "e3df92b83ed3ae9a"
        ],
        "x": 125,
        "y": 240,
        "wires": [
            [
                "b08c11b25699b2f8"
            ]
        ]
    },
    {
        "id": "e3df92b83ed3ae9a",
        "type": "link out",
        "z": "ba2e913aeb86a3ea",
        "g": "eaafc316090ff166",
        "name": "reinicio",
        "mode": "link",
        "links": [
            "b4060dd8c7a655e4"
        ],
        "x": 1275,
        "y": 4600,
        "wires": []
    },
    {
        "id": "9563ba90d9215170",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "g": "a8c438ba71c0a43f",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "31f3f9935cb4f352",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "ba3e902349e264be",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "3f683224044753f1",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "e0552d2f0fd6dea2",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "74871e582731b0bd",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "98121aaea0b07440",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "0e4fcc6c968d94a3",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "e183b8fa3d8479b4",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "9dc162f8e7b7b2fe",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 2440,
        "wires": [
            []
        ]
    },
    {
        "id": "a6d35a79da19b43c",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 2660,
        "wires": [
            []
        ]
    },
    {
        "id": "dd33804dd6b927f7",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 2880,
        "wires": [
            []
        ]
    },
    {
        "id": "a408e5bd433b3d6f",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 3100,
        "wires": [
            []
        ]
    },
    {
        "id": "77066d85e8050a93",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 3320,
        "wires": [
            []
        ]
    },
    {
        "id": "457c19c17b864058",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 3540,
        "wires": [
            []
        ]
    },
    {
        "id": "21abab79b5876624",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 3760,
        "wires": [
            []
        ]
    },
    {
        "id": "f4be6594b8091b7c",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 3980,
        "wires": [
            []
        ]
    },
    {
        "id": "b7d4b89cc7a9b690",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 4200,
        "wires": [
            []
        ]
    },
    {
        "id": "0b35b4a0d002c79f",
        "type": "postgresql",
        "z": "ba2e913aeb86a3ea",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 990,
        "y": 4420,
        "wires": [
            []
        ]
    },
    {
        "id": "b08c11b25699b2f8",
        "type": "stoptimer",
        "z": "ba2e913aeb86a3ea",
        "g": "498764931f4b71aa",
        "duration": "3",
        "units": "Second",
        "payloadtype": "num",
        "payloadval": "0",
        "name": "3 s",
        "x": 230,
        "y": 200,
        "wires": [
            [
                "199e644b24cd4bf6"
            ],
            []
        ]
    },
    {
        "id": "7cd8f04c0521442b",
        "type": "function",
        "z": "669b2c5a031c1ea8",
        "g": "596a5810aa7c9486",
        "name": "Verifica Cadastro no banco",
        "func": "var msg2 = {}\nmsg2.payload = msg.temp\n\nif (typeof msg.payload[0] != 'undefined'){\n    return [msg2, null];\n}\nreturn [null, msg2];",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 200,
        "wires": [
            [
                "18a9e0b0fa31c882"
            ],
            [
                "60d5acd974e6fbff"
            ]
        ]
    },
    {
        "id": "1b6f6d598dd77a2c",
        "type": "change",
        "z": "669b2c5a031c1ea8",
        "g": "596a5810aa7c9486",
        "name": "Duplica",
        "rules": [
            {
                "t": "set",
                "p": "temp",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 200,
        "wires": [
            [
                "db2edbb7a043786f"
            ]
        ]
    },
    {
        "id": "60d5acd974e6fbff",
        "type": "subflow:ba2e913aeb86a3ea",
        "z": "669b2c5a031c1ea8",
        "g": "596a5810aa7c9486",
        "name": "",
        "x": 910,
        "y": 220,
        "wires": []
    },
    {
        "id": "7002636ddb30f910",
        "type": "comment",
        "z": "669b2c5a031c1ea8",
        "g": "6a8629d966bc8d0e",
        "name": "Status",
        "info": "",
        "x": 150,
        "y": 340,
        "wires": []
    },
    {
        "id": "82cb70c003e87435",
        "type": "template",
        "z": "669b2c5a031c1ea8",
        "g": "6a8629d966bc8d0e",
        "name": "Verificando",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Verificando",
        "output": "str",
        "x": 370,
        "y": 400,
        "wires": [
            [
                "eaa563ef1aa3827a"
            ]
        ]
    },
    {
        "id": "eaa563ef1aa3827a",
        "type": "link out",
        "z": "669b2c5a031c1ea8",
        "g": "6a8629d966bc8d0e",
        "name": "status",
        "mode": "link",
        "links": [
            "6027f5ee6457bff5"
        ],
        "x": 505,
        "y": 400,
        "wires": []
    },
    {
        "id": "d33356dcd168fc2a",
        "type": "complete",
        "z": "669b2c5a031c1ea8",
        "g": "6a8629d966bc8d0e",
        "name": "",
        "scope": [
            "1b6f6d598dd77a2c"
        ],
        "uncaught": false,
        "x": 190,
        "y": 400,
        "wires": [
            [
                "82cb70c003e87435"
            ]
        ]
    },
    {
        "id": "b76ef466ac9a7e3a",
        "type": "template",
        "z": "669b2c5a031c1ea8",
        "g": "6a8629d966bc8d0e",
        "name": "Verificado",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Verificado",
        "output": "str",
        "x": 360,
        "y": 460,
        "wires": [
            [
                "eaa563ef1aa3827a"
            ]
        ]
    },
    {
        "id": "1249f497fea1a35d",
        "type": "complete",
        "z": "669b2c5a031c1ea8",
        "g": "6a8629d966bc8d0e",
        "name": "",
        "scope": [
            "18a9e0b0fa31c882"
        ],
        "uncaught": false,
        "x": 190,
        "y": 460,
        "wires": [
            [
                "b76ef466ac9a7e3a"
            ]
        ]
    },
    {
        "id": "6027f5ee6457bff5",
        "type": "link in",
        "z": "669b2c5a031c1ea8",
        "g": "8d913cb2ad803019",
        "name": "status",
        "links": [
            "95fc96bd3ac5a932",
            "eaa563ef1aa3827a"
        ],
        "x": 1015,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "34283419f9ffbc0e",
        "type": "link in",
        "z": "669b2c5a031c1ea8",
        "g": "596a5810aa7c9486",
        "name": "link in 3",
        "links": [
            "7c1258d1b0d8e2bb"
        ],
        "x": 305,
        "y": 240,
        "wires": [
            [
                "db2edbb7a043786f"
            ]
        ]
    },
    {
        "id": "857d65bc5c3a4532",
        "type": "comment",
        "z": "669b2c5a031c1ea8",
        "g": "596a5810aa7c9486",
        "name": "Verificação",
        "info": "",
        "x": 160,
        "y": 140,
        "wires": []
    },
    {
        "id": "37cd65d5cb164006",
        "type": "link in",
        "z": "669b2c5a031c1ea8",
        "g": "8d913cb2ad803019",
        "name": "out 1",
        "links": [
            "18a9e0b0fa31c882"
        ],
        "x": 1015,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "18a9e0b0fa31c882",
        "type": "link out",
        "z": "669b2c5a031c1ea8",
        "g": "596a5810aa7c9486",
        "name": "out 1",
        "mode": "link",
        "links": [
            "37cd65d5cb164006"
        ],
        "x": 835,
        "y": 180,
        "wires": []
    },
    {
        "id": "5d1828b78c891a98",
        "type": "comment",
        "z": "669b2c5a031c1ea8",
        "g": "8d913cb2ad803019",
        "name": "Verifica se quem enviou a msg possue cadastro",
        "info": "",
        "x": 230,
        "y": 60,
        "wires": []
    },
    {
        "id": "db2edbb7a043786f",
        "type": "postgresql",
        "z": "669b2c5a031c1ea8",
        "name": "",
        "query": "SELECT id FROM public.organic_nodes_control_mqttaccess where mqtt_id = '{{msg.temp.id}}';",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 430,
        "y": 200,
        "wires": [
            [
                "7cd8f04c0521442b"
            ]
        ]
    },
    {
        "id": "3b2cf9c3afe2d376",
        "type": "comment",
        "z": "34a182d43462f44e",
        "g": "bed7b3a0f177126a",
        "name": "Status",
        "info": "",
        "x": 130,
        "y": 320,
        "wires": []
    },
    {
        "id": "4688b5952e4cb207",
        "type": "template",
        "z": "34a182d43462f44e",
        "g": "bed7b3a0f177126a",
        "name": "Aclopando",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Aclopando",
        "output": "str",
        "x": 350,
        "y": 380,
        "wires": [
            [
                "1bdf45fec5432b9b"
            ]
        ]
    },
    {
        "id": "1bdf45fec5432b9b",
        "type": "link out",
        "z": "34a182d43462f44e",
        "g": "bed7b3a0f177126a",
        "name": "status",
        "mode": "link",
        "links": [
            "024d69ffae70bb43"
        ],
        "x": 485,
        "y": 380,
        "wires": []
    },
    {
        "id": "684991e42840bd1e",
        "type": "complete",
        "z": "34a182d43462f44e",
        "g": "bed7b3a0f177126a",
        "name": "",
        "scope": [
            "cf1501f639a22e09"
        ],
        "uncaught": false,
        "x": 170,
        "y": 380,
        "wires": [
            [
                "4688b5952e4cb207"
            ]
        ]
    },
    {
        "id": "18a6cb4f095a87ac",
        "type": "template",
        "z": "34a182d43462f44e",
        "g": "bed7b3a0f177126a",
        "name": "Aclopado",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Aclopado",
        "output": "str",
        "x": 340,
        "y": 440,
        "wires": [
            [
                "1bdf45fec5432b9b"
            ]
        ]
    },
    {
        "id": "d9c1878b7171502d",
        "type": "complete",
        "z": "34a182d43462f44e",
        "g": "bed7b3a0f177126a",
        "name": "",
        "scope": [
            "6c4792f058f9c526"
        ],
        "uncaught": false,
        "x": 170,
        "y": 440,
        "wires": [
            [
                "18a6cb4f095a87ac"
            ]
        ]
    },
    {
        "id": "cf1501f639a22e09",
        "type": "change",
        "z": "34a182d43462f44e",
        "g": "7d093e4c3e197c6a",
        "name": "Duplica",
        "rules": [
            {
                "t": "set",
                "p": "temp",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 200,
        "wires": [
            [
                "e2fe6791a0cfd82d"
            ]
        ]
    },
    {
        "id": "f12517394d74bd51",
        "type": "link out",
        "z": "34a182d43462f44e",
        "g": "7d093e4c3e197c6a",
        "name": "out 1",
        "mode": "link",
        "links": [
            "e93d0d47e2e97002"
        ],
        "x": 855,
        "y": 180,
        "wires": []
    },
    {
        "id": "6c4792f058f9c526",
        "type": "function",
        "z": "34a182d43462f44e",
        "g": "7d093e4c3e197c6a",
        "name": "Segregação",
        "func": "var msg2 = {}\nmsg2.payload = msg.temp\n\nif (typeof msg.payload[0].phase != \"undefined\"){\n    try{\n        msg2.payload.phase_A = msg.payload[0].phase[0]\n        msg2.payload.phase_B = msg.payload[0].phase[1]\n        msg2.payload.phase_C = msg.payload[0].phase[2]\n    } catch(e){}\n    return [msg2, null];\n}\nreturn [null, msg2];",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 200,
        "wires": [
            [
                "f12517394d74bd51"
            ],
            [
                "83e9296b6f199155"
            ]
        ]
    },
    {
        "id": "024d69ffae70bb43",
        "type": "link in",
        "z": "34a182d43462f44e",
        "g": "0592eb0f2887c3ea",
        "name": "status",
        "links": [
            "1bdf45fec5432b9b",
            "f91a7fb0598247fb"
        ],
        "x": 1035,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "e93d0d47e2e97002",
        "type": "link in",
        "z": "34a182d43462f44e",
        "g": "0592eb0f2887c3ea",
        "name": "out 1",
        "links": [
            "f12517394d74bd51"
        ],
        "x": 1035,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "7cd6bda2b53deacc",
        "type": "comment",
        "z": "34a182d43462f44e",
        "g": "7d093e4c3e197c6a",
        "name": "Adiciona phase",
        "info": "",
        "x": 160,
        "y": 140,
        "wires": []
    },
    {
        "id": "b2e99b61aad2d359",
        "type": "comment",
        "z": "34a182d43462f44e",
        "g": "0592eb0f2887c3ea",
        "name": "Indentificação das Fases",
        "info": "",
        "x": 150,
        "y": 60,
        "wires": []
    },
    {
        "id": "83e9296b6f199155",
        "type": "subflow:ba2e913aeb86a3ea",
        "z": "34a182d43462f44e",
        "g": "7d093e4c3e197c6a",
        "name": "",
        "x": 930,
        "y": 220,
        "wires": []
    },
    {
        "id": "63bfb9114da94960",
        "type": "switch",
        "z": "34a182d43462f44e",
        "g": "7d093e4c3e197c6a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 570,
        "y": 200,
        "wires": [
            [
                "6c4792f058f9c526"
            ]
        ]
    },
    {
        "id": "e2fe6791a0cfd82d",
        "type": "postgresql",
        "z": "34a182d43462f44e",
        "name": "",
        "query": "SELECT phase FROM public.organic_nodes_control_circuit WHERE id = (\n\tSELECT circuit_id FROM public.organic_nodes_control_setup WHERE device_id = (\n\t\tSELECT device_id FROM public.organic_nodes_control_mqttdevice WHERE mqtt_access_id = (\n\t\t\tSELECT id FROM public.organic_nodes_control_mqttaccess WHERE mqtt_id = '{{msg.temp.id}}')))",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 200,
        "wires": [
            [
                "63bfb9114da94960"
            ]
        ]
    },
    {
        "id": "3d4416342cc7ba80",
        "type": "link in",
        "z": "09685600d012d69f",
        "g": "e83a4a9578dffbb9",
        "name": "status",
        "links": [
            "2d5d45d995cd7950",
            "bfbc8fe938c7db9b"
        ],
        "x": 775,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "ec21d3efa2d6bffe",
        "type": "comment",
        "z": "09685600d012d69f",
        "g": "cbd92a9404646671",
        "name": "Status",
        "info": "",
        "x": 130,
        "y": 680,
        "wires": []
    },
    {
        "id": "613c357d84c4b290",
        "type": "template",
        "z": "09685600d012d69f",
        "g": "cbd92a9404646671",
        "name": "Verificando",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Verificando",
        "output": "str",
        "x": 350,
        "y": 740,
        "wires": [
            [
                "2d5d45d995cd7950"
            ]
        ]
    },
    {
        "id": "2d5d45d995cd7950",
        "type": "link out",
        "z": "09685600d012d69f",
        "g": "cbd92a9404646671",
        "name": "status",
        "mode": "link",
        "links": [
            "3d4416342cc7ba80"
        ],
        "x": 485,
        "y": 740,
        "wires": []
    },
    {
        "id": "f28f5b07b82ad25f",
        "type": "complete",
        "z": "09685600d012d69f",
        "g": "cbd92a9404646671",
        "name": "",
        "scope": [
            "9de51b97c7e82fbe"
        ],
        "uncaught": false,
        "x": 170,
        "y": 740,
        "wires": [
            [
                "613c357d84c4b290"
            ]
        ]
    },
    {
        "id": "5dba1dd7f8ef9f37",
        "type": "link out",
        "z": "09685600d012d69f",
        "g": "e446abe020d042ad",
        "name": "memoria",
        "mode": "link",
        "links": [
            "ef5798fc2f337728"
        ],
        "x": 395,
        "y": 580,
        "wires": []
    },
    {
        "id": "844943af8c7d4e73",
        "type": "comment",
        "z": "09685600d012d69f",
        "g": "3065cbbcf25013fd",
        "name": "Pega datas",
        "info": "",
        "x": 150,
        "y": 140,
        "wires": []
    },
    {
        "id": "ef5798fc2f337728",
        "type": "link in",
        "z": "09685600d012d69f",
        "g": "3065cbbcf25013fd",
        "name": "memoria",
        "links": [
            "5dba1dd7f8ef9f37"
        ],
        "x": 305,
        "y": 240,
        "wires": [
            [
                "0d0cad53f07a5b92"
            ]
        ]
    },
    {
        "id": "802c2f6560b5c23b",
        "type": "comment",
        "z": "09685600d012d69f",
        "g": "e446abe020d042ad",
        "name": "Verifica  a diferença entre as datas da ultima e da primeira mensagem do banco",
        "info": "",
        "x": 360,
        "y": 480,
        "wires": []
    },
    {
        "id": "692ad4797710b201",
        "type": "link in",
        "z": "09685600d012d69f",
        "g": "e446abe020d042ad",
        "name": "verifica",
        "links": [
            "1b881169df1b0798"
        ],
        "x": 115,
        "y": 540,
        "wires": [
            [
                "57a282e093ade67f"
            ]
        ]
    },
    {
        "id": "1b881169df1b0798",
        "type": "link out",
        "z": "09685600d012d69f",
        "g": "3065cbbcf25013fd",
        "name": "verifica",
        "mode": "link",
        "links": [
            "692ad4797710b201"
        ],
        "x": 755,
        "y": 380,
        "wires": []
    },
    {
        "id": "49029129029e0331",
        "type": "comment",
        "z": "09685600d012d69f",
        "g": "e83a4a9578dffbb9",
        "name": "Mantem sempre o banco com uma quantidade fixa de dados",
        "info": "",
        "x": 260,
        "y": 60,
        "wires": []
    },
    {
        "id": "a03396ba0ddce445",
        "type": "change",
        "z": "09685600d012d69f",
        "g": "3065cbbcf25013fd",
        "name": "cria msg.date_inicial",
        "rules": [
            {
                "t": "set",
                "p": "date_inicial",
                "pt": "msg",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 200,
        "wires": [
            [
                "9d32063781414887"
            ]
        ]
    },
    {
        "id": "7c7f31bbd0689a19",
        "type": "change",
        "z": "09685600d012d69f",
        "g": "3065cbbcf25013fd",
        "name": "cria msg.date_atual",
        "rules": [
            {
                "t": "set",
                "p": "date_atual",
                "pt": "msg",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 260,
        "wires": [
            [
                "96d681e45de21a0e"
            ]
        ]
    },
    {
        "id": "57a282e093ade67f",
        "type": "function",
        "z": "09685600d012d69f",
        "g": "e446abe020d042ad",
        "name": "Verifica datas",
        "func": "msg.payload = \"\"\n\nif (msg.date_atual != null && msg.date_inicial != null) {\n    var periodo = msg.date_atual.date_time_stamp - msg.date_inicial.date_time_stamp\n    var qtd_dias = ((periodo / 1000) / 3600) / 24\n\n    var data  = JSON.parse(JSON.stringify(msg.date_inicial))\n\n    msg.qtd = data\n    let sinc = global.get(\"sincronizando_remoto\") || false\n\n    if ((qtd_dias > msg.permanence_date || msg.memory_use > 85) && sinc == false){\n        msg.payload = \"DELETE FROM public.organic_nodes_control_temperaturemeasurement \" +\n        \"WHERE measurement_id IN (SELECT id FROM \"+\"(SELECT id FROM public.organic_nodes_control_measurement WHERE date_time_stamp <= '\" + data.date_time_stamp +\"') t);\" +\n        \"DELETE FROM public.organic_nodes_control_energymeasure \" +\n        \"WHERE measurement_id IN (SELECT id FROM \"+\"(SELECT id FROM public.organic_nodes_control_measurement WHERE date_time_stamp <= '\" + data.date_time_stamp +\"') t);\" +\n        \"DELETE FROM public.organic_nodes_control_powermeasure \" +\n        \"WHERE measurement_id IN (SELECT id FROM \"+\"(SELECT id FROM public.organic_nodes_control_measurement WHERE date_time_stamp <= '\" + data.date_time_stamp +\"') t);\" +\n        \"DELETE FROM public.organic_nodes_control_voltagelagmeasure \" +\n        \"WHERE measurement_id IN (SELECT id FROM \"+\"(SELECT id FROM public.organic_nodes_control_measurement WHERE date_time_stamp <= '\" + data.date_time_stamp +\"') t);\" +\n        \"DELETE FROM public.organic_nodes_control_frequencymeasure \" +\n        \"WHERE measurement_id IN (SELECT id FROM \"+\"(SELECT id FROM public.organic_nodes_control_measurement WHERE date_time_stamp <= '\" + data.date_time_stamp +\"') t);\" +\n        \"DELETE FROM public.organic_nodes_control_measurement \" +\n        \"WHERE id IN (SELECT id FROM \"+\"(SELECT id FROM public.organic_nodes_control_measurement WHERE date_time_stamp <= '\" + data.date_time_stamp +\"') t);\" +\n        \n        \"DELETE FROM public.organic_nodes_control_cpuassessment WHERE date_time_stamp <= '\" + data.date_time_stamp + \"';\" +\n        \"DELETE FROM public.organic_nodes_control_memoryassessment WHERE date_time_stamp <= '\" + data.date_time_stamp + \"';\" \n        \n        return msg;\n    }\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 540,
        "wires": [
            [
                "5dba1dd7f8ef9f37",
                "ceccaac9a358c815"
            ]
        ]
    },
    {
        "id": "8644a79af8c9a0a7",
        "type": "change",
        "z": "09685600d012d69f",
        "g": "3065cbbcf25013fd",
        "name": "cria permanence_date",
        "rules": [
            {
                "t": "move",
                "p": "payload[0].data_permanence",
                "pt": "msg",
                "to": "permanence_date",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 320,
        "wires": [
            [
                "cb0171b2927b5304"
            ]
        ]
    },
    {
        "id": "1e0806e065ace9dc",
        "type": "change",
        "z": "09685600d012d69f",
        "g": "3065cbbcf25013fd",
        "name": "cria memory_use",
        "rules": [
            {
                "t": "move",
                "p": "payload[0].memory_use",
                "pt": "msg",
                "to": "memory_use",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 380,
        "wires": [
            [
                "1b881169df1b0798"
            ]
        ]
    },
    {
        "id": "692aacbe40f4705b",
        "type": "function",
        "z": "09685600d012d69f",
        "g": "3065cbbcf25013fd",
        "name": "central_id",
        "func": "msg.central_id = env.get('CENTRAL')\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 200,
        "wires": [
            [
                "0d0cad53f07a5b92"
            ]
        ]
    },
    {
        "id": "96d681e45de21a0e",
        "type": "postgresql",
        "z": "09685600d012d69f",
        "g": "3065cbbcf25013fd",
        "name": "Permanencia",
        "query": "SELECT * FROM public.organic_nodes_control_central where id = {{msg.central_id}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 430,
        "y": 320,
        "wires": [
            [
                "8644a79af8c9a0a7"
            ]
        ]
    },
    {
        "id": "0d0cad53f07a5b92",
        "type": "postgresql",
        "z": "09685600d012d69f",
        "g": "3065cbbcf25013fd",
        "name": "Data Inicial",
        "query": "SELECT * FROM public.organic_nodes_control_measurement order by date_time_stamp asc limit 1",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 430,
        "y": 200,
        "wires": [
            [
                "a03396ba0ddce445"
            ]
        ]
    },
    {
        "id": "9d32063781414887",
        "type": "postgresql",
        "z": "09685600d012d69f",
        "g": "3065cbbcf25013fd",
        "name": "Data final",
        "query": "SELECT * FROM public.organic_nodes_control_measurement order by date_time_stamp desc limit 1",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 420,
        "y": 260,
        "wires": [
            [
                "7c7f31bbd0689a19"
            ]
        ]
    },
    {
        "id": "cb0171b2927b5304",
        "type": "postgresql",
        "z": "09685600d012d69f",
        "g": "3065cbbcf25013fd",
        "name": "Memoria",
        "query": "SELECT (100 - (memory_free * 100 / memory_total)) as memory_use FROM public.organic_nodes_control_memoryassessment \nwhere central_id = {{msg.central_id}}\norder by date_time_stamp desc limit 1",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 420,
        "y": 380,
        "wires": [
            [
                "1e0806e065ace9dc"
            ]
        ]
    },
    {
        "id": "ceccaac9a358c815",
        "type": "postgresql",
        "z": "09685600d012d69f",
        "g": "e446abe020d042ad",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 430,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "21aa61e535f67716",
        "type": "link out",
        "z": "f74e1af5aec31631",
        "g": "a08702cd6d20b021",
        "name": "inserte",
        "mode": "link",
        "links": [
            "cf4ec4ad0b3238d1",
            "d23c3bb417f0e578"
        ],
        "x": 735,
        "y": 200,
        "wires": []
    },
    {
        "id": "34446c17128d3e27",
        "type": "switch",
        "z": "f74e1af5aec31631",
        "g": "a08702cd6d20b021",
        "name": "Identificação instalação",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Monofasico",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Bifasico",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Trifasico",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 310,
        "y": 200,
        "wires": [
            [
                "453064c635bce4af"
            ],
            [
                "b0bd82357acc1a58"
            ],
            [
                "90f3aa363caf5125"
            ]
        ]
    },
    {
        "id": "453064c635bce4af",
        "type": "template",
        "z": "f74e1af5aec31631",
        "g": "a08702cd6d20b021",
        "name": "Cria instancia Monofasico",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO public.organic_nodes_control_measurement(\n\tdate_time_stamp,\tmessage_counter,\tsetup_id,\tsource, generation)\n\tVALUES ('{{payload.date_time_stamp}}', {{payload.message_counter}}, (SELECT id FROM public.organic_nodes_control_setup WHERE (device_id = (SELECT device_id FROM public.organic_nodes_control_mqttdevice WHERE (mqtt_access_id = (SELECT id FROM public.organic_nodes_control_mqttaccess WHERE (mqtt_id = '{{payload.id}}')))))), 0, {{payload.generation}});\n\nINSERT INTO public.organic_nodes_control_energymeasure(\n\tphase, current, current_sf, voltage, voltage_sf, measurement_id)\n\tVALUES ('{{payload.phase_A}}', {{payload.current_A}},{{payload.current_A_sf}},{{payload.voltage_A}},{{payload.voltage_A_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}') LIMIT 1));\n\t\nINSERT INTO public.organic_nodes_control_powermeasure(\n\tphase, voltage_current_angle, voltage_current_angle_sf,\tpower_factor,\tactive_power,\tactive_power_sf,\treactive_power,\treactive_power_sf,\tapparent_power,\tapparent_power_sf\t, measurement_id)\n\tVALUES ('{{payload.phase_A}}', {{payload.voltage_current_angle_A}},{{payload.voltage_current_angle_A_sf}},{{payload.power_factor_A}},{{payload.active_power_A}}, {{payload.active_power_A_sf}}, {{payload.reactive_power_A}}, {{payload.reactive_power_A_sf}}, {{payload.apparent_power_A}}, {{payload.apparent_power_A_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}') LIMIT 1));",
        "output": "str",
        "x": 570,
        "y": 160,
        "wires": [
            [
                "21aa61e535f67716"
            ]
        ]
    },
    {
        "id": "b0bd82357acc1a58",
        "type": "template",
        "z": "f74e1af5aec31631",
        "d": true,
        "g": "a08702cd6d20b021",
        "name": "Cria instancia Bifasico",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO public.organic_nodes_control_measurement(\n\tdate_time_stamp,\tmessage_counter,\tsetup_id,\tsource, generation)\n\tVALUES ('{{payload.date_time_stamp}}', {{payload.message_counter}}, (SELECT id FROM public.organic_nodes_control_setup WHERE (device_id = (SELECT device_id FROM public.organic_nodes_control_mqttdevice WHERE (mqtt_access_id = (SELECT id FROM public.organic_nodes_control_mqttaccess WHERE (mqtt_id = '{{payload.id}}')))))), 0, {{payload.generation}});\n\nINSERT INTO public.organic_nodes_control_frequencymeasure(\n\tfrequency,\tfrequency_sf,\tmeasurement_id)\n\tVALUES ({{payload.frequency}}, {{payload.frequency_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}') LIMIT 1));\n\nINSERT INTO public.organic_nodes_control_energymeasure(\n\tphase, current, current_sf, voltage, voltage_sf, measurement_id)\n\tVALUES ('{{payload.phase_A}}', {{payload.current_A}},{{payload.current_A_sf}},{{payload.voltage_A}},{{payload.voltage_A_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}') LIMIT 1));\n\nINSERT INTO public.organic_nodes_control_powermeasure(\n\tphase, voltage_current_angle, voltage_current_angle_sf,\tpower_factor,\tactive_power,\tactive_power_sf,\treactive_power,\treactive_power_sf,\tapparent_power,\tapparent_power_sf\t, measurement_id)\n\tVALUES ('{{payload.phase_A}}', {{payload.voltage_current_angle_A}},{{payload.voltage_current_angle_A_sf}},{{payload.power_factor_A}},{{payload.active_power_A}}, {{payload.active_power_A_sf}}, {{payload.reactive_power_A}}, {{payload.reactive_power_A_sf}}, {{payload.apparent_power_A}}, {{payload.apparent_power_A_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}') LIMIT 1));\n\nINSERT INTO public.organic_nodes_control_energymeasure(\n\tphase, current, current_sf, voltage, voltage_sf, measurement_id)\n\tVALUES ('{{payload.phase_B}}', {{payload.current_B}},{{payload.current_B_sf}},{{payload.voltage_B}},{{payload.voltage_B_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}') LIMIT 1));\n\nINSERT INTO public.organic_nodes_control_powermeasure(\n\tphase, voltage_current_angle, voltage_current_angle_sf,\tpower_factor,\tactive_power,\tactive_power_sf,\treactive_power,\treactive_power_sf,\tapparent_power,\tapparent_power_sf\t, measurement_id)\n\tVALUES ('{{payload.phase_B}}', {{payload.voltage_current_angle_B}},{{payload.voltage_current_angle_B_sf}},{{payload.power_factor_B}},{{payload.active_power_B}}, {{payload.active_power_B_sf}}, {{payload.reactive_power_B}}, {{payload.reactive_power_B_sf}}, {{payload.apparent_power_B}}, {{payload.apparent_power_B_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}') LIMIT 1));",
        "output": "str",
        "x": 560,
        "y": 200,
        "wires": [
            [
                "21aa61e535f67716"
            ]
        ]
    },
    {
        "id": "90f3aa363caf5125",
        "type": "template",
        "z": "f74e1af5aec31631",
        "g": "a08702cd6d20b021",
        "name": "Cria instancia Trifasico",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO public.organic_nodes_control_measurement(\n\tdate_time_stamp,\tmessage_counter,\tsetup_id,\tsource, generation)\n\tVALUES ('{{payload.date_time_stamp}}', {{payload.message_counter}}, (SELECT id FROM public.organic_nodes_control_setup WHERE (device_id = (SELECT device_id FROM public.organic_nodes_control_mqttdevice WHERE (mqtt_access_id = (SELECT id FROM public.organic_nodes_control_mqttaccess WHERE (mqtt_id = '{{payload.id}}')))))), 0, {{payload.generation}});\n\nINSERT INTO public.organic_nodes_control_frequencymeasure(\n\tfrequency,\tfrequency_sf,\tmeasurement_id)\n\tVALUES ({{payload.frequency}}, {{payload.frequency_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}') LIMIT 1));\n\nINSERT INTO public.organic_nodes_control_temperaturemeasurement(\n\ttemperature,\ttemperature_sf,\tmeasurement_id)\n\tVALUES ({{payload.temperature}}, {{payload.temperature_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}') LIMIT 1));\n\nINSERT INTO public.organic_nodes_control_energymeasure(\n\tphase, current, current_sf, voltage, voltage_sf, measurement_id)\n\tVALUES ('{{payload.phase_A}}', {{payload.current_A}},{{payload.current_A_sf}},{{payload.voltage_A}},{{payload.voltage_A_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}') LIMIT 1));\n\nINSERT INTO public.organic_nodes_control_powermeasure(\n\tphase, voltage_current_angle, voltage_current_angle_sf,\tpower_factor,\tactive_power,\tactive_power_sf,\treactive_power,\treactive_power_sf,\tapparent_power,\tapparent_power_sf\t, measurement_id)\n\tVALUES ('{{payload.phase_A}}', {{payload.voltage_current_angle_A}},{{payload.voltage_current_angle_A_sf}},{{payload.power_factor_A}},{{payload.active_power_A}}, {{payload.active_power_A_sf}}, {{payload.reactive_power_A}}, {{payload.reactive_power_A_sf}}, {{payload.apparent_power_A}}, {{payload.apparent_power_A_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}') LIMIT 1));\n\nINSERT INTO public.organic_nodes_control_energymeasure(\n\tphase, current, current_sf, voltage, voltage_sf, measurement_id)\n\tVALUES ('{{payload.phase_B}}', {{payload.current_B}},{{payload.current_B_sf}},{{payload.voltage_B}},{{payload.voltage_B_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}') LIMIT 1));\n\nINSERT INTO public.organic_nodes_control_powermeasure(\n\tphase, voltage_current_angle, voltage_current_angle_sf,\tpower_factor,\tactive_power,\tactive_power_sf,\treactive_power,\treactive_power_sf,\tapparent_power,\tapparent_power_sf\t, measurement_id)\n\tVALUES ('{{payload.phase_B}}', {{payload.voltage_current_angle_B}},{{payload.voltage_current_angle_B_sf}},{{payload.power_factor_B}},{{payload.active_power_B}}, {{payload.active_power_B_sf}}, {{payload.reactive_power_B}}, {{payload.reactive_power_B_sf}}, {{payload.apparent_power_B}}, {{payload.apparent_power_B_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}') LIMIT 1));\n\nINSERT INTO public.organic_nodes_control_voltagelagmeasure(\n\tangle, angle_sf,\tphase_combination, measurement_id)\n\tVALUES ({{payload.angle_voltage_A_B}}, {{payload.angle_voltage_A_B_sf}}, '{{payload.phase_A}}{{payload.phase_B}}', (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}') LIMIT 1));\n\t\nINSERT INTO public.organic_nodes_control_energymeasure(\n\tphase, current, current_sf, voltage, voltage_sf, measurement_id)\n\tVALUES ('{{payload.phase_C}}', {{payload.current_C}},{{payload.current_C_sf}},{{payload.voltage_C}},{{payload.voltage_C_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}') LIMIT 1));\n\nINSERT INTO public.organic_nodes_control_powermeasure(\n\tphase, voltage_current_angle, voltage_current_angle_sf,\tpower_factor,\tactive_power,\tactive_power_sf,\treactive_power,\treactive_power_sf,\tapparent_power,\tapparent_power_sf\t, measurement_id)\n\tVALUES ('{{payload.phase_C}}', {{payload.voltage_current_angle_C}},{{payload.voltage_current_angle_C_sf}},{{payload.power_factor_C}},{{payload.active_power_C}}, {{payload.active_power_C_sf}}, {{payload.reactive_power_C}}, {{payload.reactive_power_C_sf}}, {{payload.apparent_power_C}}, {{payload.apparent_power_C_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}') LIMIT 1));\n\nINSERT INTO public.organic_nodes_control_voltagelagmeasure(\n\tangle, angle_sf,\tphase_combination, measurement_id)\n\tVALUES ({{payload.angle_voltage_A_C}}, {{payload.angle_voltage_A_C_sf}}, '{{payload.phase_A}}{{payload.phase_C}}', (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}') LIMIT 1));\n\nINSERT INTO public.organic_nodes_control_voltagelagmeasure(\n\tangle, angle_sf,\tphase_combination, measurement_id)\n\tVALUES ({{payload.angle_voltage_B_C}}, {{payload.angle_voltage_B_C_sf}}, '{{payload.phase_B}}{{payload.phase_C}}', (SELECT id FROM public.organic_nodes_control_measurement WHERE (message_counter = {{payload.message_counter}} AND date_time_stamp = '{{payload.date_time_stamp}}') LIMIT 1));",
        "output": "str",
        "x": 560,
        "y": 240,
        "wires": [
            [
                "21aa61e535f67716"
            ]
        ]
    },
    {
        "id": "46142d271d11c1b1",
        "type": "comment",
        "z": "f74e1af5aec31631",
        "g": "ba05562c85557e0e",
        "name": "Status",
        "info": "",
        "x": 150,
        "y": 340,
        "wires": []
    },
    {
        "id": "d52dac65f46168b2",
        "type": "template",
        "z": "f74e1af5aec31631",
        "g": "ba05562c85557e0e",
        "name": "Instanciando",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Instanciando",
        "output": "str",
        "x": 370,
        "y": 400,
        "wires": [
            [
                "7655d507feebce3a"
            ]
        ]
    },
    {
        "id": "7655d507feebce3a",
        "type": "link out",
        "z": "f74e1af5aec31631",
        "g": "ba05562c85557e0e",
        "name": "status",
        "mode": "link",
        "links": [
            "9252ff4dd2bc68b5"
        ],
        "x": 505,
        "y": 400,
        "wires": []
    },
    {
        "id": "c87e99b5c4590a7e",
        "type": "complete",
        "z": "f74e1af5aec31631",
        "g": "ba05562c85557e0e",
        "name": "",
        "scope": [
            "34446c17128d3e27"
        ],
        "uncaught": false,
        "x": 190,
        "y": 400,
        "wires": [
            [
                "d52dac65f46168b2"
            ]
        ]
    },
    {
        "id": "a00453562aaf80c5",
        "type": "template",
        "z": "f74e1af5aec31631",
        "g": "ba05562c85557e0e",
        "name": "Instanciado",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Instanciado",
        "output": "str",
        "x": 370,
        "y": 460,
        "wires": [
            [
                "7655d507feebce3a"
            ]
        ]
    },
    {
        "id": "1e32a1581432b5b5",
        "type": "complete",
        "z": "f74e1af5aec31631",
        "g": "ba05562c85557e0e",
        "name": "",
        "scope": [
            "21aa61e535f67716"
        ],
        "uncaught": false,
        "x": 190,
        "y": 460,
        "wires": [
            [
                "a00453562aaf80c5"
            ]
        ]
    },
    {
        "id": "d23c3bb417f0e578",
        "type": "link in",
        "z": "f74e1af5aec31631",
        "g": "4bbb49ad40394687",
        "name": "out 1",
        "links": [
            "21aa61e535f67716"
        ],
        "x": 755,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "32f85d54cb02d364",
        "type": "comment",
        "z": "f74e1af5aec31631",
        "g": "a08702cd6d20b021",
        "name": "Indentifica tópico",
        "info": "",
        "x": 180,
        "y": 140,
        "wires": []
    },
    {
        "id": "9252ff4dd2bc68b5",
        "type": "link in",
        "z": "f74e1af5aec31631",
        "g": "4bbb49ad40394687",
        "name": "status",
        "links": [
            "7655d507feebce3a",
            "b6e02291ae67bdb6"
        ],
        "x": 755,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "e130368244133b83",
        "type": "comment",
        "z": "f74e1af5aec31631",
        "g": "4bbb49ad40394687",
        "name": "Instanciação",
        "info": "",
        "x": 130,
        "y": 60,
        "wires": []
    },
    {
        "id": "78f9a562fec4fcc1",
        "type": "function",
        "z": "d48fb9af316b0fe2",
        "g": "af5ab425cf03c631",
        "name": "Parametros",
        "func": "msg.queryParameters = msg.payload\n\nlet sinc = global.get(\"sincronizando_remoto\") || false\n\nif (sinc == false)\n    return [msg, msg];\nelse \n    return [null, msg];",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 220,
        "wires": [
            [
                "a1db2bad0a9bc913"
            ],
            [
                "12711aee6cc91af8"
            ]
        ]
    },
    {
        "id": "5d43614299a5b76d",
        "type": "link in",
        "z": "d48fb9af316b0fe2",
        "g": "3c18d8686a88df81",
        "name": "status",
        "links": [
            "7f0a1ca5317c64f2",
            "fa6b3a1cf7951082",
            "b04a2b22713471b7"
        ],
        "x": 535,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "f64565d0614bd4d9",
        "type": "comment",
        "z": "d48fb9af316b0fe2",
        "g": "e57930d954bad51a",
        "name": "Status",
        "info": "",
        "x": 130,
        "y": 340,
        "wires": []
    },
    {
        "id": "eb8ac13e75487dce",
        "type": "template",
        "z": "d48fb9af316b0fe2",
        "g": "e57930d954bad51a",
        "name": "Salvando",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Salvando",
        "output": "str",
        "x": 340,
        "y": 400,
        "wires": [
            [
                "7f0a1ca5317c64f2"
            ]
        ]
    },
    {
        "id": "7f0a1ca5317c64f2",
        "type": "link out",
        "z": "d48fb9af316b0fe2",
        "g": "e57930d954bad51a",
        "name": "status",
        "mode": "link",
        "links": [
            "5d43614299a5b76d"
        ],
        "x": 465,
        "y": 400,
        "wires": []
    },
    {
        "id": "e80b87d89c140237",
        "type": "complete",
        "z": "d48fb9af316b0fe2",
        "g": "e57930d954bad51a",
        "name": "",
        "scope": [
            "78f9a562fec4fcc1"
        ],
        "uncaught": false,
        "x": 170,
        "y": 400,
        "wires": [
            [
                "eb8ac13e75487dce"
            ]
        ]
    },
    {
        "id": "2d7925ba24b17ddc",
        "type": "comment",
        "z": "d48fb9af316b0fe2",
        "g": "af5ab425cf03c631",
        "name": "Adiciona os parametros de envio da mesagem para o banco",
        "info": "",
        "x": 300,
        "y": 140,
        "wires": []
    },
    {
        "id": "9e824dc92c233e92",
        "type": "template",
        "z": "d48fb9af316b0fe2",
        "g": "e57930d954bad51a",
        "name": "Salvo",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Salvo",
        "output": "str",
        "x": 330,
        "y": 460,
        "wires": [
            [
                "7f0a1ca5317c64f2"
            ]
        ]
    },
    {
        "id": "12225f8d5beaf555",
        "type": "complete",
        "z": "d48fb9af316b0fe2",
        "g": "e57930d954bad51a",
        "name": "",
        "scope": [
            "a0a5d9ac3de89d35",
            "3be5c77014fb982e"
        ],
        "uncaught": false,
        "x": 170,
        "y": 460,
        "wires": [
            [
                "9e824dc92c233e92"
            ]
        ]
    },
    {
        "id": "f65d3aa1e4cfc455",
        "type": "comment",
        "z": "d48fb9af316b0fe2",
        "g": "3c18d8686a88df81",
        "name": "Salvamento das medições no banco local e remoto",
        "info": "",
        "x": 230,
        "y": 60,
        "wires": []
    },
    {
        "id": "12711aee6cc91af8",
        "type": "postgresql",
        "z": "d48fb9af316b0fe2",
        "g": "af5ab425cf03c631",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "a1db2bad0a9bc913",
        "type": "postgresql",
        "z": "d48fb9af316b0fe2",
        "g": "af5ab425cf03c631",
        "name": "NOCS",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "76140eddd162166d",
        "type": "comment",
        "z": "9f6f8230457312f3",
        "g": "0972a4a4ea90b52a",
        "name": "Pega Mensagem",
        "info": "",
        "x": 160,
        "y": 140,
        "wires": []
    },
    {
        "id": "2f31c77966406561",
        "type": "subflow:3c1ed78bc6df6cbd",
        "z": "9f6f8230457312f3",
        "g": "0972a4a4ea90b52a",
        "name": "",
        "x": 150,
        "y": 200,
        "wires": [
            [
                "bf995a2ef240a2ec"
            ]
        ]
    },
    {
        "id": "bf995a2ef240a2ec",
        "type": "subflow:d85720db46554979",
        "z": "9f6f8230457312f3",
        "g": "17e544175a980e9e",
        "name": "",
        "x": 440,
        "y": 200,
        "wires": [
            [
                "eaed3b45a16c7861"
            ]
        ]
    },
    {
        "id": "c05d7f1b5282f789",
        "type": "link in",
        "z": "9f6f8230457312f3",
        "g": "1878674991d9b330",
        "name": "Tratamento dos dados",
        "links": [
            "8d6215cff0b58e0d",
            "deff96f79e54b357"
        ],
        "x": 115,
        "y": 360,
        "wires": [
            [
                "e06adc1055db882b"
            ]
        ]
    },
    {
        "id": "eaed3b45a16c7861",
        "type": "link out",
        "z": "9f6f8230457312f3",
        "g": "17e544175a980e9e",
        "name": "Verificação de cadastro em banco",
        "mode": "link",
        "links": [
            "cd20082090c4089f"
        ],
        "x": 615,
        "y": 200,
        "wires": []
    },
    {
        "id": "13fe1aeb38fe44f7",
        "type": "link out",
        "z": "9f6f8230457312f3",
        "g": "1878674991d9b330",
        "name": "inserção",
        "mode": "link",
        "links": [
            "c36938b99c6ef84d"
        ],
        "x": 375,
        "y": 360,
        "wires": []
    },
    {
        "id": "05381af15160533c",
        "type": "comment",
        "z": "9f6f8230457312f3",
        "g": "17e544175a980e9e",
        "name": "Trata mensagem",
        "info": "",
        "x": 380,
        "y": 140,
        "wires": []
    },
    {
        "id": "352bb99953728a78",
        "type": "comment",
        "z": "9f6f8230457312f3",
        "g": "1878674991d9b330",
        "name": "Formata mensagem",
        "info": "",
        "x": 170,
        "y": 300,
        "wires": []
    },
    {
        "id": "55da2a4df89cd2e6",
        "type": "comment",
        "z": "9f6f8230457312f3",
        "g": "ee3e7e6dc75cbd81",
        "name": "Recebimento da Mensagem",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "e06adc1055db882b",
        "type": "subflow:96676db9a2f887ed",
        "z": "9f6f8230457312f3",
        "g": "1878674991d9b330",
        "name": "",
        "x": 250,
        "y": 360,
        "wires": [
            [
                "13fe1aeb38fe44f7"
            ]
        ]
    },
    {
        "id": "709d3e83688a9b4b",
        "type": "comment",
        "z": "9f6f8230457312f3",
        "g": "d3c1470185340454",
        "name": "Sincronimo inicial das configurações do banco de dados",
        "info": "",
        "x": 280,
        "y": 560,
        "wires": []
    },
    {
        "id": "820c2d04e962724e",
        "type": "comment",
        "z": "9f6f8230457312f3",
        "g": "dcf654098a681aa7",
        "name": "Configurações",
        "info": "",
        "x": 110,
        "y": 480,
        "wires": []
    },
    {
        "id": "37149fc0ba2ae4f6",
        "type": "inject",
        "z": "9f6f8230457312f3",
        "g": "d3c1470185340454",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "process.env.HOST_DB",
        "payloadType": "jsonata",
        "x": 150,
        "y": 620,
        "wires": [
            [
                "2c485295a4013537"
            ]
        ]
    },
    {
        "id": "2c485295a4013537",
        "type": "subflow:ba2e913aeb86a3ea",
        "z": "9f6f8230457312f3",
        "g": "d3c1470185340454",
        "name": "",
        "x": 330,
        "y": 620,
        "wires": []
    },
    {
        "id": "fd6966f62c5f4377",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "g": "1c1ece291a498e9c",
        "name": "Inserção",
        "info": "",
        "x": 400,
        "y": 300,
        "wires": []
    },
    {
        "id": "51f69b1bdc9a3ec2",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "g": "a103f22c7ee8d82d",
        "name": "Verificação de cadastro em banco",
        "info": "",
        "x": 220,
        "y": 140,
        "wires": []
    },
    {
        "id": "deff96f79e54b357",
        "type": "link out",
        "z": "e8287d7944e724f7",
        "g": "a103f22c7ee8d82d",
        "name": "Tratamento dos dados",
        "mode": "link",
        "links": [
            "c05d7f1b5282f789"
        ],
        "x": 425,
        "y": 200,
        "wires": []
    },
    {
        "id": "cd20082090c4089f",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "g": "a103f22c7ee8d82d",
        "name": "Verificação de cadastro em banco",
        "links": [
            "72070532429bb061",
            "af3c1905ae0804ed",
            "eaed3b45a16c7861"
        ],
        "x": 115,
        "y": 200,
        "wires": [
            [
                "02e1108f9f5494c7"
            ]
        ]
    },
    {
        "id": "be7050e23063ac3f",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "g": "69ec59095e3f8d2e",
        "name": "Parametros do postgres",
        "info": "",
        "x": 680,
        "y": 300,
        "wires": []
    },
    {
        "id": "2ff7790cc95546a4",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "g": "10821c84251bd152",
        "name": "Pega Fases",
        "info": "",
        "x": 150,
        "y": 300,
        "wires": []
    },
    {
        "id": "02e1108f9f5494c7",
        "type": "subflow:669b2c5a031c1ea8",
        "z": "e8287d7944e724f7",
        "g": "a103f22c7ee8d82d",
        "name": "",
        "x": 270,
        "y": 200,
        "wires": [
            [
                "deff96f79e54b357"
            ]
        ]
    },
    {
        "id": "f6ee5a147509f8a7",
        "type": "subflow:34a182d43462f44e",
        "z": "e8287d7944e724f7",
        "g": "10821c84251bd152",
        "name": "",
        "x": 230,
        "y": 360,
        "wires": [
            [
                "a1a28835cc78a456"
            ]
        ]
    },
    {
        "id": "c36938b99c6ef84d",
        "type": "link in",
        "z": "e8287d7944e724f7",
        "g": "10821c84251bd152",
        "name": "inserção",
        "links": [
            "15cd7bec8dbe3c11",
            "636b8d437d27c1ae",
            "13fe1aeb38fe44f7"
        ],
        "x": 115,
        "y": 360,
        "wires": [
            [
                "f6ee5a147509f8a7"
            ]
        ]
    },
    {
        "id": "b7ae2ba514a725d7",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "g": "98457142acc80c09",
        "name": "Sincronismo",
        "info": "",
        "x": 150,
        "y": 460,
        "wires": []
    },
    {
        "id": "37b3107ac0c0715b",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "g": "7545bc9af9735841",
        "name": "sincronimo quantidade de dados no banco",
        "info": "",
        "x": 280,
        "y": 540,
        "wires": []
    },
    {
        "id": "be4493f2c2f75c3e",
        "type": "inject",
        "z": "e8287d7944e724f7",
        "g": "7545bc9af9735841",
        "name": "60 min",
        "props": [
            {
                "p": "permanence_date",
                "v": "15",
                "vt": "num"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 600,
        "wires": [
            [
                "20bafe5cc7c9ba94"
            ]
        ]
    },
    {
        "id": "20bafe5cc7c9ba94",
        "type": "subflow:09685600d012d69f",
        "z": "e8287d7944e724f7",
        "g": "7545bc9af9735841",
        "name": "",
        "x": 440,
        "y": 600,
        "wires": []
    },
    {
        "id": "a1a28835cc78a456",
        "type": "subflow:f74e1af5aec31631",
        "z": "e8287d7944e724f7",
        "g": "1c1ece291a498e9c",
        "name": "",
        "x": 440,
        "y": 360,
        "wires": [
            [
                "efcc528c06ac65c3"
            ]
        ]
    },
    {
        "id": "efcc528c06ac65c3",
        "type": "subflow:d48fb9af316b0fe2",
        "z": "e8287d7944e724f7",
        "g": "69ec59095e3f8d2e",
        "name": "",
        "x": 680,
        "y": 360,
        "wires": []
    },
    {
        "id": "7e8e57be847ffa64",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "g": "8d259b92e5c57f37",
        "name": "Comunicação com Banco de dados",
        "info": "",
        "x": 180,
        "y": 60,
        "wires": []
    },
    {
        "id": "66c27d2410b776bc",
        "type": "subflow:38d792f0bb10ea75",
        "z": "e8287d7944e724f7",
        "g": "1ca11c9dc4212a97",
        "name": "",
        "x": 380,
        "y": 760,
        "wires": []
    },
    {
        "id": "f1d443282985b5cf",
        "type": "inject",
        "z": "e8287d7944e724f7",
        "g": "1ca11c9dc4212a97",
        "name": "15 s",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 760,
        "wires": [
            [
                "66c27d2410b776bc"
            ]
        ]
    },
    {
        "id": "41d54b1aa97f9252",
        "type": "comment",
        "z": "e8287d7944e724f7",
        "g": "1ca11c9dc4212a97",
        "name": "sincronismo dados local para o remoto",
        "info": "",
        "x": 270,
        "y": 700,
        "wires": []
    },
    {
        "id": "9b91bb792b3d06c8",
        "type": "function",
        "z": "585db2e7dde94ecd",
        "g": "835a997ebcd59141",
        "name": "function 8",
        "func": "/*date_time_stamp*/\nmsg.payload.data = JSON.parse(JSON.stringify(new Date()));\n\n/*Umidade*/\nmsg.payload.Umidade = msg.payload.Umi\n\n/*Luminosidade*/\nmsg.payload.Luminosidade = msg.payload.Lumi\n\n/*Temperatura*/\nconst variavelT = msg.payload.Temp.toString().split('.');\nmsg.payload.Temperatura = parseInt(variavelT[0].concat(\"\", variavelT[1]))\nmsg.payload.Temperatura_sf = (-1) * variavelT[1].length\n\n/*X*/\nconst variavelX = msg.payload.X.toString().split('.');\nmsg.payload.X = parseInt(variavelX[0].concat(\"\", variavelX[1]))\nmsg.payload.X_sf = (-1) * variavelX[1].length\n\n/*Y*/\nconst variavelY = msg.payload.Y.toString().split('.');\nmsg.payload.Y = parseInt(variavelY[0].concat(\"\", variavelY[1]))\nmsg.payload.Y_sf = (-1) * variavelY[1].length\n\n/*Z*/\nconst variavelZ = msg.payload.Z.toString().split('.');\nmsg.payload.Z = parseInt(variavelZ[0].concat(\"\", variavelZ[1]))\nmsg.payload.Z_sf = (-1) * variavelZ[1].length\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 120,
        "wires": [
            [
                "bec2c6aa409df4c5"
            ]
        ]
    },
    {
        "id": "bec2c6aa409df4c5",
        "type": "template",
        "z": "585db2e7dde94ecd",
        "g": "835a997ebcd59141",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO public.organic_nodes_control_measurement(\n\tdate_time_stamp,\tmessage_counter,\tsetup_id,\tsource, generation)\n\tVALUES ('{{payload.data}}', 0, 1, 0, false);\n\nINSERT INTO public.organic_nodes_control_accelerometermeasurement(\n\tx,\tx_sf, y, y_sf, z, z_sf, measurement_id)\n\tVALUES ({{payload.X}}, {{payload.X_sf}}, {{payload.Y}}, {{payload.Y_sf}}, {{payload.Z}}, {{payload.Z_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (date_time_stamp = '{{payload.data}}') LIMIT 1));\n\nINSERT INTO public.organic_nodes_control_temperaturemeasurement(\n\ttemperature,temperature_sf, measurement_id)\n\tVALUES ({{payload.Temperatura}}, {{payload.Temperatura_sf}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (date_time_stamp = '{{payload.data}}') LIMIT 1));\t\n\nINSERT INTO public.organic_nodes_control_humiditymeasure(\n     humidity, measurement_id)\n\tVALUES ({{payload.Umidade}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (date_time_stamp = '{{payload.data}}') LIMIT 1));\t\n\nINSERT INTO public.organic_nodes_control_luminositymeasure(\n     luminosity, measurement_id)\n     VALUES ({{payload.Luminosidade}}, (SELECT id FROM public.organic_nodes_control_measurement WHERE (date_time_stamp = '{{payload.data}}') LIMIT 1));\t\n\n\n\n\n",
        "output": "str",
        "x": 360,
        "y": 120,
        "wires": [
            [
                "de3cc908c8e5fc7c"
            ]
        ]
    },
    {
        "id": "51760f99a153272a",
        "type": "link in",
        "z": "585db2e7dde94ecd",
        "g": "835a997ebcd59141",
        "name": "sensor",
        "links": [
            "0426568f6f79c9aa"
        ],
        "x": 75,
        "y": 120,
        "wires": [
            [
                "9b91bb792b3d06c8"
            ]
        ]
    },
    {
        "id": "de3cc908c8e5fc7c",
        "type": "subflow:d48fb9af316b0fe2",
        "z": "585db2e7dde94ecd",
        "g": "835a997ebcd59141",
        "name": "",
        "x": 540,
        "y": 120,
        "wires": []
    },
    {
        "id": "967c3bf4ae1f8b46",
        "type": "comment",
        "z": "585db2e7dde94ecd",
        "g": "835a997ebcd59141",
        "name": "Sensor",
        "info": "",
        "x": 90,
        "y": 60,
        "wires": []
    },
    {
        "id": "cf3854e6.653878",
        "type": "exec",
        "z": "9cf3a6d.1104258",
        "g": "3657e7abd62e07dc",
        "command": "sudo reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "winHide": false,
        "name": "Reboot",
        "x": 320,
        "y": 1020,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "4de9dba1.ed7854",
        "type": "exec",
        "z": "9cf3a6d.1104258",
        "g": "3657e7abd62e07dc",
        "command": "sudo shutdown -h now",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "winHide": false,
        "name": "Shutdown",
        "x": 320,
        "y": 1080,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "a508a5b7.89a128",
        "type": "exec",
        "z": "9cf3a6d.1104258",
        "g": "b8ae31859144c0c5",
        "command": "df -h",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "winHide": false,
        "name": "Disk Usage",
        "x": 250,
        "y": 520,
        "wires": [
            [
                "5b885c00f9044571"
            ],
            [],
            []
        ]
    },
    {
        "id": "f71718837a54a08f",
        "type": "function",
        "z": "9cf3a6d.1104258",
        "g": "48a67c268ba3db08",
        "name": "",
        "func": "var str = msg.payload\n\nvar t = (parseInt(str) / 1000).toFixed(2);\n\nreturn {\n    payload : t, \n    temp : t\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 320,
        "wires": [
            [
                "3681e65fd56fee9f",
                "4bae8072.e81c2",
                "d4feb199.b898b"
            ]
        ]
    },
    {
        "id": "6fafd79cb02b87d9",
        "type": "exec",
        "z": "9cf3a6d.1104258",
        "g": "48a67c268ba3db08",
        "command": "cat /sys/class/thermal/thermal_zone0/temp",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "winHide": false,
        "name": "RPi Temp.",
        "x": 390,
        "y": 320,
        "wires": [
            [
                "f71718837a54a08f"
            ],
            [],
            []
        ]
    },
    {
        "id": "5b885c00f9044571",
        "type": "function",
        "z": "9cf3a6d.1104258",
        "g": "b8ae31859144c0c5",
        "name": "",
        "func": "msg.payload = msg.payload.split(\"\\n\")[1];\nmsg.payload = msg.payload.match(/\\d+\\.\\d+G/g) || [];\n\nvar tam         = {\n    payload:msg.payload[0],\n    tam:msg.payload[0].replace(\"G\", '')\n}\nvar use         = {\n    payload:msg.payload[1],\n    use:msg.payload[1].replace(\"G\", '')\n}\nvar free         = {\n    payload:msg.payload[2],\n    free:msg.payload[2].replace(\"G\", '')\n}\n\nreturn [tam, use, free];",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 520,
        "wires": [
            [
                "5e142e90e04342e4",
                "ad4498e0.e7c278"
            ],
            [
                "a002cfd7b7be6b3b"
            ],
            [
                "ee6c1b7c2a94e272",
                "e9ff54e87cb4a07a"
            ]
        ]
    },
    {
        "id": "497ebb96dcfe1dc9",
        "type": "exec",
        "z": "9cf3a6d.1104258",
        "g": "48a67c268ba3db08",
        "command": "cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "winHide": false,
        "name": "RPi CPU Clock",
        "x": 400,
        "y": 200,
        "wires": [
            [
                "d6656179725684ec"
            ],
            [],
            []
        ]
    },
    {
        "id": "d6656179725684ec",
        "type": "function",
        "z": "9cf3a6d.1104258",
        "g": "48a67c268ba3db08",
        "name": "",
        "func": "var str = msg.payload\n\nvar c = (parseInt(str) / 1000000).toFixed(2); // Convertendo para GHz\n\nreturn {\n    payload : c,\n    clock: c\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 200,
        "wires": [
            [
                "105c78ffbb045c78",
                "404f06.1e77b0fc"
            ]
        ]
    },
    {
        "id": "77f4196c4b4e9683",
        "type": "exec",
        "z": "9cf3a6d.1104258",
        "g": "48a67c268ba3db08",
        "command": "top -bn1",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "winHide": false,
        "name": "RPi CPU Use",
        "x": 400,
        "y": 260,
        "wires": [
            [
                "768e50e864cde681"
            ],
            [],
            []
        ]
    },
    {
        "id": "768e50e864cde681",
        "type": "function",
        "z": "9cf3a6d.1104258",
        "g": "48a67c268ba3db08",
        "name": "",
        "func": "var match = msg.payload.match(/\\s*([0-9.]+)%\\s*idle/);\n\nvar idle = match && match[1] ? parseFloat(match[1]) : 0;\n\n// A porcentagem de uso da CPU é a soma de usr, sys e nic\nvar porcentagemUsoCpu = 100-idle\n\nreturn {\n    payload : porcentagemUsoCpu, \n    use : porcentagemUsoCpu\n    }",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 260,
        "wires": [
            [
                "de2f89e08e377527",
                "73708987a7b6747c"
            ]
        ]
    },
    {
        "id": "958bb7fb24c360f9",
        "type": "link in",
        "z": "9cf3a6d.1104258",
        "g": "1105f7cee0a7483b",
        "name": "memoryassessment",
        "links": [
            "5e142e90e04342e4",
            "8ba27fce95d8dd60",
            "ee6c1b7c2a94e272"
        ],
        "x": 115,
        "y": 840,
        "wires": [
            [
                "2832a784255c721e"
            ]
        ]
    },
    {
        "id": "5e142e90e04342e4",
        "type": "link out",
        "z": "9cf3a6d.1104258",
        "g": "b8ae31859144c0c5",
        "name": "memoryassessment",
        "mode": "link",
        "links": [
            "958bb7fb24c360f9"
        ],
        "x": 535,
        "y": 480,
        "wires": []
    },
    {
        "id": "ee6c1b7c2a94e272",
        "type": "link out",
        "z": "9cf3a6d.1104258",
        "g": "b8ae31859144c0c5",
        "name": "memoryassessment",
        "mode": "link",
        "links": [
            "958bb7fb24c360f9"
        ],
        "x": 535,
        "y": 560,
        "wires": []
    },
    {
        "id": "5992919b17c5a783",
        "type": "function",
        "z": "9cf3a6d.1104258",
        "g": "b8ae31859144c0c5",
        "name": "function ",
        "func": "var msg2 = {\n    'MemTotal': msg.payload.MemTotal/1000000,\n    'MemFree': msg.payload.MemFree/1000000\n}\n\nmsg2.ram_used = ((msg2.MemTotal - msg2.MemFree) * 100 / msg2.MemTotal).toFixed(2);\n\nreturn [{ payload: msg2.ram_used , ram_used: msg2.ram_used}, { payload: msg2.MemTotal.toFixed(2) }];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 600,
        "wires": [
            [
                "7a45bf60f5d88d0b",
                "8ba27fce95d8dd60"
            ],
            [
                "751d4c866d282f5f"
            ]
        ]
    },
    {
        "id": "2832a784255c721e",
        "type": "join",
        "z": "9cf3a6d.1104258",
        "g": "1105f7cee0a7483b",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "",
        "propertyType": "full",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 230,
        "y": 840,
        "wires": [
            [
                "c9c843c2a7f1f6db"
            ]
        ]
    },
    {
        "id": "c9c843c2a7f1f6db",
        "type": "function",
        "z": "9cf3a6d.1104258",
        "g": "1105f7cee0a7483b",
        "name": "function 14",
        "func": "msg.payload = {}\n\nif (isNaN(msg.ram_used))\n\tmsg.payload.ram_used = 0\nelse\n\tmsg.payload.ram_used = parseInt(msg.ram_used)\n\n\nif (isNaN(msg.memory_free))\n\tmsg.payload.memory_free = 0\nelse\n\tmsg.payload.memory_free = parseInt(msg.memory_free)\n\n\nif (isNaN(msg.memory_total)){\n    msg.payload = \"\"\n    msg.queryParameters = msg.payload\n    return msg;\n} else\n\tmsg.payload.memory_total = parseInt(msg.memory_total)\n\nvar date_time_stamp = JSON.parse(JSON.stringify(new Date()));\n\nmsg.payload = \"INSERT INTO public.organic_nodes_control_memoryassessment(ram_used, memory_free, memory_total, date_time_stamp, central_id) VALUES (\" +\n\t\t\tmsg.payload.ram_used + ', '+ msg.payload.memory_free + ', ' + msg.payload.memory_total + \", '\"+ date_time_stamp+ \"', \" + env.get('CENTRAL') + \");\"\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 840,
        "wires": [
            [
                "2c4e2c6498879ba7"
            ]
        ]
    },
    {
        "id": "833741c520aa051e",
        "type": "comment",
        "z": "9cf3a6d.1104258",
        "g": "b8ae31859144c0c5",
        "name": "Memory Assessment",
        "info": "",
        "x": 170,
        "y": 460,
        "wires": []
    },
    {
        "id": "7fba4f6acda56415",
        "type": "comment",
        "z": "9cf3a6d.1104258",
        "g": "48a67c268ba3db08",
        "name": "CPU Assessment",
        "info": "",
        "x": 160,
        "y": 140,
        "wires": []
    },
    {
        "id": "404edafd431901a6",
        "type": "comment",
        "z": "9cf3a6d.1104258",
        "g": "1105f7cee0a7483b",
        "name": "Envio ao banco",
        "info": "",
        "x": 160,
        "y": 740,
        "wires": []
    },
    {
        "id": "45883067344c46b6",
        "type": "comment",
        "z": "9cf3a6d.1104258",
        "g": "3657e7abd62e07dc",
        "name": "Funcionalidades Adicionais",
        "info": "",
        "x": 190,
        "y": 960,
        "wires": []
    },
    {
        "id": "725155326c937c25",
        "type": "link in",
        "z": "9cf3a6d.1104258",
        "g": "1105f7cee0a7483b",
        "name": "cpuassessment",
        "links": [
            "105c78ffbb045c78",
            "3681e65fd56fee9f",
            "de2f89e08e377527"
        ],
        "x": 115,
        "y": 800,
        "wires": [
            [
                "819d7d584fcd463f"
            ]
        ]
    },
    {
        "id": "3681e65fd56fee9f",
        "type": "link out",
        "z": "9cf3a6d.1104258",
        "g": "48a67c268ba3db08",
        "name": "cpuassessment",
        "mode": "link",
        "links": [
            "725155326c937c25"
        ],
        "x": 695,
        "y": 320,
        "wires": []
    },
    {
        "id": "819d7d584fcd463f",
        "type": "join",
        "z": "9cf3a6d.1104258",
        "g": "1105f7cee0a7483b",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "",
        "propertyType": "full",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 230,
        "y": 800,
        "wires": [
            [
                "5e3b44aaa25a2f54"
            ]
        ]
    },
    {
        "id": "5e3b44aaa25a2f54",
        "type": "function",
        "z": "9cf3a6d.1104258",
        "g": "1105f7cee0a7483b",
        "name": "function 15",
        "func": "msg.payload = {}\n\nif (isNaN(msg.clock)){\n    msg.payload = \"\"\n    msg.queryParameters = msg.payload\n    return msg;\n}else\n    msg.payload.frequency   = parseInt(msg.clock*1000)\n\nif (isNaN(msg.use))\n    msg.payload.used = 0\nelse\n    msg.payload.used = parseInt(msg.use)\n\nif (isNaN(msg.temp))\n    msg.payload.temp = 0\n\nlet sf = (\"\" + (\"\" + msg.temp).split('.')[1]).length\nmsg.payload.temperature = Math.trunc(msg.temp * Math.pow(10, sf))\nmsg.payload.temperature_sf = -1 * sf\n\nmsg.payload.voltage     = 0\nmsg.payload.voltage_sf  = 0\n\nvar date_time_stamp = JSON.parse(JSON.stringify(new Date()));\n\nmsg.payload = \"INSERT INTO public.organic_nodes_control_cpuassessment(frequency, used, temperature, temperature_sf, voltage, voltage_sf, date_time_stamp, central_id) VALUES (\" +\n                msg.payload.frequency + \",\" + msg.payload.used + \",\" + msg.payload.temperature + \",\" + msg.payload.temperature_sf + \",\" + msg.payload.voltage + \",\" + msg.payload.voltage_sf + \", '\"+ date_time_stamp+ \"', \" + env.get('CENTRAL') + \");\"\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 800,
        "wires": [
            [
                "f756c2a2b9eec448"
            ]
        ]
    },
    {
        "id": "252e1f7447d3d8e4",
        "type": "comment",
        "z": "9cf3a6d.1104258",
        "g": "381b2ac9cf8dfa77",
        "name": "Monitoramento CPU, HD Ram",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "3ef4cfb20fbbd769",
        "type": "inject",
        "z": "9cf3a6d.1104258",
        "g": "381b2ac9cf8dfa77",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 720,
        "y": 1100,
        "wires": [
            [
                "2d7bbf0776b5c43a"
            ]
        ]
    },
    {
        "id": "2d7bbf0776b5c43a",
        "type": "link out",
        "z": "9cf3a6d.1104258",
        "g": "381b2ac9cf8dfa77",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "7d8f6dd38198cb24",
            "86c8aa164e10bf01",
            "831f1f934785ff40"
        ],
        "x": 875,
        "y": 1100,
        "wires": []
    },
    {
        "id": "86c8aa164e10bf01",
        "type": "link in",
        "z": "9cf3a6d.1104258",
        "g": "b8ae31859144c0c5",
        "name": "link in 5",
        "links": [
            "2d7bbf0776b5c43a"
        ],
        "x": 115,
        "y": 560,
        "wires": [
            [
                "a508a5b7.89a128",
                "d420bfa15aacf3e2"
            ]
        ]
    },
    {
        "id": "831f1f934785ff40",
        "type": "link in",
        "z": "9cf3a6d.1104258",
        "g": "48a67c268ba3db08",
        "name": "link in 6",
        "links": [
            "2d7bbf0776b5c43a"
        ],
        "x": 115,
        "y": 260,
        "wires": [
            [
                "9844b596b9c6e557"
            ]
        ]
    },
    {
        "id": "8ba27fce95d8dd60",
        "type": "link out",
        "z": "9cf3a6d.1104258",
        "g": "b8ae31859144c0c5",
        "name": "memoryassessment",
        "mode": "link",
        "links": [
            "958bb7fb24c360f9"
        ],
        "x": 535,
        "y": 600,
        "wires": []
    },
    {
        "id": "de2f89e08e377527",
        "type": "link out",
        "z": "9cf3a6d.1104258",
        "g": "48a67c268ba3db08",
        "name": "cpuassessment",
        "mode": "link",
        "links": [
            "725155326c937c25"
        ],
        "x": 695,
        "y": 260,
        "wires": []
    },
    {
        "id": "105c78ffbb045c78",
        "type": "link out",
        "z": "9cf3a6d.1104258",
        "g": "48a67c268ba3db08",
        "name": "cpuassessment",
        "mode": "link",
        "links": [
            "725155326c937c25"
        ],
        "x": 695,
        "y": 200,
        "wires": []
    },
    {
        "id": "f756c2a2b9eec448",
        "type": "delay",
        "z": "9cf3a6d.1104258",
        "g": "1105f7cee0a7483b",
        "name": "15 s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "15",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 550,
        "y": 800,
        "wires": [
            [
                "93519447ae8f0a25",
                "4fdf18cb138523bc"
            ]
        ]
    },
    {
        "id": "2c4e2c6498879ba7",
        "type": "delay",
        "z": "9cf3a6d.1104258",
        "g": "1105f7cee0a7483b",
        "name": "15 s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "15",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 550,
        "y": 840,
        "wires": [
            [
                "93519447ae8f0a25",
                "4fdf18cb138523bc"
            ]
        ]
    },
    {
        "id": "9844b596b9c6e557",
        "type": "delay",
        "z": "9cf3a6d.1104258",
        "g": "48a67c268ba3db08",
        "name": "5 s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 230,
        "y": 260,
        "wires": [
            [
                "77f4196c4b4e9683",
                "497ebb96dcfe1dc9",
                "6fafd79cb02b87d9"
            ]
        ]
    },
    {
        "id": "f4592b30.2f0528",
        "type": "ui_button",
        "z": "9cf3a6d.1104258",
        "g": "3657e7abd62e07dc",
        "name": "",
        "group": "dd70abe0.14cb38",
        "order": 3,
        "width": "7",
        "height": "1",
        "passthru": false,
        "label": "Reboot",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 160,
        "y": 1020,
        "wires": [
            [
                "cf3854e6.653878"
            ]
        ]
    },
    {
        "id": "4b4a0861.092b28",
        "type": "ui_button",
        "z": "9cf3a6d.1104258",
        "g": "3657e7abd62e07dc",
        "name": "",
        "group": "dd70abe0.14cb38",
        "order": 4,
        "width": "7",
        "height": "1",
        "passthru": false,
        "label": "Shutdown",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 160,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "751d4c866d282f5f",
        "type": "ui_text",
        "z": "9cf3a6d.1104258",
        "g": "b8ae31859144c0c5",
        "group": "466350cf14959bc1",
        "order": 3,
        "width": "6",
        "height": "1",
        "name": "Ram Total",
        "label": "Total:",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": true,
        "font": "Arial Black,Arial Black,Gadget,sans-serif",
        "fontSize": "17",
        "color": "#1bb673",
        "x": 580,
        "y": 640,
        "wires": []
    },
    {
        "id": "7a45bf60f5d88d0b",
        "type": "ui_gauge",
        "z": "9cf3a6d.1104258",
        "g": "b8ae31859144c0c5",
        "name": "Ram Use",
        "group": "466350cf14959bc1",
        "order": 2,
        "width": "4",
        "height": "4",
        "gtype": "donut",
        "title": "Uso",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": true,
        "className": "",
        "x": 600,
        "y": 600,
        "wires": []
    },
    {
        "id": "e9ff54e87cb4a07a",
        "type": "ui_gauge",
        "z": "9cf3a6d.1104258",
        "g": "b8ae31859144c0c5",
        "name": "",
        "group": "89655bc687a2d39e",
        "order": 4,
        "width": "5",
        "height": "5",
        "gtype": "donut",
        "title": "Disponivel",
        "label": "G",
        "format": "{{value}}",
        "min": "0",
        "max": "117.1",
        "colors": [
            "#a60707",
            "#e6e600",
            "#0cac44"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 610,
        "y": 560,
        "wires": []
    },
    {
        "id": "a002cfd7b7be6b3b",
        "type": "ui_gauge",
        "z": "9cf3a6d.1104258",
        "g": "b8ae31859144c0c5",
        "name": "",
        "group": "89655bc687a2d39e",
        "order": 3,
        "width": "5",
        "height": "5",
        "gtype": "wave",
        "title": "Em Uso",
        "label": "G",
        "format": "{{value}}",
        "min": 0,
        "max": "117.1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 580,
        "y": 520,
        "wires": []
    },
    {
        "id": "ad4498e0.e7c278",
        "type": "ui_gauge",
        "z": "9cf3a6d.1104258",
        "g": "b8ae31859144c0c5",
        "name": "",
        "group": "89655bc687a2d39e",
        "order": 2,
        "width": "5",
        "height": "5",
        "gtype": "compass",
        "title": "Tamanho Total",
        "label": "G",
        "format": "{{value}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 620,
        "y": 480,
        "wires": []
    },
    {
        "id": "404f06.1e77b0fc",
        "type": "ui_gauge",
        "z": "9cf3a6d.1104258",
        "g": "48a67c268ba3db08",
        "name": "",
        "group": "9cb4bc4d.96552",
        "order": 3,
        "width": "5",
        "height": "5",
        "gtype": "compass",
        "title": "CPU Clock",
        "label": "GHz",
        "format": "{{value}}",
        "min": 0,
        "max": "2",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 770,
        "y": 200,
        "wires": []
    },
    {
        "id": "d4feb199.b898b",
        "type": "ui_gauge",
        "z": "9cf3a6d.1104258",
        "g": "48a67c268ba3db08",
        "name": "",
        "group": "9cb4bc4d.96552",
        "order": 2,
        "width": "5",
        "height": "5",
        "gtype": "donut",
        "title": "CPU Temperatura",
        "label": "ºC",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "35",
        "seg2": "60",
        "diff": false,
        "className": "",
        "x": 770,
        "y": 320,
        "wires": []
    },
    {
        "id": "73708987a7b6747c",
        "type": "ui_gauge",
        "z": "9cf3a6d.1104258",
        "g": "48a67c268ba3db08",
        "name": "",
        "group": "9cb4bc4d.96552",
        "order": 3,
        "width": "5",
        "height": "5",
        "gtype": "donut",
        "title": "CPU Uso",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 760,
        "y": 260,
        "wires": []
    },
    {
        "id": "4bae8072.e81c2",
        "type": "ui_chart",
        "z": "9cf3a6d.1104258",
        "g": "48a67c268ba3db08",
        "name": "",
        "group": "9cb4bc4d.96552",
        "order": 7,
        "width": "15",
        "height": "6",
        "label": "CPU Temperatura",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "50",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 770,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "d420bfa15aacf3e2",
        "type": "Memory",
        "z": "9cf3a6d.1104258",
        "g": "b8ae31859144c0c5",
        "name": "",
        "x": 240,
        "y": 600,
        "wires": [
            [
                "5992919b17c5a783"
            ]
        ]
    },
    {
        "id": "4fdf18cb138523bc",
        "type": "postgresql",
        "z": "9cf3a6d.1104258",
        "g": "1105f7cee0a7483b",
        "name": "Local",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "a9a656a76fe9053e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 690,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "93519447ae8f0a25",
        "type": "postgresql",
        "z": "9cf3a6d.1104258",
        "g": "1105f7cee0a7483b",
        "name": "NOCS",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "0d6f9b7c5d109b4b",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 690,
        "y": 780,
        "wires": [
            []
        ]
    }
]